<DOC>
<DOCNO>EP-0629060</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Modifying check codes in data packet transmission
</INVENTION-TITLE>
<CLASSIFICATIONS>B29C6536	G06F1110	B29C6500	H04L100	H03M1309	H03M1300	H03M900	B29C6568	G06F1110	H04L100	H03M900	B29C6566	B29C6534	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>B29C	G06F	B29C	H04L	H03M	H03M	H03M	B29C	G06F	H04L	H03M	B29C	B29C	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>B29C65	G06F11	B29C65	H04L1	H03M13	H03M13	H03M9	B29C65	G06F11	H04L1	H03M9	B29C65	B29C65	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A scheme for altering checking information in a message packet 
intended to be transmitted between computers is described. In 

this scheme, when an information portion of the packet is 
altered, checking bits contained in the packets are altered in 

dependence only on the set of checking bits in the message 
packet before modification of the information portion and on 

the modifications to the information portion. Thus, it is not 
necessary to generate new checking bits from a modified 

information portion. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
SGS THOMSON MICROELECTRONICS
</APPLICANT-NAME>
<APPLICANT-NAME>
STMICROELECTRONICS LIMITED
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
WALKER CHRITOPHER PAUL HULME
</INVENTOR-NAME>
<INVENTOR-NAME>
WALKER, CHRITOPHER PAUL HULME
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to the generation of checking data, in
particular for checking transmitted messages.Most efficient coding schemes used for message transmission
have the effect that a single-bit error in the received data
can turn into a multiple-bit error when decoded. Conventional
schemes overcome these multiple-bit errors using cyclic
redundancy checks (CRCs). These CRCs take the form of several
checking bits transmitted at the end of a message or message
packet. So-called data-strobe links, i.e. two wire links
which have one wire carrying data and one wire carrying clock
signals, carry very short packets, as short as 14 bits for an
acknowledgement packet which comprises a ten bit data token (8
bits of data, one parity bit and one flag bit) and a four bit
end of packet token ( one parity bit, one flag bit and two
control bits). Adding a CRC to each packet could at least
double the length of the packet.It is thus more appropriate to consider adding a CRC to a
message comprising a plurality of packets rather than to a
packet itself. This can be quite efficient, for example a 4
byte CRC could check a message having a length of 4 Kbytes.
However, this gives rise to problems when messages are to be
routed through a processor network using routing switches.
Messages may be transmitted as a plurality of packets, each
packet being a self-contained transmissible unit having an
address portion or header, a data portion and an end of packet
(EOP) indicator. Where the packet is the last packet in a
message, this EOP indicator is replaced by an end of message
(EOM) indicator. It is known that when routing messages
through a network comprising a plurality of routing switches,
headers can be altered. In one known routing arrangement, a
packet has two headers, one header identifying a logical
channel within a remote processor to which the message is to
be sent and which remains unaltered until the message reaches 
its final destination and another header which identifies the
terminal link of a network connected to the final
destination. In that case, the header identifying the final
destination is removed at that processor to reveal the logical
channel header.Where the network comprises a plurality of sub-networks, the
packet can be transmitted with a plurality of headers, the
first one of which identifies the outgoing link of a first
sub-network. When the packet reaches that link, the first
header is removed to reveal a second header identifying the
outgoing link of a second sub-network. That link could be
</DESCRIPTION>
<CLAIMS>
A method of modifying a message packet which comprises a
plurality of sets of information bits constituting an information

portion (DP) and a set of checking bits (CHECKSUM), the method
comprising:


modifying the information portion (DP) of said message
packet, 
characterised in that
:-

all said sets contain the same number of bits in a sequence
of bit locations between a bit location of least significance to

a bit location of most significance and each checking bit has
been generated by taking the logical sum of bits in all of the

sets having the same significance in all of the sets; and
said method further comprises altering the checking bits
(CHECKSUM) by using only the modifications to the information

portion (DP) and the unmodified message packet checking bit of
corresponding significance to each said modification.
A method according to claim 1, wherein the step of modifying
the information portion (DP) comprises inverting at least one

information bit in a place of certain significance within a set
of bits and wherein the step of altering the checking bits

(CHECKSUM) comprises inverting the bit in the place of same
significance in the set of checking bits.
A method according to claim 1, wherein the step of modifying
the information portion (DP) comprises adding or deleting a set

of bits and wherein the step of altering the checking bits
(CHECKSUM) comprising taking the exclusive-OR of each bit within

said added or deleted set with the bit in a place of
corresponding significance within the set of checking bits.
A method according to claim 1, 2, or 3, wherein the message
packet is arranged for serial transmission with the information

portion (DP) preceding the set of checking bits (CHECKSUM).
A method according to claim 4, wherein the message packet 
includes a terminator portion (TP) following said information

portion (DP), said terminator portion including control
information (CONTROL) defining the end of packet and set of

checking bits (CHECKSUM).
A method according to any preceding claim, wherein the
information portion (DP) of said message packet includes a header

portion (HP) comprising at least one set of address bits (HO).
A method according to claim 6, wherein the header portion
(HP) comprises a plurality of sets of address bits (HO-H4)

providing first and second headers and wherein said step of
modifying the information portion (DP) comprising removing one of

said headers.
A method according to any of claim 1 to 7, wherein the step
of modifying the information portion (DP) includes adding at

least one set of address bits to said packet.
A method according to any preceding claim, wherein each set

of bits has four bits.
A method according to claim 7, or claim 8 or 9 when dependent on
claim 6, wherein each header is one byte.
A method of transmitting a message packet between source and
destination nodes (8) via a network having a plurality of routing

nodes (2), wherein a method of modifying the message packet
according to any one of claims 1 to 10 is effected at at least

one node in the network.
Circuitry for modifying a message packet comprising a
plurality of sets of bits constituting an information portion

(DP) of said packet and a set of checking bits (CHECKSUM), said
circuitry comprising:


an input circuit (12) for receiving said message packet; and
means for modifying the information portion of said message 
packet, 
characterised in that
:-

all said sets containing the same number of bits in a
sequence of bit locations between a bit location of least

significance and a bit location of most significance, and each
checking bit having been generated by taking the logical sum of

bits in all the sets having the same significance, in all of the
sets; and
said circuitry further comprises a checking bit generator
(14) operable to modify the received checking bits using only the

modifications to the information portion and the received
checking bits of the corresponding significance to each said

modifications.
Circuitry according to claim 12, wherein the checking bit
generator (14) comprises logic circuitry (42-45) for taking the

exclusive-OR of checking bits with modified information bits
having the same place of significance in their respective sets.
A routing switch (2) for receiving and routing message
packets comprising circuitry according to claim 12 or 13.
A routing switch according to claim 14, which comprises a
header deletion circuit (136) for deleting a set of bits from

said information portion before routing the message packet.
A routing switch according to claim 14 or 15 which comprises
header addition circuitry for adding a set of address bits to

said information portion before routing the message packet.
</CLAIMS>
</TEXT>
</DOC>
