<DOC>
<DOCNO>EP-0638860</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method of validating travelling object-oriented programs with digital signatures
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F2122	G06F944	G06F100	G06F1300	G06F946	G06F2122	G06F950	G06F2100	G06F100	G06F944	G06F946	G06F1300	G06F2100	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F21	G06F9	G06F1	G06F13	G06F9	G06F21	G06F9	G06F21	G06F1	G06F9	G06F9	G06F13	G06F21	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method of operating computers in accordance with an enhanced object-oriented 
programming methodology creates a framework for efficiently performing automated business 

transactions. The object-oriented programming methodology is used in conjunction with a 
travelling program, i.e., a digital data structure which includes a sequence of instructions and 

associated data which has the capability of determining at least one next destination or 
recipient for receiving the travelling program and for transmitting itself, together with all 

relevant data determined by the program to the next recipient or destination Using the 
methods described herein, the data is more closely bound to the program in such a way that 

objects may be most efficiently transferred from one computer user to another without the 
objects being previously known to the recipient computer user. The present invention utilizes 

object "cells" which are data structures stored, for example, on a disk that reflects a 
collection of (related) objects instances whose execution has been suspended, and which can 

be resumed later on the same or a different platform. The collection of object instances can 
be gathered together into cells (or "elect
ronic forms") suitable for storage or transmission to 
another computer user in such a way that instances are unambiguously bound to their 

respective class definition. The present invention also creates improved tools for creating and 
using cells so that electronic forms can be defined using object-oriented techniques while 

allowing such forms to be easily transferred among a diverse population of computer users 
without demanding that all users maintain compatible libraries of all object-class definition 

programs and without demanding that all users maintain identical synchronized versions of 
that class. The invention provides a digital signature methodology to insure security and 

integrity, so that electronic forms (i.e., cells) composed of a collection of objects can be 
received and executed by a user without putting the user at risk that some of the object 

classes embedded in the cell might be subversive "trojan horse" programs that might steal, 
destroy or otherwise compromise the security or integrity of the user's system or data. 


</ABSTRACT>
<APPLICANTS>
</APPLICANTS>
<INVENTORS>
</INVENTORS>
<DESCRIPTION>
The invention generally relates to apparatus and a method for operating digital
computers under the control of object-oriented programs. More particularly, the invention
relates to a method and apparatus for validating unique travelling object-oriented programs
using digital signature methodology.This application is related to allowed US application Serial Number 07/863,552 filed
on April 6, 1992, entitled, "Method and Apparatus for Creating, Processing and Using
Travelling Programs" (hereinafter "Travelling Program Application") and to US application
Serial Number 07/853,868, filed on Mai 15, 1992, entitled "Computer System Method and Apparatus Using
Program Authorization Information (hereinafter "Program Authorization Information
Application").The present invention as set out in claim 1 is directed to a method for operating a digital
computer in accordance with a powerfully enhanced object-oriented programming
methodology.In object-oriented programming using existing object-oriented languages, such as,
"C," and "Small Talk," programmers are able to define object "data types" (or "classes") 
which are data structures each associated with a program that knows how to process that
data type. Object-oriented programming permits existing programs to be reused and extended
without having to modify the program. This feature of object oriented programming
is known as the "inheritance feature* and is the ability to define new data type
classes derived as "extensions" of other (more fundamental) data classes.The extension class only needs to define those functions (known as the object's
"methods") for the new data type which differ from the existing ("base") class. Such
methods may be entirely new or may supersede (by replacing or augmenting) methods
defined for the base class. This simplifies the creation of novel variations of existing data
classes, either by adding new functions or by superseding (modifying) existing functions.Some object-oriented methodologies allow "multiple inheritance" whereby there can
be more than one "base" class from which a given class inherits characteristics. The
present invention contemplates the possible use of multiple inheritance. The lineage of a
given class is the aggregate set of its base class(es) together with the base class' lineage.Using more conventional "procedural" programming methodologies, different data
types are processed in different manners based upon processing rule defined for the data
type. Object-oriented programming provides a different processing
</DESCRIPTION>
<CLAIMS>
A method of processing information among computers in a
communication system having a plurality of digital computers coupled to a

channel over which computers exchange digital messages, said method
comprising the steps of:


executing on a first computer a sequence of digital program instructions
including instructions which determine at least one next destination that

receives the sequence of instructions, said sequence of instructions defining a
plurality of associated programs, which are bound together; and
transmitting to said next destination digital information comprising at
least said plurality of associated programs together with accompanying digital

data associated with said sequence of instructions, said accompanying digital
data including at least one digital signature suitable for insuring security and/or

integrity of the user's system and/or data.
A method according to Claim I in which a collection of object
instances for transmission to another computer user are gathered together into a

cell.
A method according to Claim 2 in which critical portions of the cell are
digitally signed whereas non-critical portions of the cell are not digitally

signed.
</CLAIMS>
</TEXT>
</DOC>
