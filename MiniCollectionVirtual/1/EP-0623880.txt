<DOC>
<DOCNO>EP-0623880</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Crossbar switch for multiprocessor system
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1314	G06F15173	H04Q1104	G06F15167	G06F1516	G06F1516	H04L1256	G06F1314	H04L1256	H04Q1104	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	H04Q	G06F	G06F	G06F	H04L	G06F	H04L	H04Q	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F13	G06F15	H04Q11	G06F15	G06F15	G06F15	H04L12	G06F13	H04L12	H04Q11	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A self-routing crossbar switch (100) is disclosed. 
The self-routing crossbar switch (100) interconnects a 

plurality of processors with a plurality of memory modules. 
In a self-routing crossbar switch (100) connecting N 

processors and N memory modules, a processor is connected 
to each input port (103) and a memory module is connected 

to each output port(102); each of the N processors can 
transmit a memory request simultaneously provided that 

there is no port contention and no bank contention. Port 
contention occurs if two or more processors attempt to 

access the same output port of the self-routing crossbar 
switch (100) at the same time. The memory module consists 

of several memory banks that are connected in an 
interleaved manner. If the memory bank is accessed before 

it is ready to accept a new request, bank contention is 
said to have occurred. In the proposed invention, the 

requests directed to a port are first passed through an 
aligner (116) and a conflict resolution logic (117). There 

is one aligner (116) associated with each output port. The 
aligner (116) inputs the requests directed at an output 

port and aligns them so that at the output of the aligner, 
all the active requests appear in a consecutive fashion. 

The conflict resolution logic (117) facilitates to resolve 
the port and bank contention. 


</ABSTRACT>
<APPLICANTS>
</APPLICANTS>
<INVENTORS>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a crossbar switch in a
multi-processor system.In a multiprocessor system, a self-routing crossbar switch
is often used to connect a plurality of processors with a
plurality of memory modules. The processors are connected to the
input ports and memory modules to the output ports. In vector
processing computers, the processors are vector processing units
that perform the same operation on multiple data streams. For
example, an operation may consist of fetching a pair of operands
from two arrays A and B present in the memory, adding the fetched
pair and storing the result back into the memory in a third array
C. To fully utilize the processing capability of the vector
processing units (VPUs), it is necessary that the operands
required to perform the operation are made available to the VPUs
at a rate that is commensurate with their processing capability.
Self-routing crossbar switches can be used to interconnect the
VPUs with the memory modules so that if the VPUs access different
output ports, all the VPU accesses to the memory can progress
simultaneously. The self-routing crossbar switches can also be
used to interconnect general purpose processing units to achieve
very high system throughout. The self-routing crossbar switches
also find applications in telephone exchanges where a number of
subscribers have to be interconnected simultaneously. The ATM
(Asynchronous Transfer Mode) switch is an example of a
self-routing crossbar switch extensively used in the
telecommunications.Consider a self-routing crossbar switch consisting of 2N 
ports, N processors are connected on one side and N memory
modules to the other side to the ports of the self routing
crossbar switch. If the N processors access the N memory
modules, all the accesses can progress simultaneously. The bank
conflict issue is ignored for a moment to simplify the
discussion. If more than one processor attempts to access the
same port at the same time, port conflict is said to occur. The
input requests have to be serviced sequentially. If more
requests arrive at the said port when the previous requests have
not been serviced, the incoming requests have to be stored
temporarily.The requests are stored in a first-in first-out (FIFO)
buffer, for example. In Mark J. Karol et al. "Input Versus
Output Queueing on a Space-Division Packet Switch", IEEE
Transaction on Communication, Vol. COM-35, No. 12, December,
1987, there is disclosed a technology for reducing influence of
port conflict by providing FIFO buffer at input
</DESCRIPTION>
<CLAIMS>
A crossbar switch in a multi-processing system, in
which each of memory access requests from a plurality of

processors at an input side is transferred to an
arbitrarily selected one of a plurality memory modules at

an output side, wherein when a plurality of
memory access requests are generated for the same memory

module at the output side, respective memory access
requests for the relevant memory module are aligned and

serialized, the
crossbar switch characterized by comprising:


N input ports (101) respectively connected to N
processors, wherein N is an integer;
N output ports (102) respectively
connected to N memory modules, comprising:
decoder means (104) connected to respective input
ports, for distributing memory access requests from said

processors according to designation of output ports as
destination ports by said memory access requests;
N x N first-in first-out buffers (106) provided at
respective outputs of said decoder and separated into

groups containing N buffers having the same destination
port,
N input and N output aligning means (116) provided for
respective groups of N x N first-in first-out buffers, for

aligning effective memory access requests in series; and
serializing means (117) serializing the memory access
requests aligned by said aligner a
nd outputting to said 
output ports of the respective relevant groups.
A crossbar switch (100) as set forth in claim 1,
wherein said N inputs and N outputs aligning means (116)

comprises:

two N/2-inputs and N/2-output aligners (191, 192)
for respectively inputting to N/2-input ports among N

input ports of said N inputs and N outputs aligning means;
and
N inputs and N outputs routing means (193) for
inputting two outputs from said two N/2-inputs and

N/2-outputs of aligners and shifting forward the memory access
requests in order so that said memory access requests are

aligned in series.
A crossbar switch (100) as set forth in claim 2,
wherein said N inputs and N outputs aligner

comprises:

two N/2-inputs and N/2-output aligners (191, 192)
for respectively inputting to N/2-input ports among N

input ports of said N inputs and N outputs aligning means;
and
an N inputs and N outputs routing means (193) for
inputting two outputs from said two N/2-inputs and

N/2-outputs of aligners and shifting forward the memory access
requests in order so that said memory access requests are

aligned in series,
in which the minimum units are 2 inputs and 2 outputs
aligning means and 4 inputs and 4 outputs routing means.
A crossbar switch (100) as set forth in claim 2,
wherein said N inputs and N outputs routing means (193)

outputs the memory access request at the ith input port to
the ith output port until the first input port, to which no

effective memory access request is input through scanning
over the first input port to the Nth input port, and

assuming the first input port having no effective memory
access request being jth input port, with 1 
<
 j 
<
 N/2, the
memory access requests on the (N/2 +1)th to Nth input ports

are output respectively through jth to (j+ N/2 -1)th output
port.
A crossbar switch (100) as set forth in claim 1,
wherein said serializing means (117) include N-stage

shift registers (160) taking the outputs of N inputs
and N outputs aligning means (116) as inputs for respective

stages, and the outputs (132, 152) from the leading stage
being output to the outputs of said groups.
A crossbar switch (100) as set forth in claim 5,
wherein said serializing means (117) includes a counter

(179) for counting memory cycles per memory bank forming
said memory modules, so as to maintain said shift registers

(160) in hold condition until the counting is completed
when counting of the predetermined memory cycles by said

counting means corresponding to the memory bank to be
accessed is held incomplete.
</CLAIMS>
</TEXT>
</DOC>
