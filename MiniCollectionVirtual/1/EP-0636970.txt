<DOC>
<DOCNO>EP-0636970</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Methods and apparatus for naming security in an object-oriented system
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F944	G06F944	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A secure naming model for objects in an object-oriented system, 
wherein names are bound to objects within context objects. The context objects are 

implemented by name servers, and clients request that a context object "resolve" 
the name for the object. The name server that implements the context returns a 

duplicate of the desired object. If a name resolution involves more than one name 
server, an assurance of security is provided by the first name server to the second 

name server. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
SUN MICROSYSTEMS INC
</APPLICANT-NAME>
<APPLICANT-NAME>
SUN MICROSYSTEMS, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
HAMILTON GRAHAM
</INVENTOR-NAME>
<INVENTOR-NAME>
NELSON MICHAEL N
</INVENTOR-NAME>
<INVENTOR-NAME>
RADIA SANJAY R
</INVENTOR-NAME>
<INVENTOR-NAME>
HAMILTON, GRAHAM
</INVENTOR-NAME>
<INVENTOR-NAME>
NELSON, MICHAEL N.
</INVENTOR-NAME>
<INVENTOR-NAME>
RADIA, SANJAY R.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to the field of object-oriented
programming. More particularly, the present invention relates to a secure naming
model for objects in an object-oriented system.An object in an object-oriented system typically comprises a
collection of data and a set of functions for manipulating the collection of data.
The collection of data is referred to as state data for the object. The functions for
manipulating the state data are referred to as operations. Each object corresponds
to an object manager. The object manager is a server that performs the operations
for the object and that maintains the state data in the object.Typically, a client sends a message to the object to perform an
operation. The message usually invokes one of the operations within the object .
The message typically comprises an operation selector and a set of parameter data.
The operation selector selects the operation within the object for manipulating of
the object. The parameter data typically provides external information employed
by the invoked operation. The operation usually returns a return value to the
client after completion of the operation. The return value typically provides the
results of the operation. A naming service is usually employed to simplify access to objects in
an object-oriented system. A naming service associates names to the objects
within the system. The functions of a naming service are typically performed by
one or more name servers. Each name server contains a list of name to object
associations.A client typically issues requests to a name server to resolve a
requested name and return a duplicate of the object corresponding to the
requested name. In a typical object-oriented system, each name server can create
duplicates of the objects. As a consequence, the access to the name servers should
be secure.A prior art object oriented operating system is described in an article entitled
"Considerations of persistence and security in Choices, an Object-Oriented
Operating System", Campbell and Madany, proceedings of the International
Workshop on Computer Architectures to Support Security and Persistence of
Information, May 1990, Bremen, Germany, pages 289-300. It is therefore an object of the present invention to provide a secure
naming model for the objects in the object-oriented system.The above and other objects are provided by a secure naming model
for objects in an object-oriented system, as set forth in appended claims 1 and
5. Names are bound to objects within context objects. The
</DESCRIPTION>
<CLAIMS>
A method for providing a secure naming system for a set of objects in an
object-oriented system having a plurality of name servers, said method comprising

the steps of:

implementing a first context object in a first name server, said first context
object comprising a first encapsulated principal identifier and at least one name

binding, each of said name bindings comprising a name and an object;
implementing a second context object in a second name server, said
second context object comprising a second encapsulated principal identifier and at

least one name binding, each of said name bindings comprising a name and an
object;
binding a desired first object to a first object name within said second
context object;
requesting said desired first object for a client using a path name comprised
of said second context name and said first object name and a desired set of

access rights; and
resolving said request for said desired first object by performing the steps of
resolving said second context name to receive a representation of said
second context object located in said second name server;
assuring said second name server that a name resolution from said first
name server to said second name server is secure;
resolving said first object name within said second context object to receive
a duplicate of said desired object that encapsulates the first encapsulated principal

identifier and the desired access rights.
The method of claim 1, wherein said step of assuring said second name
server that a name resolution from said first name server to said second name

server is secure comprises the steps of:

comparing said first encapsulated principal identifier in said first context
object with said second encapsulated principal identifier in said second context

object; and 
granting assurance if said first encapsulated principal identifier and said
second encapsulated principal identifier are equal.
The method of claim 1, wherein said step of assuring said second name
server that a name resolution from said first name server to said second name

server is secure comprises the step of providing a special relationship between
said first name server and said second name server such that said second name

server trusts said first name server.
The method of claim 1, wherein said step of assuring said second name
server that a name resolution from said first name server to said second name

server is secure comprises the steps of:

raising a "cannot proceed" exception with said client;
returning a powerless duplicate of said second context object and said first
object name to said client; and

authenticating said client with said second name server.
An apparatus for providing a secure naming system for a set of objects in
an object-oriented system having a plurality of name servers, comprising;


a first name server, said first name server having at least one context
object, each of said context objects having an encapsulated principal identifier;
a first context object within said first name server, said first context object
comprising a first encapsulated principal identifier and at least one name binding,

each of said name bindings comprising a name and an object;
a second name server, said second name server having at least one
context object, each of said context objects having an encapsulated principal

identifier;
a second context object within said second name server, said second
context object comprising a second encapsulated principal identifier and at least

one name binding, each of said name bindings comprising a name and an object;
means for binding said second context object to a second context name
within said first context object; 
means for binding a desired first object to a first object name within said
second context object;
means for requesting said desired first object for a client using a path name
comprised of said second context name and said first object name and a desired

set of access rights; and
means for resolving said request for said desired first object by resolving
said second context name to receive a representation of said second context

object located in said second name server, and then assuring said second name
server that a name resolution from said first name server to said second name

server is secure, and then resolving said first object name within said second
context object to receive a duplicate of said desired object that encapsulates the

first encapsulated principal identifier and the desired access rights.
The apparatus of claim 5, wherein said means for assuring said second
name server that a name resolution from said first name server to said second

name server is secure comprises:

means for comparing said first encapsulated principal identifier in said first
context object with said second encapsulated principal identifier in said second

context object; and
means for granting assurance if said first encapsulated principal identifier
and said second encapsulated principal identifier are equal.
</CLAIMS>
</TEXT>
</DOC>
