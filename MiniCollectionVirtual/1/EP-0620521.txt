<DOC>
<DOCNO>EP-0620521</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method for dynamically building dialog boxes.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F314	G06F314	G06F944	G06F944	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method for dynamically building dialog boxes (240) within a graphical 
user interface application (225). A description language (230) is provided to build a 

description file which contains dialog box templates. This method accommodates content 
changes of the dialog boxes by using the templates for each dialog box; this template will 

grow or shrink according to its content requirements. The present method performs 
two functions: (1) provides initial positioning of dialog elements (420) and (2) sets 

special positioning requirements (450). The present method proceeds sequentially through 
the description file so that elements that are described first within the file will be 

positioned first within the dialog box. In a preferred embodiment, the starting point of 
each dialog box is the upper left-hand corner. In this manner, prior defined elements will 

appear above or to the left of subsequent defined elements. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
HEWLETT PACKARD CO
</APPLICANT-NAME>
<APPLICANT-NAME>
HEWLETT PACKARD CO
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
DEHART DANIEL L
</INVENTOR-NAME>
<INVENTOR-NAME>
KRAUSE MICHAEL D
</INVENTOR-NAME>
<INVENTOR-NAME>
DEHART DANIEL L
</INVENTOR-NAME>
<INVENTOR-NAME>
KRAUSE MICHAEL D
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to graphical user interfaces and 
more particularly to a method of dynamically building dialog boxes for a graphical 
user interface. Graphical user interfaces (GUIs) are provided to facilitate end-user 
interaction with a computer applications program. One part of a GUI is the dialog 
box-- an area of the screen which controls program queries and end-user responses. 
Typical dialog boxes are defined during program development by a computer 
applications developer. These dialog boxes, however, cannot be easily changed once 
they are defined; in other words, typical dialog boxes cannot be changed dynamically. 
Thus, any changes that would be required must be done manually. This is a very 
time-consuming effort, especially in applications that contain hundreds of dialog 
boxes. For example, a dialog box and its associated controls have fixed 
dimensions which are defined in a resource file using a common application program 
interface (API). If text strings associated with the dialog box were to change, the 
dimensions of this new string (i.e., height and extent) might be different than the 
original string. Thus, to accommodate the new string, the dimensions of the dialog 
box and its associated controls would need to be manually changed. The present invention provides a method for dynamically building 
dialog boxes within a GUI application. This method accommodates content changes 
of the dialog boxes by providing a dynamic template for each dialog box; this 
template will grow or shrink according to its content requirements. One advantage 
of this method is in the area of language translations. When a software product is  
 
translated to a different language, the text size will often change both in height and 
extent. Using the dynamic dialog box method, language translations are facilitated 
since there is no need to change the overall features of every dialog box; only the text 
needs changing. Generally, an applications developer specifies the relative placements 
and dimensions of every element within a dialog box using a description language 
which is provided to facilitate this method. A description file is created which 
contains templates for the developer-defined dialogs. Included in the dialog templates 
are special positioning requirements. Once the description of the dialog boxes is written, the present method 
performs two functions: (1) provides initial positioning of dialog elements and (2) 
sets special positioning requirements. The present
</DESCRIPTION>
<CLAIMS>
A method of dynamically building a dialog box (240) in a graphical user interface 
(225) that includes a display screen, and a description file containing at least one element, 

the method comprising the computer-implemented steps of: 

(1) retrieving (505) the at least one element from the description file; 
(2) setting initial positioning (420) for the at least one element within the 
dialog box; 
(3) determining whether special positioning is required (450) for the at least 
one element; 
(4) setting special positioning (820) for the at least one element within the 
dialog box if step (3) determines special positioning is required; and 
(5) displaying the dialog box (480) to the display screen. 
The method of claim 1, wherein step (2) further comprises the step of setting 
relative x-axis and y-axis positions (510) with respect to an origin of the dialog box. 
The method of claim 2, wherein the origin is an upper left-hand corner of the 
dialog box. 
The method of claim 1, wherein step (2) further comprises the steps of: 
determining (515) whether the at least one element is a frame element; and 

retrieving a second element (505) from the description file if the at least one 
element is a frame element. 
A description language controller (332) for building a description file, the 
description file containing a plurality of templates for building a plurality of dialog boxes, 

the description language controller comprising: 
   an initial placement process (335) connected to the controller; 

   an uniform control dimensions process (336) connected to the controller; 
   a special placement process (337) connected to the controller; and 

   a stretch controller process (338) connected to the controller, 
   wherein the description language controller passes control to the processes and 

receives information from the processes as the description file is being built. 
</CLAIMS>
</TEXT>
</DOC>
