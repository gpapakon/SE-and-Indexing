<DOC>
<DOCNO>EP-0612031</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Image processing.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06T1510	G06T1540	G06T1740	G06T1740	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06T	G06T	G06T	G06T	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06T15	G06T15	G06T17	G06T17	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The generation of rendering order lists, or directed 
graphs is performed as a pre-process for an interactive 

three-dimensional graphic system. Notional viewing axes 
are selected and a rendering order list, tree or directed 

graph is produced for each of these axes. 
A rendering order list, tree or graph is produced 
by selecting a favourite polygon for placing on said 

list, tree or graph. The favourite polygon is compared 
with a candidate polygon, to determine whether said 

candidate polygon can prevent the favourite from being 
added to the rendering order list, tree or graph. On 

detecting that the candidate polygon can prevent the 
favourite polygon from being added to the rendering order 

list, tree or graph, an indication of the selected 
favourite polygon is stored and another favourite polygon 

is then selected. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
CANON KK
</APPLICANT-NAME>
<APPLICANT-NAME>
CANON KK
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
OTTO GERHARDT PAUL
</INVENTOR-NAME>
<INVENTOR-NAME>
OTTO GERHARDT PAUL C O CANON R
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a method and 
apparatus for image processing. In particular, the 
present invention relates to a method and apparatus for 
processing data representing the position of surface 
primitives such as polygons in three-dimensional space, 
for example to produce an ordered list for rendering 
views of said primitives in two-dimensional space. In an interactive three-dimensional graphics system, 
such as a system of the type disclosed in the Applicant's 
copending European Patent Publication No. EP-A-0531157 
(not published at the first claimed priority date), data 
representing polygons is manipulated in three-dimensional 
space interactively, in response to input commands from 
an operator. Two-dimensional images are presented to an 
operator at a rate sufficient to maintain a closed 
feedback loop between the operator and the virtual three-dimensional 
environment. A two-dimensional image is generated by rendering the 
three-dimensional image data onto a two-dimensional 
plane. For each view, "hidden surface removal" can be 
performed by ensuring that primitives which occlude other 
primitives are rendered into the two-dimensional plane 
either instead of the primitives which they occlude or 
at least after said occluded polygons. Often the  
 
occlusions are partial, therefore it is preferable to 
render occluded polygons prior to rendering the occluding 
polygons. In addition, totally invisible primitives may 
be culled and do not require further consideration during 
the rendering process. Thus, it can be appreciated that 
a very important aspect of the rendering process involves 
ensuring that the primitives are rendered in the correct 
order. However, determining the correct order for 
rendering, repeatedly for each iteration, would account 
for a considerable proportion of the available processing 
time. A system for producing rendering order lists is 
disclosed in the aforesaid copending European Patent 
Publication, in which said lists are produced as a pre-process, 
using a topological sort, prior to interactive 
operation. If necessary, a plurality of view 
orientations are selected and a rendering order list is 
produced for each of these views. During interactive 
operation, one of these rendering order lists is selected 
by comparing the actual view orientation with the pre-processed 
orientations, to determine which is the closest 
fit. Thus, the computational overhead required during 
interactive operation is reduced significantly. The invention provides a
</DESCRIPTION>
<CLAIMS>
A method of processing data defining surface 
primitives in three-dimensional space, to produce 

rendering order lists, trees or directed graphs, wherein 
a favourite primitive 
is selected for placing on a 
rendering order list, tree or graph, and wherein the 

method includes comparing said favourite primitive with 
a candidate primitive to determine whether said candidate 

primitive can prevent the favourite primitive from being 
added to a rendering order list, tree or graph and, on 

detecting that the candidate primitive can prevent the 
favourite from being added to the rendering order list, 

tree or graph, storing an indication of the selected 
favourite primitive and selecting another favourite 

primitive. 
A method according to Claim 1, wherein the 
candidate primitive is compared with the favourite 

primitive to determine whether said candidate primitive 
can be occluded by said favourite primitive. 
A method according to claim 2, wherein said 
comparison is performed with reference to a predetermined 

set of allowable values for at least one viewing 
parameter. 
A method according to claim 1 or 2 wherein said 
stored indications are used to detect cyclic 

relationships between the primitives. 
A method according to claim 4 wherein on 
detecting that a candidate can prevent the favourite 

primitive from being added to the rendering order list, 
tree or graph, said cyclic relationship is detected by 

detecting a previously stored indication of the same 
favourite primitive. 
A method according to claim 1, 2, 3, 4 or 5 
wherein said selecting another favourite primitive is 

performed by selecting the candidate identified as 
preventing the favourite primitive from being added to 

the rendering order list. 
A method according to any preceding claim 
wherein, after a favourite primitive is added to the 

rendering order list, tree or graph, a new favourite 
primitive is selected in accordance with indications 

stored of previous favourite primitives which were not 
added to the rendering order list. 
A method according to any preceding claim 
wherein favourite primitives are selected initially in 

accordance with a pre-determined logical order. 
A method according to claim 8 wherein favourite 
primitives are selected initially on the basis of their 

relative distances in a predetermined viewing direction. 
A method according to any preceding claim, 
wherein said indication of the selected favourite 

primitive is stored by making an entry in a last in, 
first out data structure. 
A method according to Claim 10, wherein, after 
a current favourite primitive has been placed onto the 

rendering order list, tree or graph, a next current 
favourite primitive is established by retrieving the last 

entry from said last in, first out data structure. 
A method according to any of Claims 1 to 11, 
wherein, after a current favourite primitive has been 

placed onto the list, tree or graph, steps are taken to 
determine whether said primitive forms part of a larger 

parent primitive and, if so, data associated with said 
parent is modified. 
Apparatus for producing rendering order lists, 
trees or directed graphs, in which a favourite primitive 

is selected for placing on a rendering order list, tree 
or graph, the apparatus comprising means for comparing 

said favourite primitive with a candidate primitive to 
 

determine whether said candidate primitive can prevent 
the favourite primitive from being added to a rendering 

order list, tree or graph and, on detecting that the 
candidate primitive can prevent the favourite primitive 

from being added to the rendering order list, storing an 
indication of the selected favourite primitive and 

selecting another favourite primitive. 
Apparatus according to Claim 13, wherein the 
candidate primitive is compared with the favourite 

primitive to determine whether said candidate primitive 
can be occluded by said favourite primitive. 
An apparatus according to claim 13 or 14 
wherein said comparison is performed with reference to 

a predetermined set of allowable values for at least one 
viewing parameter. 
An apparatus according to claim 13, 14 or 15 
further comprising means for detecting a cyclic 

relationship among the primitives to be placed on the 
rendering order list, tree or graph. 
An apparatus according to claim 16 wherein, on 
detecting that a candidate primitive can prevent the 

favourite primitive from being added to the rendering 
order list, tree or graph, said detecting means 

 
determines whether said favourite primitive is the same 

as a previous favourite primitive for which an indication 
has been stored. 
An apparatus according to any of claims 13 to 
17 wherein said selecting another favourite primitive is 

performed so as to select the candidate primitive which 
prevented a favourite primitive from being added to the 

rendering order list. 
An apparatus according to any of claims 13 to 
18 wherein, after placing a primitive on the rendering 

order list, tree or graph, a new primitive is selected 
from among previous favourite primitives for which an 

indication has been stored, in preference to primitives 
still to be placed on the rendering order list. 
An apparatus according to any of claims 13 to 
19, wherein said favourite primitives are selected 

initially on the basis of a logical pre-ordering. 
An apparatus according to claim 20 wherein 
favourite primitives are selected initially in accordance 

with their distance in a notional viewing direction. 
Apparatus according to any of claims 13 to 21, 
including means for storing said indication of the 

 
selected favourite primitive as an entry in a last in, 

first out data structure. 
Apparatus according to Claim 22 wherein, after 
a current favourite primitive has been placed onto the 

rendering order list, tree or graph, a next current 
favourite primitive is established by retrieving the last 

entry from said last in, first out data structure. 
Apparatus according to any of Claims 13 to 23, 
wherein, after a current favourite primitive has been 

placed onto the list, tree or graph, steps are taken to 
determine whether said primitive forms part of a larger 

parent primitive and, if so, data associated with said 
parent primitive is modified. 
In an interactive graphics system, in which 
surfaces defined in three dimensions are rendered to 

produce a two-dimensional image, a method of rendering 
said image by identifying a viewing direction and 

selecting a rendering order list, tree or directed graph 
associated with said viewing direction, wherein said 

rendering order list, tree or graph is produced by 
selecting a favourite surface primitive for placing on 

a rendering order list, tree or graph, comparing said 
favourite primitive with a candidate primitive to 

determine whether said candidate primitive can prevent 
 

the favourite primitive from being added to a rendering 
order list, tree or graph and, on detecting that the 

candidate primitive can prevent the favourite primitive 
from being added to the rendering order list, tree or 

graph, storing an indication of the selected favourite 
primitive and selecting another favourite primitive. 
A method according to claim 25 wherein a 
plurality of rendering order lists, trees or graphs are 

generated in accordance with a finite number of sets of 
allowable viewing parameters, prior to definition of 

actual viewing parameters for use in rendering. 
A method according to claim 26 wherein each set 
of allowable viewing parameters comprises a set of 

viewing directions. 
A method according to claim 26 or 27 wherein 
a plurality of images are rendered in a sequence, 

identifying for each image of the sequence a respective 
viewing direction and selecting a rendering order list, 

tree or directed graph from among a pre-generated 
plurality of rendering order lists, trees or directed 

graphs. 
An apparatus comprising means for rendering a 
two-dimensional image representing surfaces defined in 

 
three dimension, by identifying a viewing direction and 

selecting a rendering order list, tree or directed graph 
associated with said viewing direction, the apparatus 

further including means for producing said rendering 
order list, tree or graph by selecting a favourite 

surface primitive for placing on a rendering order list, 
tree or graph, for comparing said favourite primitive 

with a candidate primitive to determine whether said 
candidate primitive can prevent the favourite primitive 

from being added to a rendering order list, tree or 
graph, and, on detecting that the candidate primitive can 

prevent the favourite primitive from being added to the 
rendering order list, tree or graph, storing an 

indication of the selected favourite primitive and 
selecting another favourite primitive. 
An apparatus according to claim 29 wherein said 
means for producing rendering order lists, trees or 

graphs operates to produce a number of rendering order 
lists, trees or graphs in accordance with a number of 

sets of allowable viewing parameters. 
An apparatus according to claim 30 wherein each 
set of allowable viewing parameters comprises a set of 

viewing directions. 
An apparatus according to claim 30 or 31 
 

wherein said rendering means is operable to render a 
plurality of images in a sequence, identifying for each 

image of the sequence respective viewing parameters and 
selecting a rendering order list, tree or directed graph 

from among a pre-generated plurality of rendering order 
lists, trees or directed graphs. 
A signal or storage medium conveying a two-dimensional 
image representing three-dimensional objects, 

wherein said image has been rendered by identifying a 
viewing direction and selecting a rendering order list, 

tree or directed graph associated with said viewing 
direction, and wherein said rendering order list, tree 

or graph has been produced by selecting a favourite 
primitive for placing on a rendering order list, tree or 

graph, comparing said favourite primitive with a 
candidate primitive to determine whether said candidate 

primitive can prevent the favourite primitive from being 
added to the rendering order list, tree or graph storing 

an indication of the selected favourite primitive and 
selecting another favourite primitive. 
A data carrying medium conveying instructions 
for programmable processing apparatus such that, when 

loaded into said apparatus, said apparatus is programmed 
to produce rendering order lists, trees or directed 

graphs, characterised in that said lists, trees or graphs 
 

are produced by selecting a favourite primitive for 
placing on a rendering order list, tree or graph, 

comparing said favourite primitive with a candidate 
primitive to determine whether said candidate primitive 

can prevent the favourite primitive from being added to 
a rendering order list, tree or graph and, on detecting 

that the candidate primitive can prevent the favourite 
primitive from being added to the rendering order list, 

tree or graph, storing an indication of the selected 
favourite primitive and selecting another favourite 

primitive. 
</CLAIMS>
</TEXT>
</DOC>
