<DOC>
<DOCNO>EP-0632361</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Multilingual keyboard configuration and code page switching.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3023	G06F3023	G06F1722	G06F1722	H03M1114	H03M1114	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	H03M	H03M	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F17	G06F17	H03M11	H03M11	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
An operating system provides facilities for 
switching of keyboard configurations and code pages. The 

operating system allows application programs run on it to 
change their keyboard configurations and code pages without 

interrupting execution of the application program. Visual 
user interface elements are provided within the window of the 

application program by the operating system to allow a user to 
change the keyboard. The keyboard languages associated with 

the user interface visual elements may be switched by the 
user. As a result, the user has access to a multitude of 

different keyboard languages and code pages. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
MICROSOFT CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
MICROSOFT CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
SILVER DAVID MICHAEL
</INVENTOR-NAME>
<INVENTOR-NAME>
WINDSOR JOHN R
</INVENTOR-NAME>
<INVENTOR-NAME>
SILVER, DAVID MICHAEL
</INVENTOR-NAME>
<INVENTOR-NAME>
WINDSOR, JOHN R.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to data 
processing systems, and more particularly, to switching of 
keyboard configurations and code pages to support 
multilingual keyboard input to a data processing system. When a user seeks to enter character data to a 
data processing system by way of keyboard, the user 
depresses and releases keys of the keyboard. The 
depression of the keys of the keyboard generates scan 
codes. The interpretation of the scanned codes is 
dependent upon a current keyboard configuration and a 
current code page. The code page is a set of characters 
that constitute a superset of possible characters that may 
be input using the keyboard. The keyboard configuration 
specifies a mapping of the scanned codes to a subset of 
the characters available in the code page. Typically, a 
code page includes 256 characters, whereas the keyboard 
configuration may map to only approximately half of these 
characters. Many natural languages include characters 
that are shared with other natural languages. Many 
natural languages use an alphabet that differs only by a 
few unique characters from the alphabet used by another 
natural language. As such, a single code page may include 
all of the characters necessary for a number of different 
languages. The characters required by a particular 
natural language are defined by the keyboard configuration 
for the natural language. The keyboard configuration maps 
the scanned codes to a subset of the code page that 
constitutes that alphabet used for the natural language.  Most current software programs restrict a user 
to character input in a single natural language. 
Nevertheless, certain operating systems, such as the 
Microsoft Windows, version 3.1, operating system, sold by 
Microsoft Corporation of Redmond, Washington, allow a user 
to select a keyboard configuration at the system level. 
The operating system provides an interface at the system 
level to allow a user to choose a desired keyboard 
configuration for implementing the natural language of 
their choice. In many cases, such keyboard configurations 
may not be changed for an application program without 
interrupting execution of an application program. In 
other cases, the keyboard change may be made, but the 
application program does not comprehend the keyboard 
change. The keyboard is typically selected before the 
application begins executing. All of the available keycode configurations in 
such an operating system are associated with a single code 
page of characters. The operating
</DESCRIPTION>
<CLAIMS>
In a data processing system having a video 
display, processing means for executing a program on an 

operating system, a keyboard having keys that generate codes 
when depressed, memory means for storing a first code page of 

characters and a second code page of characters, a method 
comprising the steps of: 


(a) during execution of the program on the 
processing means, using a first code page to interpret codes 

generated in response to depression of keys of the keyboard as 
characters from the first code page; 
(b) switching the code page used to interpret codes 
generated in response to depression of keys on the keyboard to 

a second code page without interrupting execution of the 
program on the processing means such that codes generated in 

response to depression of keys of the keyboard are interpreted 
as characters from the second code page. 
The method recited in claim 1, further 
comprising the step of switching the code page used to 

interpret codes generated in response to depression of keys on 
the keyboard back to the first code page without interrupting 

execution of the program on the processing means such that 
codes generated in response to depression of keys of the 

keyboard are interpreted as characters from the first code 
page. 
The method recited in claim 1, further 
comprising the step of using the code page used to interpret 

keystrokes entered on the keyboard to a third code page 
without interrupting execution of the program on the 

processing means such that codes generated in response to 
depression of keys of the keyboard are interpreted as 

characters from the third code page. 
The method recited in claim 1, further 
comprising the step of displaying a user interface element on 

the video display which facilitates a user choosing the first 
code page to interpret codes generated in response to 

depression of keys of the keyboard during execution of the 
program on the processing means. 
The method recited in claim 4 wherein the step 
of displaying the user interface element on the video display 

which facilitates the user choosing the first code page to 
interpret codes generated in response to depression of keys of 

the keyboard further comprises the step of displaying a 
pushbutton that when activated chooses the first code page to 

interpret codes generated in response to depression of keys of 
the keyboard during execution of the program on the processing 

means. 
The method recited in claim 1 further 
comprising the step of displaying a user interface element on 

the video display which facilitates a user choosing the second 
code page to interpret codes generated in response to 

depression of keys of the keyboard. 
The method recited in Claim 6 wherein the step 
of displaying the user interface element on the video display 

which facilitates the user choosing the second code page to 
interpret codes generated in response to depression of keys of 

the keyboard further comprises the step of displaying a 
pushbutton that when activated chooses the second code page to 

interpret codes generated in response to depression of keys of 
the keyboard during execution of the program on the processing 

means and the step of switching the code used to interpret 
codes generated in response to depression of keys of the 

keyboard to a second code page is performed in response to 
activation of the pushbutton. 
The method recited in claim 1 wherein one of 
the first code page or the second code page contains at least 

one character that is unique to a first natural language and 
also contains at least one character that is unique to a 

second natural language. 
The method recited in claim 1 wherein the step 
of switching the code page used to interpret codes generated 

in response to depression of keys of the keyboard to a second 
code page is performed by the operating system. 
The method recited in claim 1, further 
comprising the steps of: 

   using a first font for the first code page; 
   switching to a second font for use with the second 

code page in response to the switching of the code page to the 
second code page. 
In a data processing system having processing 
means, memory means and a keyboard that includes keys which 

produce key codes when depressed, a method comprising the 
steps of: 


(a) storing a first code page of characters in the 
memory means; 
(b) storing a second code page of characters in the 
memory means; 
(c) while running a program on the processing 
means, 


(i) in response to a user depressing a key on 
the keyboard, generating a key code; 
(ii) interpreting the key code as a character 
in the first code page; 
(iii) switching the code page used by the 
program to the second code page of characters; 
(iv) in response to a user depressing another 
key on the keyboard, generating another key code; and 
(v) interpreting the other key code as a 
character in the second code page. 
The method recited in claim 11, further 
comprising the step of switching the code page used by the 

program back to the first code page of characters. 
The method recited in claim 12, further 
comprising the step of switching the code page used by the 

program back to the first code page of characters. 
The method recited in claim 11, further 
comprising the steps of: 

   using a first font for the first code page; 
   switching to a second font for use with the second 

code page in response to the switching of the code page to the 
second code page. 
In a data processing system having memory 
means, a visual display, a keyboard for entering keystrokes 

and processing means for running an application program on an 
operating system, a method comprising two steps of 


(a) during execution of the application program on 
the processing means, using a first keyboard configuration for 

mapping keystrokes entered on the keyboard to character input; 
(b) switching the keyboard configuration to a 
second keyboard configuration for mapping keystrokes entered 

on the keyboard to character input without interrupting 
execution of the application program. 
The method recited in claim 15 wherein the step 
of using the first keyboard configuration for mapping 

keystrokes to character input further comprises the step of 
using the first keyboard configuration for mapping keystrokes 

to character input of a first natural language. 
The method recited in claim 16 wherein the step 
of switching the keyboard configuration to the second keyboard 

configuration for mapping of keystrokes to character input 
further comprises the step of using the second keyboard 

configuration for mapping keystrokes to character input of a 
second natural language without interrupting execution of the 

application program. 
The method recited in claim 15 further 
comprising the step of switching the keyboard configuration 

back to the first keyboard configuration for mapping 
keystrokes entered on the keyboard to character input. 
The method recited in claim 15 wherein the 
memory means stores a code page of characters and wherein the 

first keyboard configuration and the second keyboard 
configuration map keystrokes entered on the keyboard into 

characters in the code page. 
The method recited in claim 15 wherein the 
memory means stores a first code page of characters and a 

second code page of characters in the memory means and wherein 
the first keyboard to characters in the first code page and 

the second keyboard configuration maps keystrokes entered on 
the keyboard to characters in the second code page. 
The method recited in claim 15 further 
comprising the step of displaying an activatable visual 

interface on the visual display that when activated causes the 
keyboard configuration to be switched and performing the step 

of switching the keyboard configuration in response to 
activation of the visual interface. 
The method recited in claim 15 wherein the step 
of switching the keyboard configuration to the second keyboard 

configuration is performed by the operating system. 
In a data processing system having a visual 
display, memory means, processing means for executing a 

program and a keyboard having keys, a method comprising the 
steps of: 


(a) storing a code page of characters in the memory 
means; 
(b) storing a keyboard configuration in the memory 
means for each of a plurality of associated natural languages, 

each keyboard configuration matching key codes that are 
produced when one of the keys on the keyboard is depressed 

with corresponding characters in the code page for the 
associated natural language; 
(c) displaying a visual element or the visual 
display that allows a user to select one of the keyboard 

configurations during execution of the program on the 
processing means; and 
(d) in response to selection of a keyboard 
configuration by the user via the visual element, using the 

keyboard configuration selected by the user to match key codes 
with characters in the code page. 
The method recited in claim 23, further 
comprising the step of displaying a window generated by the 

executing program on the video display wherein the visual 
element that allows the user to select one of the two keyboard 

configurations is displayed as part of the window. 
The method recited in claim 24 wherein the step 
of displaying the visual element on the visual display that 

allows a user to select one of the keyboard configuration 
further comprises the step of displaying a pushbutton on the 

visual display that allows the user to select one of the 
keyboard configurations. 
The method recited in claim 25 wherein the 
steps of displaying a pushbutton on the visual display that 

allows the user to select one of the keyboard configurations 
 

further comprises the step of displaying an identifier of the 
natural language associated with the selected keyboard on the 

video display. 
In a data processing system having memory 
means, a visual display, a keyboard having keys and a 

processing means for running a program, a method, comprising 
the steps of: 


(a) storing code pages of characters in the memory 
means; 
(b) for each code page stored in the memory means, 
storing at least one keyboard configuration that specifies a 

mapping of key codes, generated in response to depression of 
keys in the keyboard, to characters in the code page, each 

keyboard configuration mapping key codes to characters of a 
different natural language; 
(c) during execution of the program on the 
processing means displaying a first visual element on the 

video display that may be activated by a user to choose one of 
the keyboard configurations among those stored for a first 

code page; 
(d) during execution of the program on the 
processing means, displaying a second visual element on the 

video display that may be activated by the user to choose one 
of the keyboard configurations stored for the code pages other 

than the first code page; and 
(e) in response to activation of one of the first 
or second visual elements selecting one of the keyboard 

configurations to be used by the program in mapping key codes 
to characters. 
The method recited in claim 27 further 
comprising the step of activating the same visual element that 

was activated in step (e) to select a different keyboard 
configuration to be used by the program in mapping the key 

codes to characters. 
The method recited in claim 27 further 
comprising the step of activating a different one of the 

visual elements than the visual element that was activated in 
step (e) to select a different keyboard configuration to be 

used by the program in mapping the key codes to characters. 
</CLAIMS>
</TEXT>
</DOC>
