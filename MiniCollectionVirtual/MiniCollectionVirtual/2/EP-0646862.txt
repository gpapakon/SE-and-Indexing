<DOC>
<DOCNO>EP-0646862</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method for automatically restoring consistency in a hierarchical object structure in a computer after a user interaction, and computer comprising such a system
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F906	G06F944	G06F944	G06F906	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A reproduction structure in a computer is based on a hierarchical structure 
of consistency relations between objects. As a function of one or more objects of a 

given hierarchical level, each relation specifies one or more incremental objects at a 
next-higher level. Variable incremental objects are situated at the lowest level. After a 

user interaction, modifying one or more variable incremental objects, the consistency is 
restored as follows. First a set of value inconsistencies is signalled for the incremental 

objects during a bottom-up signalling step. Subsequently, on the basis of each element 
of said set during a top-down updating step the value of the hierarchically higher object 

is updated on the basis of a change of value, if any, of associated, specifying variable 
incremental objects and/or incremental objects. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
KONINKL PHILIPS ELECTRONICS NV
</APPLICANT-NAME>
<APPLICANT-NAME>
KONINKLIJKE PHILIPS ELECTRONICS N.V.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
AUGUSTEIJN ALEXANDER
</INVENTOR-NAME>
<INVENTOR-NAME>
AUGUSTEIJN, ALEXANDER
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention relates to a method for automatically restoring consistency
in an information displaying structure in a computer after a user interaction, based on a
set of objects in the hierarchical object structure thereof, the user interaction modifying
one or more primary variable objects and subsequently secondary variable objects
within the object structure being updated. The invention thus concerns a user interaction
system or user interface, and in particular, such aspects that speed-up and/or render
consistent the displaying as realizable on a physical platform. The most complex
example thereof is formed, generally speaking, by a graphic interface because of the
high degree of spatial parallelism of the presentations to the user, even though the
invention can in principle also be used in other interfaces, for example interfaces with
video images, sound and other means of expression. Said parallelism may also occur
therein. Such an interface may be considered as an interaction between a user, generally
a person executing actions so that the display is no longer consistent with the state of
the system, and a process which subsequently restores the consistency. Restoration is
conventionally implemented by means of so-called call-back functions as will be
explained hereinafter. This approach is fully bottom-up and always the primary variable
objects are successively updated first and immediately thereafter the secondary variable
objects based thereon at successive hierarchically higher levels. This is realised by way
of instructions which are locally present in the program and are executed immediately.
In this type of organization it is not guaranteed on the one hand that all relevant
consistency relations are addressed. On the other hand also superfluous consistency
relations may be addressed, for example relations having implications only outside the
current image field. This problem is caused by the fact that the consistencies must be
restored without the relations being explicit, because use is made exclusively of all that
is included in the program. This problem is significant notably when the interface
operates with a changing program package, for example because the package is being
developed, improved or maintained. As is known, all programs of some complexity are 
continuously subject to such modifications.Therefore, it is inter alia an object of the invention to propose a method
which automatically provides updating of the display in the situation of such an
interface, and does so
</DESCRIPTION>
<CLAIMS>
A method for automatically restoring consistency in an information
display structure in a computer after a real or emulated user interaction, based on a set

of objects in the hierarchical object structure thereof, the user interaction modifying one
or more primary variable objects and subsequently secondary variable objects within the

object structure being updated, characterized in that the object structure comprises a
network of consistency relations, each of which specifies one or more incremental

objects as a function of one or more incremental objects and/or variable incremental
objects at a next-lower hierarchical level, the user interaction modifying one or more of

such variable incremental objects at a lowest level, in that first during a bottom-up
signalling step a set of value inconsistencies for the incremental objects is signalled, and

in that subsequently during a top-down updating step on the basis of each element of
said set the value of the associated incremental object is updated on the basis of a

change of value, if any, of the associated specifying variable incremental objects and/or
incremental objects at a lower hierarchical level.
A method as claimed in Claim 1, in which at least essentially each of said
consistency relations is expressed by one associated equation.
A method as claimed in Claim 1 or 2, in which on the basis of a
modification of a variable object a part situated at the foot of the hierarchy is updated

by direct calling from said modification, and in which a boundary between the structure
of the incremental objects and the directly updated part is formed by variable

incremental objects.
A method as claimed in Claim 1, 2 or 3, in which incremental objects
comprise a value field, a caller list, an environment field and an evaluator field,

whereas variable incremental objects comprise only a value field and a caller list.
A method as claimed in Claim 4, in which a closure object comprises
only an environment field and an evaluator field.
A method as claimed in Claim 4 or 5, in which a side-effect incremental
object comprises only a caller list, an environment field, an evaluator field and an undo 

field.
A method as claimed in any one of Claims 1 to 6, for realizing said
display structure for a visual display device.
A method as claimed in any of Claims 1 to 7, wherein said display
structure comprises at least one graph cycle, characterized in that for each cycle a

lowest hierarchical level is defined, at such level an object is separated into an in-cycle
incremental object and an out-of-cycle variable incremental object, and in that an

external change is assigned to said variable incremental object as an initializing
operation for said restoring.
A method as claimed in Claim 8 for finding a fix point of a set of
equations 
xj = fj (x1...xn)
 , 
1 ≤ j ≤ n
, represented by said display structure.
A computer provided with a system for automatic consistency restoration
in an information display structure in the computer after a user interaction, comprising

reproduction means for reproducing information on the basis of a set of objects in their
hierarchical object structure of consistency relations which specify, each as a function of

one or more variable incremental objects at a given hierarchical level, one or more
incremental objects at a next-higher hierarchical level, the user interaction modifying

one or more of such variable incremental objects at a lowest level, characterized in that
said system comprises two-step control, for signalling a set of value inconsistencies

for the incremental objects during a first, bottom-up signalling step, and for updating,

during a subsequent, top-down updating step, on the basis of each necessary element of
said set the value of the associated incremental object on the basis of a change of value,

if any, of the associated specifying variable incremental objects and/or incremental
objects at a lower hierarchical level.
</CLAIMS>
</TEXT>
</DOC>
