<DOC>
<DOCNO>EP-0620523</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Adaptive method for allocation of random access memory to procedures having differing priorities
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1202	G06F950	G06F946	G06F946	G06F1202	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F12	G06F9	G06F9	G06F9	G06F12	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A data processing system (10) includes an adaptive method for 
allocation of RAM (20) as between procedures having both higher and lower 

priorities. The RAM (20) is provided with first and second portions (26,24), the 
first portion (26) for assignment to higher priority procedures and the second 

portion (24) for assignment to lower priority procedures, higher priority procedures 
being able to access also the second portion (24) of RAM (20). The adaptive 

method comprises the steps of: responding to a request (50) for allocation of RAM 
(20) to a higher priority procedure by determining (52) if RAM (20) is available from 

the first portion (26) and, if not, allocating RAM (20) from the second portion (24) to 
the higher priority procedure. The procedure enables allocation of RAM (20) from 

the second portion (24) to a lower priority procedure where available RAM (20) in 
the first portion (26) exceeds a first threshold level (A). The system continues the 

enablement until the available RAM (20) in the first portion (26) falls below a lower, 
second threshold level (B) at which point, the allocation to the lower priority 

procedure is inhibited. The inhibition of allocation of RAM (20) from the second 
portion (24) to a lower priority procedure continues until the available RAM (20) in 

the first portion (26) again exceeds the first threshold level (A). 

</ABSTRACT>
<APPLICANTS>
</APPLICANTS>
<INVENTORS>
</INVENTORS>
<DESCRIPTION>
This invention relates to a data processing system which includes
random access memory (RAM) that is variably available to differing priority
procedures running within the data processing system, and more particularly, to
a method for allocating such RAM so as to assure continued availability thereof
to procedures having a higher priority.Most modern data processing systems allocate RAM, on an as-needed
basis, to procedures prior to their execution. Typically, the allocation is
predetermined and ensures that each procedure will have available enough RAM
to operate at a level comparable to other executing procedures. Because of
limited RAM availability, however, some rationing of RAM amongst operating
procedures becomes the norm rather than the exception. As a result, the
overall performance of a data processing system is reduced when one procedure
is "starved" for RAM while another has an abundance of unused RAM. This
often occurs where RAM was preallocated and the current task that is
executing is not RAM intensive.The above noted problem is amplified when one procedure
comprises an input/output (I/O) task while another procedure comprises an
internally executing task within a computer receiving data via the I/O task. If
the I/O task is allocated too much RAM, the internally executing procedure that
is receiving the data via the I/O task becomes starved for RAM and the overall
efficiency of the data processing system is thus impaired. Needless to say,
these types of problems can be avoided where there is an abundance of RAM,
however, this is rarely the case.Preallocation of RAM to various procedures that are to execute
within a data processing system requires that the user make assumptions on
how the RAM is to be utilized by each procedure and the relative levels of 
performance between the various procedures. Since procedure performance
and relative procedure performance are both dependent upon the task at hand,
initial assumptions will typically not provide an optimal memory configuration.As is known, priorities are assigned to various procedures that
execute within a data processing system. It is often the case that procedures
that control input/output operations are assigned a lower priority than those
procedures which perform internal functions within a data processing system.
Furthermore, input/output procedures are often assigned a fixed amount of RAM
that is solely available to the I/O function and to none other. This preallocation,
by its very nature, restricts the amount of communicating data
</DESCRIPTION>
<CLAIMS>
An adaptive method for allocating random access memory
(RAM) (20) in a data processing system (10), said data processing system (10)

performing procedures having higher and lower priorities, said RAM (20) having
first and second portions (26,24), said first portion (26) for assignment to higher

priority procedures and said second portion (24) for assignment to lower priority
procedures, said higher priority procedures also able to access said second portion

(24), said adaptive method being characterized by comprising the steps of:

(a) responding to a request (50) for allocation of RAM to a higher
priority procedure by determining (52) if RAM (20) is available

from said first portion (26) and, if not, allocating (60) RAM (20)
from said second portion (24) to said higher priority procedure;

and
(b) enabling allocation of RAM (20) from said second portion (24)
to a lower priority procedure when available RAM (20) in said

first portion (26) exceeds a first threshold level (A) of RAM availability, and
continuing said enablement until said available RAM (20) in

said first portion (26) falls below a lower, second threshold
level (B) of RAM availability, at which point said allocation to a lower priority

procedure is inhibited.
The method as recited in claim 1 comprising the further step
of:

   continuing said inhibiting of allocation of RAM (20) from said second
portion (26) to a lower priority procedure until said available RAM

(20) again exceeds said first threshold level (A) of RAM availability. 
The method as recited in claim 2, wherein said lower priority
procedure comprises an input/output task.
The method as recited in claim 1, wherein an input/output task
is preliminarily assigned an I/O buffer pool (22) from which it is enabled to obtain

RAM (20) for input data, said input/output task only needing to request an
allocation of RAM (20) from said second portion (26) when said I/O buffer pool (22)

has no RAM (20) available.
The method as recited in claim 1, wherein said data
processing system (10) sets an allocation flag equal to a first state when available

RAM (20) in said first portion (26) falls beneath said second threshold level (B) of RAM availability and
resets said allocation flag to a second state only when said available RAM (20) in

said first portion (26) exceeds said first threshold level (A) of RAM availability, whereby said data
processing system (10) examines the state of said allocation flag in determining

whether to enable allocation of RAM (20) from said second portion (24) , as recited
in steps a and b.
The method as recited in claim 5, wherein said data
processing system (10) enables allocation of RAM (20) to said lower priority

procedure from said second portion (24) when said allocation flag is set to said first
state.
The method as recited in claim 6, wherein said data
processing system (10) disables allocation of RAM (20) to said lower priority

procedure from said second portion (24) when said allocation flag is set to said
second state.
</CLAIMS>
</TEXT>
</DOC>
