<DOC>
<DOCNO>EP-0622723</DOCNO> 
<TEXT>
<INVENTION-TITLE>
System and method for dynamically labeled touch sensitive buttons in a digitizing display
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3048	G06F3033	G06F3041	G06F3033	G06F3048	G06F3041	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F3	G06F3	G06F3	G06F3	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A system and method are disclosed for dynamically labeling touch 
sensitive buttons in a digitizing display. The display is 

partitioned into a main panel display region and a button panel 
display region. A touch overlay is also partitioned into a main 

panel touch region and a main panel display region. A button 
panel driver program defines button touch areas and button 

display areas enabling the dynamic labeling and relabeling of 
the touch sensitive buttons and the simultaneous touching of 

combinations of the buttons with either a touch input or a 
stylus input to the overlay. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
STEIN FRANK L
</INVENTOR-NAME>
<INVENTOR-NAME>
VERRIER GUY F
</INVENTOR-NAME>
<INVENTOR-NAME>
STEIN, FRANK L.
</INVENTOR-NAME>
<INVENTOR-NAME>
VERRIER, GUY F.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention disclosed broadly relates to data processing
systems and more particularly relates to improvements in
input/output devices for pen-based computer systems.The following patents and patent applications are assigned to
the IBM Corporation and are incorporated herein by reference.USP 4,686,332 entitled "Combined Finger Touch and Stylus
Detection System for Use on the Viewing Surface on a Visual
Display Device," by Evon C. Greanias, et al. USP 5,007,085
entitled "Remotely Sensed Personal Stylus," by Evon C. Greanias,
et al.USP 5,117,071 entitled "Stylus Sensing System," by Evon C.
Greanias, et al.USP 5,386,219, filed July 28, 1993 entitled "Touch Overlay for
Improved Touch Sensitivity," by Evon C. Greanias, et al.European patent EP 0 398 055, filed April 27, 1990 entitled
"Flat Touch Screen Workpad for a Data Processing System," by
Gordon W. Arbeitman, et al. USP 5,349,139, filed October 30, 1992 entitled "Architecture for
Communication of Remote Devices to a Digitizing Display" by Guy
F. Verrier, et al.Pen-based computer systems have been described in the prior art,
for example in the above referenced USP 4,686,332 by Greanias,
et al. In that system, a touch overlay membrane is positioned
over the viewing surface of a display device such as a computer
monitor, for interacting with a pickup stylus. The pickup stylus
described in the '332 patent is connected by means of a wire to
the pen-based computer system. The pen-based computer system
generates a radiative signal in the touch overlay. The radiative
signal is picked up by the stylus and sent back over the wire to
the pen-based computer. The computer then calculates the
relative X-Y position of the stylus with respect to the overlay.
The relative proximity Z of the stylus to the overlay is
determined by the signal amplitude picked up by the stylus from
the electromagnetic energy radiated from the overlay. An
improvement in the stylus pickup antenna is described in the
above cited USP 5,117,071 by Greanias, et 1. In the '071 patent,
the antenna configuration in the tip of the stylus is a small
sphere, whose shape enables a uniform signal strength to be
picked up without regard for the relative orientation of the
stylus with respect to the planar surface of the overlay. A
further improvement has been made to the stylus by eliminating
the cable connection between the stylus and the pen-based
computer system, as is described in USP 5,007,085 by Greanias,
et al. In the '085 patent, the signal detected by the stylus
antenna which has been picked up
</DESCRIPTION>
<CLAIMS>
A data processing system, including a digitizing display
for inputting two simultaneous touch inputs, comprising:


a display (64) coupled to a computer, having a
display surface (15) partitioned into a main panel

display region (19) and a button panel display region
(17);
a touch overlay (16) coupled to said computer, having
a touch input surface partitioned into a main panel

touch region juxtaposed with said main panel display
region (19), and partitioned into a button panel touch

region juxtaposed with said button panel display
region (17);
means for electrically isolating the main panel and
button regions in the display and touch overlay;
a button panel driver program (600) stored in said
computer, for defining a button touch area in said

button panel touch region in accordance with a button
specification table, for outputting a button value

when said button touch area receives a touch input;
said button panel driver program (600) defining a
button display area in said button panel display

region, juxtaposed with said button touch area, said
button display area for displaying a button indicium

representing said button value and identifying the
location of said button touch area;
said computer receiving a first touch input in said
main panel touch region and a simultaneous second

touch input in said button touch area and in response
thereto, outputting a panel value and said button

value, the multiple, simultaneous panel and button 
values being separately identified in a touch circuit

(12);
said computer storing a default button specification
table describing a plurality of button touch areas

and corresponding button display areas in the event a
button specification table is not available;
said button panel driver program using said default
table to reconfigure said plurality of button touch

areas in said touch overlay and said corresponding
button display areas in said display;
an application program (700) stored in said computer,
having an alternate button specification table

describing a plurality of alternate button touch
areas and corresponding alternate button display

areas for selection by a user; and
said button panel driver program using said alternate
table to configure said plurality alternate button

touch areas in said touch overlay and said
corresponding alternate button display areas in said

display when selected by the user.
The system of claim 1, which further comprises:

said touch overlay including both a touch input
detection means and a radiative stylus pickup means.
The system of claim 2, which further comprises:

said computer receiving said second touch input as a
radiative stylus input in said button touch area and

in response thereto, outputting said button value.
The system of claim 1, which further comprises:

said button panel driver program defining an
alternate button value and an alternate button

indicium representing said alternate button value at
said location of said button touch area.
The system of claim 2, which further comprises:

said computer receiving said first touch input as a
radiative stylus input in said main panel touch

region and said second touch input in said button
touch area and in response thereto, outputting said

button value.
The system of any one of the preceding claims further
comprising:

multiplexer means (112) coupled to the main and button
panels of the display and overlay and in response to

multiple, simultaneous inputs signals thereto providing
separate output signals from the main and button panels. 
The system of claim 6 further comprising:

separate driver means (22, 22') coupled to the button and
main panels of the display.
The system of any one of the preceding claims further
comprising:

means for confirming the button indicium on the display
before receiving the simultaneous, multiple touch inputs

to the main and button panels of the overlay.
The system according to any one of claims 1 to 8, adapted
to carry out the steps of:


storing first values in said system, identifying
touch/stylus overlay button wires corresponding to a

touch/stylus shift button on said digitizing display;
storing second values in said system, identifying a
location for display on an indicium, said location

corresponding to said touch/stylus shift button on
said digitizing display;
storing an image of said indicium in said system,
related to said second values;
displaying said indicium image at said location;
storing a button value representing said shift
button, in said system, accessible by said first

values;
receiving a touch/stylus input in said system, from
said button wires and in response thereto, using said

first values to access said button value; 
outputting said button value in response to said

shift button input;
storing third values in said system, identifying
touch/stylus overlay button wires corresponding to an

alternate touch/stylus shift button on said
digitizing display;
storing fourth values in said system, identifying a
location for display of a second indicium, said

location corresponding to said alternate touch/stylus
shift button on said digitizing display;
storing an image of said second indicium in said
system, related to said fourth values; and
automatically changing said shift button to said
alternate shift button on said digitizing display, by

substituting said third values for said first values
and substituting said fourth values for said second

values and substituting said second indicium for said
first indicium in the event a custom button panel

table is not present in the system.
The system acording to any one of claims 1 to 8, adapted
to carry out the steps of:


a) initiating a button panel driver program stored in a
memory;
b) defining touch points for the overlay in a first
table stored in the memory;
c) defining touch points for the display in a second
table stored in the memory;
d) setting the touch points in the overlay in accordance
with the first table;
e) setting the touch points in the display in accordance
with the second table stored in the memory; 
f) defining a default button table of images and values
for the display and overlay button panels and storing

the default button table in a partition in the
memory;
g) initiating an application program stored in the
memory;
h) determining if a button specification table of images
and values for the display and overlay button panels

is stored in the memory for the application program;
i) assigning the default images and values to the button
panels of the display and overlay, if no button

specification table exists in memory for the
application or assigning the button images and values

to the button panels of the display and overlay if
the button specification table for the application is

available in the memory;
j) painting the display with the images and values
assigned in step (i);
k) receiving multiple, simultaneous touch inputs to the
button and main panels of the overlay; and
l) outputting separately identifiable output signals
from the system for the multiple simultaneous touch

inputs in accordance with assigned images and values
for the display and overlay.
The system of claim 10 further comprising:

m) defining and storing a custom button specification
table for a selected application program stored in

the memory;
n) selecting either the default button specification
table or the custom button specification table for

use with the selected application program; 
o) performing steps (b) through (h); and
p) initiate operation of the selected application
program using the default button specification table

or the custom button specification as selected by
step n).
</CLAIMS>
</TEXT>
</DOC>
