<DOC>
<DOCNO>EP-0645723</DOCNO> 
<TEXT>
<INVENTION-TITLE>
A system for synthesizing field programmable gate array implementations from high level circuit description.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1750	G06F1750	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F17	G06F17	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A system is disclosed for synthesizing field programmable 
gate array (FPGA) implementations from high level circuit 

descriptions. A designer may describe 
circuits using a textual language or a graphics tool. The system 

will compile such circuit descriptions into technology mapped 
descriptions for use with FPGA's. 
The system will support both random logic circuits and data 
path circuits. The system uses advanced optimization techniques to 

produce efficient FPGA implementations. Thus, the system produces 
high quality results while providing users with a high level of 

abstraction in design, and thus frees the user from architectural 
details of the target FPGA. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
AT 
&
 T CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
AT
&
T CORP.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CANTONE MICHAEL R
</INVENTOR-NAME>
<INVENTOR-NAME>
WOO NAM-SUNG
</INVENTOR-NAME>
<INVENTOR-NAME>
CANTONE, MICHAEL R.
</INVENTOR-NAME>
<INVENTOR-NAME>
WOO, NAM-SUNG
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to computer aided design 
(CAD) of electronic circuits. More particularly, the present 
invention relates to a synthesis system for developing field 
programmable gate array (FPGA) implementations from high level 
descriptions of electronic circuits. The system produces high 
quality results while providing users with a high level of 
abstraction in design, and thus frees users from the architectural 
details of the FPGA. A field programmable gate array (FPGA) consists of a matrix 
of programmable logic cells and programmable routing between the 
programmable logic cells. Each logic cell typically contains 
various electronic components such as static RAM cells, 
multiplexers and flip-flops. The functionality of each logic cell 
may be programmed by writing to the static ram cells and changing 
the internal configuration of the logic cell. Similarly, the logic cells within the FPGA are also connected 
to each other by programmable connection points (e.g. static RAM 
cells or antifuse points) to allow programmable routing. By 
writing to these static ram cells, the routing between logic cells 
may be programmed, and the configuration of the FPGA determined. Initially, first generation FPGA's were well-suited to 
implement random logic circuits. A random logic circuit is a 
collection of electronic components, such as logic gates, to 
implement control functions. The then existing CAD design tools 
were suitable for these first generation FPGA's. Next generation FPGA's were subsequently developed which 
supported data path circuits. Data path circuits are circuits 
which manipulate data in groups. For example, some of the basic 
elements of data path circuits are accumulators, registers, memory, 
etc. For example, the Optimized Reconfigurable Cell Array (ORCA) 
FPGA, developed by AT&T, supports data path circuits in many ways. 
Each logic cell, called a Programmable Logic Cluster (PLC), can 
perform data manipulation operations on 4-bit data or a pair of 4-bit 
data. Each PLC contains fast carry logic for addition and 
subtraction operations. This carry logic is also used when a PLC  
 
is used as a (4-bit) counter. Each PLC can be used as a 16 x 4 
RAM. The routing structure supports 4-bit wide routing. The existing CAD systems could not exploit the data path 
capabilities of the second generation FPGA's because these CAD 
systems were geared toward random logic circuits and could not 
handle data path circuits well. The present invention is an FPGA synthesis system which
</DESCRIPTION>
<CLAIMS>
A system for synthesizing circuits from a high level 
description in a field programmable gate array, wherein said field 

programmable gate array comprises a plurality of programmable logic 
cells connected by programmable routing, the system comprising: 

   a computer processor; 
   a display monitor connected to the computer processor; 

   textual data entry means connected to the computer 
processor for allowing the entry of a textual language describing a 

plurality of electronic circuit elements in terms of parameterized 
modules; and 

   means for compiling said textual language into field 
programmable gate array configuration data. 
The system of claim 1 where in said electronic circuit 
elements comprise: 

   random logic circuit elements and data path circuit 
elements. 
The system of claim 1 further comprising: 
   means for receiving a parameterized memory module 

described in said textual language specifying initial contents of 
said memory module; and 

   means for generating a field programmable gate array 
configuration in which the contents of a memory unit are the said 

specified initial contents. 
The system of claim 1 further comprising: 
   means for receiving a parameterized module described in 

said textual language specifying whether optimization is to be 
based on performance or area; and 

   means for optimizing the field programmable gate array 
configuration of said module based upon performance or area 

depending on said textual language specification. 
The system of claim 1 wherein said field programmable 
gate array configuration data further comprises: 

   information identifying certain programmable logic 
cells as a group such that said identified group of programmable 

logic cells will be implemented in relative proximity to each other 
in the field programmable gate array. 
A system of optimizing a circuit implementation in a 
field programmable gate array, wherein said field programmable gate 

array comprises a plurality of programmable logic cells connected 
by programmable routing, the system comprising: 

   a computer processor; 
   means for receiving a description of a first electronic 

circuit design module specifying an output signal and a polarity of 
said output signal, and a second electronic circuit design module 

specifying an input signal and a polarity of said input signal, 
said output signal of the first module corresponding to the input 

signal of said second module; and 
   means for reversing the signal polarities of said input 

signal and said output signal to reduce the number of programmable 
logic cells required to implement said first module and said second 

module in the field programmable gate array. 
A system for synthesizing a circuit implementation in a 
field programmable gate array, wherein said field programmable gate 

array comprises a plurality of programmable logic cells connected 
by programmable routing, the system comprising: 

   a computer processor; 
   means for receiving a textual description of a first 

electronic circuit design element connected to a second electronic 
circuit design element; 

   means for implementing said first electronic circuit 
design element and said second electronic circuit design element in 

at least one programmable logic cell such that the output of said 
first electronic circuit design element is connected to said second 

electronic circuit design element; and 
   means for optimizing the field programmable gate array 

implementation of said first and second electronic circuit design 
elements. 
The system of claim 7 wherein said means for optimizing 
comprises: 

   means for implementing said first and second electronic 
circuit design elements in at least one programmable logic cell so 

as to minimize the number of programmable logic cells. 
The system of claim 7 wherein said means for optimizing 
comprises:

 
   means for implementing said first and second electronic 

circuit design elements in at least one programmable logic cell so 
as to minimize the timing of said implementation. 
The system of claim 7 wherein said means for optimizing 
comprises: 

   means for implementing said first electronic circuit 

design element and said second electronic circuit design element in 
one programmable logic cell. 
A system for synthesizing a circuit from a high level 
circuit description in a field programmable gate array comprising: 

   a computer processor; 
   a graphical display monitor connected to the computer 

processor for the display of graphical information; 
   a graphical data entry device connected to the computer 

processor; 
   means for displaying a plurality of icons 

representative of a plurality of pre-defined electronic circuit 
elements in a first section of said graphical display monitor, said 

elements comprising random logic circuit elements and data path 
circuit elements; 

   means for choosing one of said electronic circuit 
elements by choosing its representative icon and for positioning 

said chosen icon in a second area of said graphical display 
monitor; 

   means for assigning attributes to said electronic 
circuit elements which are represented by said icons in said second 

area of said graphical display monitor; 
   means for generating a textual description of said 

electronic circuit elements in terms of parameterized modules from 
said chosen icons and assigned attributes; and 

   means for compiling said textual description of 
electronic circuit elements into field programmable gate array 

configuration data. 
The system of claim 1 or 11 wherein said field 
programmable gate array configuration data is a field programmable 

gate array application netlist. 
The system of claim 11 further composing: 
   means for defining a macro as a set of pre-defined 

electronic circuit elements; 
   means for assigning certain attributes of said pre-defined 

electronic circuit elements and identifying said attributes 
as constants; 

   means for identifying certain attributes of said pre-defined 
electronic circuit elements as variable; 

   means for displaying an icon, representative of said 
macro and displaying said icon in said first section of the 

graphical display monitor for use as a pre-defined circuit element; 
and 

   means for assigning said variable attributes if said 
macro is chosen as a design element. 
The system of claim 11 further comprising means for 
defining a derived element, said means comprising: 

   means for choosing one of said plurality of icons 
representative of a pre-defined electronic circuit element; 

   means for assigning certain attributes of said pre-defined 
electronic circuit element and identifying said attributes 

as constants; and 
   means for displaying an icon, representative of said 

derived element in said first section of the graphical display 
monitor for use as a pre-defined circuit element. 
A method for synthesizing a circuit from a high level 
circuit description in a field programmable gate array, wherein 

said field programmable gate array comprises a plurality of 
programmable logic cells connected by programmable routing, the 

method comprising the steps of: 
   describing a plurality of electronic circuit elements 

in terms of parameterized modules using a textual language; and 
   compiling said textual language into field programmable 

gate array configuration data. 
The method of claim 15 wherein said electronic circuit 
elements comprise: 

   random logic circuit elements and data path circuit 
elements. 
The method of claim 15 further comprising the steps of: 
   describing a parameterized memory module in said 

textual language specifying initial contents of said memory module; 
and 

   implementing a field programmable gate array in which 
the contents of a memory unit are the said specified initial 

contents. 
The method of claim 15 further comprising the steps of: 
   describing a parameterized module in said textual 

language specifying whether optimization is to be based on 
performance or area; and 

   optimizing the field programmable gate array 
configuration of said module based upon performance or area 

depending on said textual language specification. 
The method of claim 15, wherein said field programmable 
gate array configuration data further comprises: 

   information identifying certain programmable logic 
cells as a group such that said identified group of programmable 

logic cells will be implemented in relative proximity to each other 
in the field programmable gate array. 
A method for optimizing a field programmable gate array 
configuration, wherein said field programmable gate array comprises 

a plurality of programmable logic cells connected by programmable 
routing, the method comprising the steps of 

   receiving a description of a first electronic circuit 
design module specifying an output signal and a polarity of said 

output signal, and a second electronic circuit design module 
specifying an input signal and a polarity of said input signal, 

said output signal of the first module corresponding to the input 
signal of said second module; and 

   reversing the signal polarities of said input signal 
and said output signal to reduce the number of programmable logic 

cells required to implement said first module and said second 
module in the field programmable gate array. 
A method for synthesizing a circuit implementation in a 
field programmable gate array, wherein said field programmable gate 

array comprises a plurality of programmable logic cells connected 
by programmable routing, the method comprising the steps of:

 
   receiving a textual description of a first electronic 

circuit design element connected to a second electronic circuit 
design element; 

   implementing said first electronic circuit design 
element and said second electronic circuit design element in at 

least one programmable logic cell such that the output of said 
first electronic circuit design element is connected to said second 

electronic circuit design element; and 
   optimizing the field programmable gate array 

implementation of said first and second electronic circuit design 
elements. 
The method of claim 21 wherein said step of optimizing 
further comprises the step of: 

   implementing said first and second electronic circuit 
design elements in at least one programmable logic cell so as to 

minimize the number of programmable logic cells. 
The method of claim 21 wherein said step of optimizing 
further comprises the step of: 

   implementing said first and second electronic circuit 
design elements in at least one programmable logic cell so as to 

minimize the timing of said implementation. 
The method of claim 21 wherein said step of optimizing 
further comprises the step of: 

   implementing said first electronic circuit design 
element and said second electronic circuit design element in one 

programmable logic cell 
A method for synthesizing programmable gate array 
implementations from high level circuit descriptions comprising the 

steps of 
   displaying a plurality of icons representative of a 

plurality of pre-defined electronic circuit design elements in a 
first section of a graphical display monitor, said design elements 

comprising random logic circuit elements and data path circuit 
elements; 

   choosing one of said electronic circuit design elements 
by choosing i
ts representative icon and for positioning said chosen 
icon in a second area of said graphical display monitor;

 
   assignment attributes to said electronic circuit design elements which 

are represented by said icons in said second area of said graphical display monitor; 
   generating a textual description of said electronic circuit design 

elements in terms of parameterized modules from said chosen icons and assigned 
attributes; and 

   compiling said textual description of electronic circuit elements into 
field programmable gate array configuration data. 
The method of claim 15 or 25 wherein said field programmable gate 
array configuration data is a field programmable gate array application netlist. 
The method of claim 25 further comprising the steps of: 
   defining a macro as a set of pre-defined electronic circuit design 

elements; 
   assigning certain attributes of said pre-defined electronic circuit design 

elements and identifying said attributes a constants; 
   identifying certain attributes of said pre-defined electronic circuit design 

elements as variable; 
   displaying an icon, representative of said macro and displaying said icon 

in said first section of the graphical display monitor, for use as a pre-defined circuit 
design element; and 

   assigning said variable attributes if said macro is chosen as a circuit 
design element. 
The method of claim 25 further comprising steps for defining a 
derived element, said steps comprising: 

   choosing one of said plurality of icons representative of a pre-defined 
electronic circuit design element; 

   assigning certain attributes of said pre-defined electronic circuit design 
element and identifying said attributes as constants; and 

   displaying an icon, representative of said derived element in said first 
section of the graphical display monitor for use as a pre-defined circuit 

design element. 
</CLAIMS>
</TEXT>
</DOC>
