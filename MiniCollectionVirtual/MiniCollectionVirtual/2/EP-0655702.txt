<DOC>
<DOCNO>EP-0655702</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Stylus-input recognition correction manager.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3041	G06F3041	G06F3048	G06F3048	G06K903	G06K903	G06K962	G06K962	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06K	G06K	G06K	G06K	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F3	G06F3	G06K9	G06K9	G06K9	G06K9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The invention relates to a stylus-based used interface for 
computers. it describes a process for separating a stylus-based 

application program from the procedures used to implement 
stylus-based, user driven error correction processes. This 

separation allows error correction procedures to be used by 
many applications, providing consistency in the user interface 

and saving application development costs through reuse of these 
procedures. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
ANTHONY NICOS J
</INVENTOR-NAME>
<INVENTOR-NAME>
LEVY STEPHEN E
</INVENTOR-NAME>
<INVENTOR-NAME>
RHYNE JAMES R
</INVENTOR-NAME>
<INVENTOR-NAME>
WOLF CATHERINE G
</INVENTOR-NAME>
<INVENTOR-NAME>
ANTHONY, NICOS J.
</INVENTOR-NAME>
<INVENTOR-NAME>
LEVY, STEPHEN E.
</INVENTOR-NAME>
<INVENTOR-NAME>
RHYNE, JAMES R.
</INVENTOR-NAME>
<INVENTOR-NAME>
WOLF, CATHERINE G.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to stylus-based user 
interface for a computer and, more particularly, to a method 
and apparatus for providing a standard interface between a 
stylus-based application program and a handwriting recognizer. 
Even more particularly, the present invention relates to a 
method and apparatus for enabling application programs that 
rely on a stylus-input to be designed without dependencies on 
the specific interfaces of stylus-input recognizers. Computer systems which accept data streams generated by 
operating a stylus are becoming commonplace. A stylus-based 
user interface generally comprises a pen (called a stylus) and 
a digitizing tablet. In many application programs, stylus-based 
user interfaces are superior to keyboards as a means for 
entering data. Such is the case, for instance, when a user of 
the computer has only one hand available for data entry. Other 
cases include, but are not limited to, those in which a 
keyboard would add too much bulk or weight to a data processing 
system designed to be highly portable or the case of a system 
designed for operation by a user who does not know how to or is 
physically unable to type. Referring to FIGURE 1, an application program 105 which 
receives a stylus-based input is called a stylus-based 
application programs (SBAPP) 105. The SBAPP 105 is designed and 
operated within a stylus-based system environment (SBENV) 100. 
The SBENV 100 comprises hardware and software components that 
are needed to capture, display and recognize handwriting input, 
and to display and if necessary correct results derived from 
incorrect recognition of the handwriting input. More 
specifically, the SBENV 100 comprises a pen 110, a digitizing 
tablet 120, a display device 130 (which may be integrated with 
the digitizing tablet), an operating system 140, tablet and  
 
display device drivers 150, a "stylus-aware window system" 160, 
one or more handwriting recognizers 170, and a set of error 
correction procedures 180. Compared to an input data stream from a keyboard or mouse, an 
input stream from a stylus-based user interface is more 
difficult for the system to interpret and makes the development 
of stylus-based application programs very complex. The input 
stream of a keyboard or mouse (generally) unambiguously 
reflects a user's intention, that is, to select a particular 
keyboard key or mouse button. The application program may or 
may not be able to respond meaningfully to that particular 
input data, but the input data
</DESCRIPTION>
<CLAIMS>
A stylus-input correction manager for use between a 
stylus-based application program and a handwriting 

recognizer, comprising: 

(a) a stroke router having a first and a second mode of 
operation; 
(b) a recognition manager, connected to said stroke 
router, adapted to store strokes, recognize said 

strokes, and relay said recognized strokes back to 
the application program; and 
(c) a mediator adapted to implement a protocol between 
the application program and an error correction 

procedure that allows said error correction procedure 
to retrieve said recognized strokes displayed by the 

application program; 
 
wherein said first mode of said stroke router routes 

received strokes to said recognition manager for storage 
and processing by the handwriting recognizer, said second 

mode of said stroke router routes said strokes to an 
auxiliary stylus-input correction manager which is 

associated with said error correction procedure. 
The stylus-input correction manager of claim 1, wherein 
said auxiliary stylus-input correction manager sends said 

strokes to its recognition manager for storage and 
recognition, and processing by said error correction 

procedure. 
The stylus-input correction manager of claim 1, wherein 
said error correction procedure informs the application 

program via said mediator that there are revised results 
to be displayed. 
A stylus-based environment, comprising: 

(a) a stylus-input recognition correction manager that 
manages a stroke router, a recognition manager, and 

an mediator, wherein said stylus-input recognition 
correction manager creates and destroys auxiliary 

stylus-input recognition correction managers needed 
to support active error correction procedures; 
(b) a stylus-based application program, connected to said 
stylus-input recognition correction manager, that 

operates on a computer platform and accepts as input 
handwritten strokes; 
(c) a handwriting recognizer, connected to said 
stylus-input recognition manager, adapted to 

recognize said handwritten strokes; and 
(d) an error correction module, connected to said 
stylus-input recognition manager, adapted to correct 

errors in said recognized handwritten strokes. 
The stylus-based system environment of claim 4, wherein 
said stroke router has a first and a second mode of 

operation, wherein said first mode routes received strokes 
to said recognition manager for storage and processing by 

said handwriting recognizer, and said second mode routes 
said strokes to one of said created auxiliary stylus-input 

correction managers. 
The stylus-based system environment of claim 4, wherein 
said recognition manager is connected to said stroke 

router, and is adapted to store strokes, recognize said 
strokes, and relay said recognized strokes back to the 

application program. 
The stylus-based system environment of claim 4, wherein 
said mediator is adapted to implement a protocol between 

the application program and said error correction module 
that allows an error correction procedure to retrieve said 

recognized strokes displayed by the application program. 
The stylus-based system environment of claim 4, further 
comprising a pen, a digitized tablet, and a display 

device. 
The stylus-based system environment of claim 4, wherein 
said application program is adapted to create one or more 

of said stylus-input correction managers, wherein said 
application program passes said handwritten strokes to 

said created stylus-input correction manager which in turn 
passes said handwritten strokes to said handwriting 

recognizer. 
The stylus-based system environment of claim 9, wherein 
said error correction module is adapted to create an error 

correction stylus-input correction manager which is a 
child of said stylus-input correction manager created by 

said application program, whereby said error correction 
module is allowed to use a consistent set of recognized 

gestures, shapes, and character independent of said 
application program. 
</CLAIMS>
</TEXT>
</DOC>
