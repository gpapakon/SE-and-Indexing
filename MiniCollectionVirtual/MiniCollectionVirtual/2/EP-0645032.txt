<DOC>
<DOCNO>EP-0645032</DOCNO> 
<TEXT>
<INVENTION-TITLE>
SYSTEM DEVELOPMENT SUPPORT
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F944	G06F944	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The method and system of this invention assist a user (16) in the achievement of a task according to a set of procedures such as those used in the development of software products. A process description of the software being developed is instantiated by the system whereupon a support system (8) provides the user (16) with a series of choices relating to the software development. The choices selected, in turn, permit a variety of system tools (22), each operating in parallel and concurrently, to be used in the development of the software. The system automatically monitors and checks the process during any manipulation and provides error analysis as well as suggested courses of action to the user (16). The system provides flexible support without requiring the user (16) to follow a rigid development pattern.
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
ERICSSON TELEFON AB L M
</APPLICANT-NAME>
<APPLICANT-NAME>
TELEFONAKTIEBOLAGET LM ERICSSON
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
WENNMYR EINAR
</INVENTOR-NAME>
<INVENTOR-NAME>
WENNMYR, EINAR
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a system which
assists in the development of software products
according to a described set of procedures, and more
particularly, to an interactive support medium which
automatically monitors, records, invokes and suggests
past, present and future actions according to a set of
procedures such as those found in many methods related
to computer program design.For years computer software developers and
programmers have desired and sought after tools which
ease the burdens associated with the creation of
complex computer programs. Software development of the
distant, and not so distant, past has required the
programmer's specific attention to every detail
associated with the program's progression and all the
documents, descriptions and the like associated
therewith. A computer software system was built, 
tested, the components revised and the system rebuilt
until the programmer created the desired product. As
software systems have grown in size and complexity, the
number of programmers required for the design of a
single system has also grown dramatically.
Consequently, it is now quite common that different
individual programmers will design separate elements of
an overall software system in which each is required to
interact and work together in the final product.
Clearly, problems of consistency and uniformity arise
in such projects. If, for example, one programmer
modifies his or her section of the program,
ramifications are experienced in other parts of the
program which should be brought to the attention of the
designers working on those parts. Thus, there exists
a need for development support systems which track and
assist software developers during the creation of
complex computer programs.One solution is shown, in U.S. Patent No.
4,860,204 to Gendron et al., wherein a workstation
employs methods to construct computer programs through
the use of visual graphical representations. The
computer based workstation of Gendron allows the user
to create a computer program by connecting graphical
programming blocks together and thereby create the
desired functional result. While the Gendron system
performs integrity checks on the interconnections
chosen, the system does not provide or automatically
present suggestions to the user regarding the courses
of action available and the consequences of the actions
taken by the user.Similarly, in U.S. Patent No. 4,734,854 to Afshar,
there is taught a system for designing generic program
modules which perform commonly needed computing
fu
</DESCRIPTION>
<CLAIMS>
A method of developing a computer program,
including providing in an interactive system a description

of a program development process (350) including a
plurality of steps needed to be performed in developing

the computer program, the program development process
having a plurality of states for each of which the

description specifies a respective action that furthers
the development of the computer program and is available

to be taken in response to an occurrence of the respective
state, no sequencing being imposed on the states, the method further including executing the

description of the program development process (44),
including generating events indicative of the taking of

an action in furtherance of developing the computer
program (65), and updating the program development process

to an updated state to account for a generated event
(67),


said providing step includes describing the program
development process in a graphical language whereby the

description is rendered in a graphically illustrative
form; and
the executing step includes suggesting that the
action specified for the updated state by the description

be taken in developing the computer program (76) while
still permitting a user of the interactive system to

select an action furthering the development of the computer program that is not specified for the updated
state by the description (66).
The method of Claim 1, including the user taking
the suggested action (68).
The method of Claim 1, including the user taking
an action that is not specified for the updated state by

the description (66).
The method of Claim 1, wherein the description
of the program development process specifies a plurality 

of actions that further the development of the computer
program and are available to be taken in response to an

occurrence of the updated state.
The method of Claim 4, wherein said suggesting
step includes suggesting that any one of the plurality of

actions specified for the updated state by the description
be taken while still permitting the user to select an

action other than the actions specified for the updated
state by the description (66).
The method of any of Claims 1-5, wherein one of
the actions includes invocation of a general purpose

program development tool function (69).
The method of Claim 1, wherein the description
of the program development process specifies for one of

said states other than the updated state a plurality of
actions that further the development of the computer

program and are available to be taken in response to an
occurrence of said one state.
An apparatus for interactively developing a
computer program, including an interactive system (8)

having an assistant (12) and a plurality of general
purpose program development tools (22), said assistant

including means for executing a description of a program
development process (44), said program development process

including a plurality of steps which are needed to develop
the computer program and which are expressed by the

description, the program development process also having
a plurality of states for each of which the description

specifies a respective action that furthers the
development of the computer program and is available to

be taken in response to an occurrence of the respective
state, no sequencing being imposed on the states, said assistant further including means for

recognizing an event indicative of the taking of an action 
by one of said program development tools (65) and means

for updating the program development process to an updated
state to account for said recognized event (67),


said description describes the program development
process in a graphical language, whereby the description

is rendered in a graphically illustrative form; and
said assistant includes means responsive to an
occurrence of the updated state for suggesting that the

action specified for the updated state by the description
be taken in developing the computer program (76) while

still permitting a user of the apparatus to select an
action furthering the development of the computer program that is not specified for the updated state by the

description (66).
The apparatus of Claim 8, wherein the
description of the program development process specifies

for the updated state a plurality of actions that further
the development of the computer program and are available

to be taken in response to an occurrence of the updated
state, and wherein said means for suggesting suggests that

any one of the plurality of actions specified for the
updated state by the description be taken while still

permitting the user to take an action other than the
actions specified for the updated state by the description

(66).
The apparatus of Claim 8, wherein the
description of the program development process specifies

for one of said states other than the updated state a
plurality of actions that further the development of the

computer program and are available to be taken in response
to an occurrence of said one state.
The apparatus of Claim 8, wherein said assistant
includes a module having stored therein the description

of the program development process (42), said module 
coupled to said means for executing.
The apparatus of Claim 8, wherein said
interactive system includes a message handler (46)

connecting the plurality of tools to the assistant, the
message handler for communicating desired actions from the

assistant to the plurality of tools and for communicating
events originated in the tools to said means for

recognizing.
</CLAIMS>
</TEXT>
</DOC>
