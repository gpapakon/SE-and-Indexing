<DOC>
<DOCNO>EP-0657812</DOCNO> 
<TEXT>
<INVENTION-TITLE>
System and method for monitoring library software.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1136	G06F1136	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F11	G06F11	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method and system for enabling the monitoring of a shared library 
of software programs for executing on a computer system. The system 

enables monitor instrumentation of the library without recompiling the 
source code of the programs. Encapsulation of the library routines does 

not disrupt the relative addressing of the library routines since an 
instruction is simply replaced. A single demultiplexor entry for each 

library routine provides access to common instrumentation code and to 
user specified entry and exit routines for the particular library 

routine. Common instrumentation code and user specified entry and exit 
routines are not replicated when used to monitor a number of software 

programs. No instructions are added to the library routine. User 
specified entry and exit routines are used to collect selected 

performance and system state data. Instrumentation code is provided to 
link the library routines to the user specified entry and exit routines. 

The standard link interface allows the entry and exit routines to be 
written in high level languages. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
FORTIN MICHAEL RICHARD
</INVENTOR-NAME>
<INVENTOR-NAME>
URQUHART ROBERT JOHN
</INVENTOR-NAME>
<INVENTOR-NAME>
FORTIN, MICHAEL RICHARD
</INVENTOR-NAME>
<INVENTOR-NAME>
URQUHART, ROBERT JOHN
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to measuring the performance of 
computer systems. Computer system performance, e.g. the speed of operation or the 
throughput of a system, is a function of the computer system hardware and 
the efficiency of the software used on the system. Performance can be 
enhanced by ensuring that the software is efficiently written to most 
effectively use the hardware or by modifying the hardware to enhance 
certain software function. The identification of performance problems requires an ability to 
monitor the execution of software on a particular hardware system and to 
be able to identify those sections of the software that are consuming 
inordinate amounts of hardware resource. For example, the execution of a 
software program can be monitored to determine how much processing time 
is spent in each subroutine. Tracing program execution and monitoring execution adds significant 
overhead to program execution. Thus, most software does not include 
monitoring function in its basic form. Software developers may add 
instructions to the software to monitor selected portions, but these 
instructions are typically removed before the final version is shipped to 
customers or placed in regular use. Introduction of an existing program onto new hardware or perception 
of performance problems in new software may create a requirement to 
monitor software that does not contain any inherent monitoring 
capability. This creates a need to "instrument" the software to measure 
performance. Instrumentation of software refers to the process of 
enabling the software to be monitored at selected points to capture 
significant system state data at those points. Historically, instrumentation of software was accomplished by 
modifying the source code for the software to include monitoring 
instructions, recompiling the source code, and then executing the 
modified software. The approach has the disadvantages of requiring 
access to source code (which may not be available for commercially 
purchased software), and being error prone if the person modifies the  
 
code incorrectly. In addition, this form of instrumentation may 
introduce performance problems itself causing the results to be 
misleading. A second approach to instrumentation uses special purpose hardware 
to record access to certain computer system functions. A special monitor 
is connected to the computer to record changes in the physical state of 
the machine, e.g. when a signal is received on a certain line or when 
certain memory
</DESCRIPTION>
<CLAIMS>
A method for monitoring a plurality of software programs executable 
on a computer system, each of the software programs having a plurality of 

computer executable instructions, the computer system having memory and a 
processor, the method comprising the steps of: 

   storing a plurality of monitoring programs for monitoring software 
execution, the plurality of monitoring programs each being placed at an 

addressable location in the memory; 
   storing for each of the plurality of software programs a monitor 

translation entry for invoking the addressable monitoring program for the 
software program; and 

   replacing one of the plurality of computer executable instructions 
in each of the plurality of software programs with an invocation of the 

monitor translation entry for that software program. 
A method as claimed in claim 1, comprising the steps of: 
   executing one of the software programs; 

   accessing the monitor translation entry to determine the address of 
the associated monitoring program; 

   executing the monitoring program; 
   returning execution control to the software program. 
A method as claimed in claim 1, wherein the plurality of monitoring 
programs include common monitoring programs common to all of the software 

programs and entry/exit monitoring programs for performing monitoring 
actions for one or more of the software programs, and wherein the step of 

storing for each of the plurality of software programs a monitor 
translation entry comprises the steps of: 

   determining the common monitoring program address; 
   receiving an indication of which of the entry/exit monitor programs 

are associated with the software program;
 

   determining the addresses of the associated entry/exit monitor 
programs; and 

   storing a monitor translation entry containing an invocation of the 
common monitor program and an address for each of the entry/exit monitor 

programs. 
A system for monitoring execution of a software routine on a 
computer system, the system comprising: 

   storage means for storing data in the computer system; 
   means for storing a plurality of monitoring programs at addressable 

locations in the storage means; 
   means for associating one or more of the monitoring programs with 

the software routine; and 
   means for modifying the software routine to invoke the associated 

monitoring programs. 
A system as claimed in claim 4, wherein the means for associating 
the monitoring programs associates a first monitor program for common 

routine processing and associates a plurality of entry/exit monitor 
programs for monitor activities, and wherein the system further 

comprises: 
   means for causing the first monitor program to invoke the 

addressable entry/exit monitor programs. 
A system as claimed in claim 4, further comprising: 
   means for collecting data generated by the monitoring programs. 
</CLAIMS>
</TEXT>
</DOC>
