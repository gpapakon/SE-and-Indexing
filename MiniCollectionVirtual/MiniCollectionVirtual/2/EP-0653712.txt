<DOC>
<DOCNO>EP-0653712</DOCNO> 
<TEXT>
<INVENTION-TITLE>
System and method for connecting a short word length memory to a wider address/data bus.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1200	G06F1200	G06F1206	G06F1206	G06F1336	G06F1336	G06F1340	G06F1340	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F12	G06F12	G06F12	G06F12	G06F13	G06F13	G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A system and method is provided for connecting a short word length 
memory to a significantly wider bus operated in an address/data 

multiplexing mode. A mode of operation is defined for the bus whereby 
the bus lines are divided for purposes of memory accessing into a data 

group and an address group. The data group is operable bi-directionally 
to read or write memory, using the addresses provided on the group of 

address lines. This architecture and practice is particularly suited for 
a boot ROM used with processors, in that such ROMs are normally of 

relatively short word length while the processors are of relatively long 
word length and are accordingly connected to buses of similar long word 

length. Bridge logic interfaces the processor bus to the ROM for 
sequenc
ing, timing and supplemental control in converting the data from 
the ROM format to the processor format. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CURRY SEAN EUGENE
</INVENTOR-NAME>
<INVENTOR-NAME>
DEAN MARK EDWARD
</INVENTOR-NAME>
<INVENTOR-NAME>
FAUCHER MARC RAYMOND
</INVENTOR-NAME>
<INVENTOR-NAME>
PETERSON JAMES CHESTER
</INVENTOR-NAME>
<INVENTOR-NAME>
TANNER HOWARD CARL
</INVENTOR-NAME>
<INVENTOR-NAME>
CURRY, SEAN EUGENE
</INVENTOR-NAME>
<INVENTOR-NAME>
DEAN, MARK EDWARD
</INVENTOR-NAME>
<INVENTOR-NAME>
FAUCHER, MARC RAYMOND
</INVENTOR-NAME>
<INVENTOR-NAME>
PETERSON, JAMES CHESTER
</INVENTOR-NAME>
<INVENTOR-NAME>
TANNER, HOWARD CARL
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to computer architectures. 
More particularly, the invention is directed to systems and methods for 
interfacing a short word length memory to a significantly wider bus 
typically operated in an address/data multiplexing mode. The power-on-reset cycle used to initialize or boot a computer is 
prescribed by code usually stored in a non-volatile memory of the 
computer, typically a programmable read only memory (PROM), a flash ROM 
or a conventional ROM. For simplicity, the generic term ROM will be used 
hereinafter to represent all three classes of devices. One of skill in 
the art will obviously recognize that when the discussion deals with a 
writing operation the memory under consideration is flash ROM, or even 
possibly a RAM. A ROM of 0.5M bytes is typically adequate to perform the 
initialization or boot sequence. The typical commercially available ROM 
devices suited to this application have data ports of 8 or 16 bits. The storage in such ROM of information other than initialization or 
boot code is fully contemplated, though such usage is less likely to 
occur. The invention will therefore be described hereafter in the 
context of the most likely use, ie in connection with initialization or 
boot code. In contrast to the short word length and slow speed of the ROM 
devices, computer processors, such as the PowerPC 601 (Trademark of IBM 
Corporation) processor commercially available from IBM Corporation, use 
32-bit address buses and 32/64-bit data buses and operate at rates 
typically an order of magnitude faster than the ROM devices. The 
features of this particular processor are described in the publication 
PowerPC 601 Risc Microprocessor Users Manual MPC 601 UM/AD available from 
Motorola Ltd in the UK. The relative inadequacy of such ROM devices is 
also apparent when compared to contemporary system buses designs. An 
example is the Peripheral Component Interconnect (PCI) bus, as defined in 
the PCI Local Bus Specification, Production Version, Revision 2.0, dated 
30 April 1993, distributed by the PCI Special Interest Group of 
Hillsboro, Oregon, USA. A somewhat more subtle but equally real technical problem 
encountered with the use of a ROM to initialize the aforementioned  
 
PowerPC 601 processor arises from the fact that the processor starts in a 
burst mode. In this mode the processor expects 32-bytes of data in four 
increments of 8 bytes each. Thus, there is a need to convert 8 or 16-bit 
ROM data to four increments of 8 byte units. This size
</DESCRIPTION>
<CLAIMS>
A system for connecting a short word length memory (9) to a wider 
address/data bus (12), comprising; 

   first connection means for connecting the data lines of the memory 
(9) to a first group of bus lines of the wider address/data bus (12); 

   second connection means for connecting the address lines of the 
memory (9) to a second group of bus lines of the wider address/data bus 

(12); 
   first execution means for executing a first, memory read, mode of 

bus operation by writing a memory address on the second group of bus 
lines and reading memory data off the first group of bus lines; and 

   second execution means for executing a second mode of bus operation 
by writing an address on the combination of the first and second groups 

of bus lines and thereafter reading data off or writing data on the 
combination of the first and second groups of bus lines. 
A system as claimed in claim 1, further comprising: 
   third execution means for executing a third, memory write, mode of 

bus operation by writing a memory address on the second group of bus 
lines and writing memory data on the first group of bus lines. 
A system as claimed in claim 1 or claim 2, wherein the combination 
of the first and second groups of bus lines together form the wider 

address/data bus. 
A system as claimed in any preceding claim, wherein the first 
group, second group, and the wider address/data bus are segmented by 

bytes. 
A system as claimed in any preceding claim, further comprising: 
   a buffer (14) for storing data read off the first group of bus 

lines by the first execution means; and
 

   transmission means for transmitting blocks of the data accumulated 
in the buffer (14) over a processor bus (2) to a high speed processor 

(1), the size of said blocks in bytes being determined by the high speed 
processor (1). 
A system as claimed in any preceding claim, wherein the memory is a 
non-volatile memory. 
A system claimed in claim 6, wherein the nonvolatile memory is a 
programmable random access memory. 
A system as claimed in claim 6, wherein the non-volatile memory is 
a flash ROM and the wider address/data bus is defined by the PCI 

architecture. 
A method of operating a short word length memory (9) with a wider 
address/data bus (12), comprising the steps of: 

   connecting the data lines of the memory (9) to a first group of bus 
lines of the wider address/data bus (12); 

   connecting the address lines of the memory to a second group of bus 
lines of the wider address/data bus (12); 

   executing a first, memory read, mode of bus operation by writing a 
memory address on the second group of bus lines and reading memory data 

off the first group of bus lines; and 
   executing a second mode of bus operation by writing an address on 

the combination of the first and second groups of bus lines and 
thereafter reading data off or writing data on the combination of the 

first and second groups of bus lines. 
A method as claimed in claim 9, further comprising the step of: 
   executing a third, memory write, mode of bus operation by writing a 

memory address on the second group of bus lines and writing memory data 
on the first group of bus lines. 
A method as claimed in claim 9 or 10, wherein the combination of 
the first and second groups of bus lines together form the wider 

address/data bus. 
A method as claimed in any of claims 9 to 11, wherein when the 
first mode of bus operation is being executed, the method comprises the 

further steps of: 
   storing data read off the first group of bus lines in a buffer 

(14); and 
   transmitting blocks of the data accumulated in the buffer (14) over 

a processor bus (2) to a high speed processor (1), the size of said 
blocks in bytes being determined by the high speed processor (1). 
A method as claimed in any of claims 9 to 12, wherein the memory is 
a non-volatile memory. 
A method as claimed in claim 13, wherein the non-volatile memory is 
a flash ROM and the wider address/data bus is defined by the PCI 

architecture. 
</CLAIMS>
</TEXT>
</DOC>
