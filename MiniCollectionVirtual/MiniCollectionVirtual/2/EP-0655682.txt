<DOC>
<DOCNO>EP-0655682</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Multitasking arithmetic unit
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F948	G06F946	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The invention relates to a computing unit, in particular a central processing unit of a modular programmable controller, having a high-priority task (hpT) and at least one further task (for example wT) of lower priority, it being possible for the tasks (hpT, wT) to be executed by the computing unit (1), the computing unit (1) being able to execute only one of the tasks (hpT, wT) at a specific point in time. A request and a conclusion condition are assigned at least to the high-priority task (hpT); when the request condition of the high-priority task (hpT) occurs, the computing unit (1) stops executing the at least one further task (wT) of lower priority and starts to execute the high-priority task (hpT); the computing unit (1) stops executing the high-priority task (hpT) after a maximum computing time and starts to execute once more the at least one further task (wT) of lower priority, even if the conclusion condition of the high-priority task (hpT) has not occurred. 
<
IMAGE
>
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
SIEMENS AG
</APPLICANT-NAME>
<APPLICANT-NAME>
SIEMENS AKTIENGESELLSCHAFT
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
SAND MANFRED DIPL-ING
</INVENTOR-NAME>
<INVENTOR-NAME>
TRUMMER GEORG DIPL-ING
</INVENTOR-NAME>
<INVENTOR-NAME>
SAND, MANFRED, DIPL.-ING.
</INVENTOR-NAME>
<INVENTOR-NAME>
TRUMMER, GEORG, DIPL.-ING.
</INVENTOR-NAME>
</INVENTORS>
<CLAIMS>
Arithmetic unit, in particular a central
processing unit of a modular programmable controller,

having a high-priority task (hpT), a low-priority task
(zwT) which can always be executed, and further tasks

(for example hpKt, wT) with priorities between the
high-priority task and the low-priority task (hpT,

zwT),

wherein the tasks (hpT, hpKt, wT, zwT) can be
executed by the arithmetic unit (1),
wherein the arithmetic unit (1) at a certain
instant can execute only one of the tasks (hpT,

hpKt, wT, zwT),
wherein a respective request condition and a
termination condition are assigned to at least the

high-priority task (hpT) and the further tasks
(hpKt, wT), wherein upon the occurrence of the

termination condition of the task (for example
hpKt) which is being executed at the present time,

the arithmetic unit (1) terminates the execution
of the task (hpKt) which is being executed at the

present time and takes up the execution of the
task (for example wT) with the next lowest

priority, the request condition of which is
fulfilled and the termination condition of which

is not fulfilled,
wherein the arithmetic unit (1) terminates the
execution of a task (for example wT) which is not

the high-priority task (hpT) in the event of the
occurrence of a request condition of a task (for

example hpT) with higher priority and takes up the
execution of the higher priority task (hpT),
wherein the arithmetic unit (1) terminates the
execution of the high-priority task (hpT) after a

maximum calculating time and takes up the
execution of the task (for example wT) with the 

next lowest priority, the request condition of
which is fulfilled and the termination condition

of which is not fulfilled, even if the termination
condition of the high-priority task (hpT) has not

occurred, and
wherein the arithmetic unit (1) takes up the
execution of the high-priority task (hpT) again

after a blocking time.
Arithmetic unit according to claim 1,

characterised in that the maximum calculating time can
be specified by the user.
Arithmetic unit according to claim 1 or 2,

characterised in that the high-priority task (hpT)
sends communication jobs to other units connected to

the arithmetic unit (1) by way of a bus system (11) and
receives communication jobs from the other units.
Arithmetic unit according to claim 3,

characterised

in that the further tasks (wT) include at least
one high-priority communication task (hpKt), to

which the second highest priority is assigned, and
in that the high-priority communication task
(hpKt) evaluates and at least partially processes

communication jobs received from the high-priority
task (hpT).
Arithmetic unit according to claim 4,

characterised

in that the further tasks (wT) include a task
(zwT) to be repeated cyclically and a low-priority

communication task (npKt), the second lowest
priority being assigned to the task (zwT) to be

repeated cyclically and the lowest priority being
assigned to the low-priority communication task

(npKt),
in that communication jobs are transmitted to the
low-priority communication task by the high-priority 

communication task (hpKt),
in that the low-priority communication task (npKt)
processes communication jobs transmitted by the

high-priority communication task (hpKt), and
in that during the execution of the task (zwT) to
be repeated cyclically, the arithmetic unit (1)

terminates the execution of the task (zwT) to be
repeated cyclically after one cycle calculating

time and takes up the execution of the low-priority
communication task (npKt).
Arithmetic unit according to claim 5,

characterised in that the cycle calculating time
depends on the times (T
z
, T
k
) during which the
arithmetic unit (1) has previously executed the task

(zwT) to be repeated cyclically or the low-priority
communication task (npKt).
Automation system, in particular modular
programmable controller, having an arithmetic unit (1)

according to one of claims 1 to 6.
</CLAIMS>
</TEXT>
</DOC>
