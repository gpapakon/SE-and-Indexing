<DOC>
<DOCNO>EP-0648353</DOCNO> 
<TEXT>
<INVENTION-TITLE>
SYSTEM FOR CHANGING SOFTWARE DURING COMPUTER OPERATION
</INVENTION-TITLE>
<CLASSIFICATIONS>H04Q3545	G06F1114	G06F1114	G06F9445	H04Q3545	G06F1100	G06F1100	G06F9445	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04Q	G06F	G06F	G06F	H04Q	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04Q3	G06F11	G06F11	G06F9	H04Q3	G06F11	G06F11	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A system (21) for replacement of software in an operating computer system without disturbing the ongoing activities of the computer system. During an initial phase, the system (21) directs all traffic to the old software version, or change unit (22). During a loading phase, the system (21) receives a new software version (23), and data change information (24). The data change information (24) receives semi-permanent data from the change unit (22) and transfers that data, and associated updates, continuously throughout all phases of the replacement. During a test phase, the system (21) first directs test traffic through the new version (23), and then sample traffic if the test traffic is successful. If the test phase is successful, the completion phase directs all new traffic to the new version (23), and only old traffic that has been utilizing the change unit (22), is directed to the change unit (22). Once all old traffic has come to completion, or has been terminated, the change unit is no longer used and can be removed with the data change information (24).
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
ERICSSON TELEFON AB L M
</APPLICANT-NAME>
<APPLICANT-NAME>
TELEFONAKTIEBOLAGET LM ERICSSON
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
KLOEFVER JAN LEIF INGEMAR
</INVENTOR-NAME>
<INVENTOR-NAME>
MARKSTROEM ULF KURT HAAKAN
</INVENTOR-NAME>
<INVENTOR-NAME>
NILSSON KJELL RICKARD
</INVENTOR-NAME>
<INVENTOR-NAME>
KLOEFVER, JAN, LEIF, INGEMAR
</INVENTOR-NAME>
<INVENTOR-NAME>
MARKSTROEM, ULF, KURT, HAAKAN
</INVENTOR-NAME>
<INVENTOR-NAME>
NILSSON, KJELL, RICKARD
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
A portion of the disclosure of this patent
document contains material which is subject to
copyright protection. The copyright owner has no
objection to the facsimile reproduction by anyone of
the patent document or the patent disclosure, as it
appears in the patent and trademark office, patent file
or records, but otherwise reserves all copyrights
whatsoever.The invention relates to the modification of
software, and in particular, to the replacement of
software in an operating computer system.One aspect of computer software is that it must be
periodically updated with revisions, additions and/or
deletions in order to continue to provide adequate 
functionality to the user, to optimize the software and
to correct errors and discrepancies that arise
throughout the life of the software. As new features
are added to software, it is desirable to replace the
old software with the new versions as early and as
easily as possible in order to provide the user with
the features of the new software.In certain types of computing systems, such as
stand-alone or batch processing systems, changing
software from one version to another presents few
obstacles. Typically, the computer system is merely
shut down during a period of the day when there is
little activity and maintenance personnel are readily
available. The old software is then simply removed and
replaced by the newer version of the software.
Thereafter, the computing system is restarted and all
future data processing is done with the new version of
the software. This procedure, of course, assumes that
the new software has been adequately tested and
debugged on an offline system to the point that the
software personnel and the operational management are
confident that it will adequately perform the functions
for which it is intended without undue interruptions
that may require halting and then re-starting the
entire computing system.In other types of computing systems, such as
modern stored program control (SPC) telecommunications
exchange systems (commonly referred to in the industry
simply as "switches"), neither the testing of new
versions of software nor the changing of software in
the system is as easy as in standalone batch processing
systems. For example, new versions of software cannot
be effectively tested without being placed into actual
operation processing calls. The software must be 
tested while in operation in order to determine whether
the software will adequately function under live
operating conditions and whether the new portions will
properly
</DESCRIPTION>
<CLAIMS>
A method of passing data processing control of
a computer apparatus from existing software to new

software, said method comprising the steps of
installing the new software in the computer apparatus,

using the new software to process test data processing
transactions, and adopting the new software for use in

the computer apparatus upon successful processing of
the test data processing transactions; characterized by:


automatically passing data processing control from
the existing software to the new software without

materially disrupting the processing of existing data
by the existing software and while allowing both

software versions to generate output data
simultaneously, using the new software to process test

data processing transactions at the same time as both
existing and new data processing transactions are being

processed by the existing software (103), automatically
transferring data processing control of all new data

processing transactions to the new software (109)
subsequent to its successful processing of said test data

processing transactions (104) while continuing to use the
existing software to process existing data processing

transactions and generating output data from both the new
and existing software simultaneously, and automatically

transferring complete data processing control to the new
software (112) subsequent to its successful processing of

said new data processing transactions (110).
The method as set forth in claim 1 wherein said
step of automatically transferring complete data

processing control to the new software subsequent to 
its successful processing of said new data processing

transactions includes the step of:

automatically transferring complete data processing
control to the new software in response to the

successful processing of all new data processing
transactions by the new software and the completion of

processing of the existing data processing transactions
by the existing software.
The method as set forth in claim 1 wherein both
the existing and new data processing transactions

include dynamic data which is created and used during
the processing of each transac
tion and deleted when the
processing is complete and semipermanent data which is

used by and survives the processing of a plurality of
transactions, said method including the additional step

of:

transferring data from the existing software to the
new software.
The method as set forth in claim 3 wherein:
only semipermanent data is transferred from the

existing software to the new software.
The method as set forth in claim 3 wherein a
new data representation used in the new software is

different from an existing data representation used in
the existing software and wherein said step of

transferring data from the existing software to the new
software includes the step of:


converting said data from said existing
representation to said new representation.
The method as set forth in claim 5 wherein: 

said step of converting said data from said existing
representation to said new representation is performed

on an as needed basis for said new software.
The method as set forth in claim 5 wherein:
said step of converting said data from said existing

representation to said new representation includes
converting all said data to said new representation at

one time along with the additional step of:

reconverting said data from said new
representation to said existing representation on an as

needed basis for said existing software.
The method as set forth in claim 3 which
includes, following said step of transferring data from

the existing software to the new software, the
additional step of:


updating, in response to each original update of
semipermanent data within either the existing software

or the new software, the semipermanent data within the
other software.
The method as set forth in claim 5 which
includes, following said step of converting said data

from the existing representation to the new
representation, the additional step of:


updating, in response to each original update of
semipermanent data within either the existing software

or the new software, the semipermanent data within the
other software.
The method as set forth in claim 1 wherein said
step of automatically transferring complete data

processing control to the new software subsequent to
its successful processing of said new data processing

transactions includes the step of: 

automatically transferring complete data processing
control to the new software in response to the

expiration of a preselected time period following the
beginning of said step of automatically transferring

data processing control of all new data processing
transactions to the new software.
The method as set forth in claim 10 wherein,
after the expiration of said preselected time period,

all transactions still being processed using existing
software are forced to terminate.
The method as set forth in claim 10 wherein,
after the expiration of said preselected time period,

all transactions still being processed using existing
software are transferred to the new software for

completion of processing.
The method as set forth in claim 10 wherein,
after the expiration of said preselected time period,

all transactions capable of surviving the resultant
disturbance are attempted to be transferred to the new

software for processing and all others are terminated.
The method as set forth in claim 1, wherein the
computer apparatus forms part of a telecommunications

switching system, the existing and new software are
call processing software, and the data processing

transactions are calls, said method comprising the
further step of:


routing all new calls received by the system to the
existing software in response to the new software

failing to successfully process test calls.
The method as set forth in claim 14 which also
includes the step of: 


removing the existing software from the system in
response to successful processing of the new calls by

the new software, and a termination of all calls being
processed by the existing software.
The method as set forth in claim 14 wherein
both existing calls and new calls have associated

therewith dynamic data which is created and used during
the processing of each call and deleted when the

processing is complete and semipermanent data which is
used by and survives the processing of a call, said

method including the additional step of:

transferring data from the existing software to the
new software.
The method as set forth in claim 16 wherein:
only semipermanent data is transferred from the

existing software to the new software.
The method as set forth in claim 16 wherein a
new data representation used in the new software is

different from an existing data representation used in
the existing software and wherein said step of

transferring data from the existing software to the new
software includes the step of:


converting said data from said existing
representation to said new representation.
The method as set forth in claim 18 wherein
said step of converting said data from said existing

representation to said new representation is performed
on an as needed basis for said new software.
The method as set forth in claim 18 wherein
said step of converting said data from said existing

representation to said new representation includes 
converting all said data to said new representation at

one time along with the additional step of:

reconverting said data from said new representation
to said existing .representation on an as needed basis

for said existing software.
The method as set forth in claim 16 which
includes, following said step of transferring data from

the existing software to the new software, the
additional step of:


updating, in response to each original update of
semipermanent data within either the existing software

or the new software, the semipermanent data within the
other software.
The method as set forth in claim 18 which
includes, following said step of converting said data

from the existing representation to the new
representation, the additional step of:


updating, in response to each original update of
semipermanent data within either the existing software

or the new software, the semipermanent data within the
other software.
The method as set forth in claim 14, wherein
said step of transferring complete call processing

control includes transferring complete call processing
control to the new software in response to the

expiration of a preselected time period following the
beginning of said step of transferring processing

control of all new calls to the new software.
The method as set forth in claim 23 wherein,

after the expiration of said preselected period of
time, all calls still being processed using the

existing software are forced to terminate. 
The method as set forth in claim 23 wherein,
after expiration of said preselected period of time,

all calls still being processed using the existing
software are transferred to the new software for

completion of processing.
The method as set forth in claim 23 wherein,
after the expiration of said preselected period of

time, all calls capable of surviving the resultant
disturbance are attempted to be transferred to the new

software and all others are terminated.
The method of claim 14 wherein said new
software processes test calls during said using step;

and including routing a number of sample new calls, in
addition to said test calls, to the new software for

processing thereby, in response to said test calls
being successfully processed by the new software.
The method as set forth in claim 27 wherein
both existing calls and new calls have associated

therewith dynamic data which is created and used during
the processing of each call and deleted when the

processing is complete and semipermanent data which is
used by and survives the processing of a call, said

method including the additional step of:

transferring data from the existing software to the
new software.
The method as set forth in claim 28 wherein:
only semipermanent data is transferred from the

existing software to the new software.
The method as set forth in claim 28 wherein a
new data representation used in the new software is

different from an existing data representation used in 
the existing software and wherein said step of

transferring data from the existing software to the new
software includes the step of:


converting said data from said existing
representation to said new representation.
The method as set forth in claim 30 wherein,
said step of converting said data from said existing

representation to said new representation is performed
on an as needed basis for said new software.
The method as set forth in claim 30 wherein,
said step of converting said data from said existing

representation to said new representation includes
converting all said data to said new representation at

one time along with the additional step of:

reconverting said data from said new representation
to said existing representation on an as needed basis

for said existing software.
The method as set forth in claim 28 which
includes, following said step of transferring data from

the existing software to the new software, the
additional step of:


updating, in response to each original update of
semipermanent data within either the existing software

or the new software, the semipermanent data within the
other software.
The method as set forth in claim 30 which
includes, following said step of converting said data

from the existing representation to the new
representation, the additional step of:


updating, in response to each original update of
semipermanent data within either the existing software 

or the new software, the semipermanent data within the
other software.
The method of claim 14, including removing all
existing software from the system in response to

successful processing of all of the new calls by the
new software, and the first to occur of the termination

of all calls being processed by the existing software
or the expiration of a preselected period of time

following the transfer of control of all new calls to
the new software.
The method as set forth in claim 35 wherein,
after the expiration of said preselected time period,

all calls still being processed using the existing
software are forced to terminate.
The method as set forth in claim 35 wherein,
after the expiration of said preselected time period,

all calls still being processed using the existing
software are transferred to the new software for

completion of processing.
The method as set forth in claim 35 wherein,
after the expiration of said preselected time period,

all calls capable of surviving the resultant
disturbance are attempted to be transferred to the new

software for processing and all others are terminated.
The method of claim 1, including routing all
other data processing transactions to said new software

for processing thereby in response to the completion of
processing of said existing data processing

transactions by said existing software,

to automatically effect a changeover from said
existing software to said new software during computer 

apparatus runtime without materially disrupting the
continuance of data processing operations.
The method as set forth in claim 39 which
includes the additional step, performed between said

using step and said first-mentioned transferring step,
of:


transmitting to said new software a
predetermined, limited sample amount of actual data

processing transactions which would otherwise be
processed by said existing software, in response to a

successful processing of said test data processing
transactions by said new software; and in which
said first-mentioned transferring step is performed
in response to a successful processing of both said

test data processing transactions and said limited
sample of actual data processing transactions by said

new software.
The method as set forth in claim 39 or 40
wherein:


said computer apparatus is provided in a
telecommunications switching system; and
said existing and new data processing transactions
are calls received by said telecommunications switching

system.
A system for passing data processing control of
a computer apparatus from existing software to new

software, said system comprising means for installing the
new software in the computer apparatus, means for using

the new software to process test data processing
transactions, and means for adopting the new software for

use in the computer apparatus upon successful processing
of the test data processing transactions, characterized

by:

automatically passing data processing control from
the existing software to the new software without

materially disrupting the processing of existing data by 
the existing software and while allowing both software

versions to generate output data simultaneously, and
including means for using the new software to process test

data processing transactions at the same time as both new
and existing data processing transactions are being

processed by the existing software (103), means for
automatically transferring data processing control of all

new data processing transactions to the new software
(109) subsequent to its successful processing of said test

data processing transactions (104) while continuing to use
the existing software to process existing data processing

transactions and generating output data from both the new
and existing software simultaneously, and means for

automatically transferring complete data processing

control to the new software (112) subsequent to its
successful processing of said new data processing

transactions (110).
The system as set forth in claim 42 further
comprising:


means for processing all new data processing
transactions with the new software while the existing

software processes the existing data processing
transactions.
The system as set forth in claim 43 wherein said
means for automatically transferring complete data

processing control to the new software subsequent to its
successful processing of said new data processing

transactions, includes:

means for automatically transferring complete data
processing control to the new software subsequent to the

completion of processing of the existing data processing
transactions by the existing software.
The system as set forth in claim 44 wherein said
means for automatically transferring complete data 

processing control to the new software subsequent to its
successful processing of said new data, includes:


means for automatically transferring complete data
processing control to the new software in response to the

successful processing of all new data processing
transactions by the new software and the completion of

processing of the existing data processing transactions
by the existing software.
The system set forth in claim 42 wherein both
the existing and new data processing transactions include

dynamic data which is created and used during the
processing of each transaction and deleted when the

processing is complete and semipermanent data which is
used by and survives the processing of a plurality of

transactions, said system also including:

means for transferring data from the existing
software to the new software.
The system set forth in claim 46 wherein:
only semipermanent data is transferred from the

existing software to the new software.
The system set forth in claim 46 wherein a new
data representation used in the new software is different

from an existing data representation used in the existing
software and wherein said means for transferring data from

the existing software to the new software includes:

means for converting said data from said existing
representation to said new representation.
The system as set forth in claim 48 wherein,
said means for converting said data from said existing

representation to said new representation includes means
for converting said data on an as needed basis for said

new software. 
The system as set forth in claim 48 wherein,
said means for converting said data from said existing

representation to said new representation includes means
for converting all said data to said new representation

at one time along with,

means for reconverting said data from said new
representation to said existing representation on an as

needed basis for said existing software.
The system set forth in claim 46 which also
includes:


means for updating, in response to each original
update of semipermanent data within either the existing

software or the new software, the semipermanent data
within the other software.
The system set forth in claim 48 which also
includes:


means for updating, in response to each original
update of semipermanent data within either the existing

software or the new software, the semipermanent data
within the other software.
The system set forth in claim 43 wherein:

said means for automatically transferring complete
data processing control is responsive to the expiration

of a preselected time period following the beginning of
said transfer of processing control of all new data

processing transactions to the new software.
The system set forth in claim 53 wherein, after
the expiration of said preselected time period, all

transactions still being processed using existing software
are forced to terminate.
The system set forth in claim 53 wherein, after
the expiration of said preselected time period, all 

transactions still being processed using existing software
are transferred to the new software for completion of

processing.
The system set forth in claim 53 wherein, after
the expiration of said preselected time period, all

transactions capable of surviving the resultant
disturbance are attempted to be transferred to the new

software for processing and all others are terminated.
The system of claim 42, wherein the computer
apparatus forms part of a telecommunications switching

system, the existing and new software are call processing
software, and the data processing transactions are calls,

said system further comprising:

means for removing the existing software from the
system in response to successful processing of all of the

new calls by the new software, and a termination of all
calls being processed by the existing software.
The system as set forth in claim 57 which also
includes:


means for routing a selected number of actual calls
to the new software for processing thereby, in response

to said test calls being successfully processed by the new
software, while continuing to process the remainder of the

actual calls with the existing software, and in which,
said means for transferring processing control of all
new calls to the new software is responsive to the new

software successfully processing both said test calls and
said selected number of actual calls.
The system as set forth in claim 57 wherein both
existing calls and new calls have associated therewith

dynamic data which is created and used during the
processing of each call and deleted when the processing

is complete and semipermanent data which is used by and 
survives the processing of a call, said system also

including:

means for transferring data from the existing
software to the new software.
The system set forth in claim 59 wherein:

only semipermanent data is transferred from the
existing software to the new software.
The system set forth in claim 59 wherein a new
data representation used in the new software is different

from an existing data representation used in the existing
software, and said means for transferring data from the

existing software to the new software includes:

means for converting said data from said existing
representation to said new representation.
The system as set forth in claim 61 in which
said means for converting said data from said existing

representation to said new representation includes:

means for converting said data from said existing
representation to said new representation on an as needed

basis for said new software.
The system as set forth in claim 61 in which
said means for converting said data from said existing

representation to said new representation includes means
for converting all said data to said new representation

at one time and also includes,

means for reconverting said data from said new
representation to said existing representation on an as

needed basis for said existing software.
The system set forth in claim 59 which also
includes:


means for updating, in response to each original
update of semipermanent data within either the existing 

software or the new software, the semipermanent data
within the other software.
The system set forth in claim 61 which also
includes:


means for updating, in response to each original
update of semipermanent data within either the existing

software or the new software, the semipermanent data
within the other software.
The system as set forth in claim 57, including
means for routing only test calls to the new software for

processing thereby, while all actual calls continue to be
processed by the existing software; and


means for routing both test calls and a select number
of new calls to the new software for processing thereby,

in response to said test calls being successfully
processed by the new software, while all remaining new

calls continue to be processed by the existing software.
The system of claim 42, including means,
responsive to the first to occur of the completion of

processing of said existing data processing transactions
by said existing software or the expiration of a

preselected period of time following the beginning of the
transfer of processing control of all new data processing

transactions to said new software, for discontinuing
further use of said existing software, whereby the

changeover from said existing software to said new
software may be automatically effected during computer

apparatus runtime without materially disrupting the
continuance of data processing operations thereof.
The system as set forth in claim 67 which also
includes:


means, responsive to a successful processing of said
test data processing transactions by said new software 

for transmitting to said new software a predetermined
limited sample of actual data processing transactions

which would otherwise be processed by said existing
software; and in which
said means for transferring processing control of all
new data processing transactions to said new software is

responsive to a successful processing of both said test
data processing transactions and said sample amount of

actual data processing transactions by said new software.
The system as set forth in claim 67 or 68
wherein:


said computer apparatus forms part of a
telecommunications switching system; and
said existing and new data processing transactions
are calls received by said telecommunications switching

system.
</CLAIMS>
</TEXT>
</DOC>
