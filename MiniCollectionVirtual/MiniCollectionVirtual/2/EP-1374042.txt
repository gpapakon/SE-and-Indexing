<DOC>
<DOCNO>EP-1374042</DOCNO> 
<TEXT>
<INVENTION-TITLE>
SYSTEM, METHOD AND ARTICLE OF MANUFACTURE FOR SOFTWARE-DESIGNED INTERNET RECONFIGURABLE HARDWARE
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F9445	G06F9445	G06F1100	G06F1100	G06F1300	G06F1300	G06F1576	G06F1578	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F11	G06F11	G06F13	G06F13	G06F15	G06F15	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A system, method and article of manufacture are provided for network-based configuration of a programmable logic device. A default application is initiated on a programmable logic device. A file request for configuration data from the logic device is sent to a server located remotely from the logic device utilizing a network. The configuration data is received from the network server. The configuration data is used to configure the logic device to run a second application. The second application is run on the logic device.
</ABSTRACT>
<APPLICANTS>
</APPLICANTS>
<INVENTORS>
</INVENTORS>
<DESCRIPTION>
 SYSTEM, METHOD AND ARTICLE OF MANUFACTURE FOR SOFTWARE-DESIGNED INTERNET RECONFIGURABLE HARDWAREFIELD OF THE INVENTIONThe present invention relates to reconfigurable logic devices and more particularly to network-based configuratiomn of a logic device.10BACKGROUND OF THE INVENTIONIt is well known that software-controlled machines provide great flexibility in that they can be adapted to many different desired purposes by the use of suitable software. As 15 well as being used in the familiar general purpose computers, software-controlled processors are now used in many products such as cars, telephones and other domestic products, where they are known as embedded systems.However, for a given a function, a software-controlled processor is usually slower than 20 hardware dedicated to that function. A way of overcoming this problem is to use a2. 

special software-controlled processor such as a RISC processor which can be made to function more quickly for limited purposes by having its parameters (for instance size, instruction set etc.) tailored to the desired functionality.Where hardware is used, though, although it increases the speed of operation, it lacks flexibility and, for instance, although it may be suitable for the task for which it was designed it may not be suitable for a modified version of that task which is desired later. It is now possible to form the hardware on reconfigurable logic circuits, such as Field Programmable Gate Arrays (FPGA's) which are logic circuits which can be repeatedly reconfigured in different ways. Thus they provide the speed advantages of dedicated hardware, with some degree of flexibility for later updating or multiple functionality.In general, though, it can be seen that designers face a problem in finding the right balance between speed and generality. They can build versatile chips which will be software controlled and thus perform many different functions relatively slowly, or they can devise application-specific chips that do only a limited set of tasks but do them much more quickly.A compromise solution to these problems can be found in systems which combine both dedicated hardware and also software. The hardware is dedicated to particular functions, e.g. those requiring speed, and the software can perform the remaining functions. The design of such systems is known as hardware-software codesign.Within the design process, the designer must decide, for a target system with a desired functionality, which functions are to be performed in hardware and which in
</DESCRIPTION>
<CLAIMS>
CLAIMS
1. A method for network-based configuration of a programmable logic device, comprising the steps of:
(a) initiating a default application on a programmable logic device; (b) sending a file request for configuration data from the logic device to a server located remotely from the logic device utilizing a network;
(c) receiving the configuration data from the network server;
(d) utilizing the configuration data for configuring the logic device to run a second application; and (e) running the second application on the logic device.
2. A method as recited in claim 1, wherein the configuration data is received in the form of a bitfile.
3. A method as recited in claim 1 or 2, wherein the logic device includes at least one Field Programmable Gate Array (FPGA).
4. A method as recited in claim 3, wherein a first FPGA receives the configuration data, wherein the first FPGA configures a second FPGA utilizing the configuration data.
5. A method as recited in claim 3 or 4, wherein the logic device includes first and second FPGA's that are clocked at different speeds.
6. A method as recited in claim 1, 2, 3, 4 or 5, wherein the default application and the second application are both able to run simultaneously on the logic device. 

7. A method as recited in claim 1, 2, 3, 4, 5 or 6, wherein the logic device further includes at least one of a display screen, a touch screen, an audio chip, an Ethernet device, a parallel port, a serial port, a RAM bank, and a non- volatile memory.
8. A computer program product for network-based configuration of a programmable logic device, comprising:
(a) computer code for initiating a default application on a programmable logic device;
(b) computer code for sending a file request for configuration data from the logic device to a server located remotely from the logic device utilizing a network;
(c) computer code for receiving the configuration data from the network server;
(d) computer code for utilizing the configuration data for configuring the logic device to run a second application; and
(e) computer code for running the second application on the logic device.
9. A computer program product as recited in claim 8, wherein the configuration data is received in the form of a bitfile.
10. A computer program product as recited in claim 8 or 9, wherein the logic device includes at least one Field Programmable Gate Array (FPGA).
11. A computer program product as recited in claim 10, wherein a first FPGA receives the configuration data, wherein the first FPGA configures a second
FPGA utilizing the configuration data.
12. A computer program product as recited in claim 10 or 11 , wherein the logic device includes first and second FPGA's that are clocked at different speeds. 

13. A computer program product as recited in claim 8, 9, 10, 11 or 12, wherein the default application and the second application are both able to run simultaneously on the logic device.
14. A computer program product as recited in claim 8, 9, 10, 11, 12 or 13, wherein the logic device further includes at least one of a display screen, a touch screen, an audio chip, an Ethernet device, a parallel port, a serial port, a RAM bank, and a non-volatile memory.
15. A system for network-based configuration of a programmable logic device, comprising: (a) logic for initiating a default application on a programmable logic device;
(b) logic for sending a file request for configuration data from the logic device to a server located remotely from the logic device utilizing a network;
(c) logic for receiving the configuration data from the network server;
(d) logic for utilizing the configuration data for configuring the logic device to run a second application; and
(e) logic for running the second application on the logic device.
16. A system as recited in claim 15, wherein the configuration data is received in the form of a bitfile.
17. A system as recited in claim 15 or 16, wherein the logic device includes at least one Field Programmable Gate Array (FPGA).
18. A system as recited in claim 17, wherein a first FPGA receives the configuration data, wherein the first FPGA configures a second FPGA utilizing the configuration data. 

19. A system as recited in claim 17 or 18, wherein the logic device includes first and second FPGA's that are clocked at different speeds.
20. A system as recited in claim 15, 16, 17, 18 or 19, wherein the default application and the second application are both able to run simultaneously on the logic device.
21. A system as recited in claim 15, 16, 17, 18, 19 or 20, wherein the logic device further includes at least one of a display screen, a touch screen, an audio chip, an Ethernet device, a parallel port, a serial port, a RAM bank, and a non- volatile memory. 

</CLAIMS>
</TEXT>
</DOC>
