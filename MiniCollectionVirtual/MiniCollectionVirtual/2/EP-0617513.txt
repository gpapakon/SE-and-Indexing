<DOC>
<DOCNO>EP-0617513</DOCNO> 
<TEXT>
<INVENTION-TITLE>
FIELD PROGRAMMABLE GATE ARRAY WITH DIRECT INPUT/OUTPUT CONNECTION.
</INVENTION-TITLE>
<CLASSIFICATIONS>H01L2170	H01L2182	H01L27118	H01L27118	H03K19173	H03K19173	H03K19177	H03K19177	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H01L	H01L	H01L	H01L	H03K	H03K	H03K	H03K	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H01L21	H01L21	H01L27	H01L27	H03K19	H03K19	H03K19	H03K19	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A field programmable gate array includes a dedicated path (606) which 
directly connects an I/O pad (604) to a selected register (603) in the array of 

programmable function units (602). For example, a direct connection (i.e., without a 
configurable interconnect point) is provided from an I/O pad, through an input driver 

(605), to the input of a selected register in a given PFU. Either this same path, or 
alternatively a different path, may also be used to directly connect a register output 

from a given PFU to an I/O pad, through an output driver. This technique avoids the 
need for special I/O registers in the programmable input/output cells, thereby 

increasing the flexibility of use and ease of design of the FPGA. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
AT 
&
 T CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
AT
&
T CORP.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BRITTON BARRY KEVIN
</INVENTOR-NAME>
<INVENTOR-NAME>
HILL DWIGHT DOUGLAS
</INVENTOR-NAME>
<INVENTOR-NAME>
OSWALD WILLIAM ANTHONY
</INVENTOR-NAME>
<INVENTOR-NAME>
BRITTON, BARRY KEVIN
</INVENTOR-NAME>
<INVENTOR-NAME>
HILL, DWIGHT DOUGLAS
</INVENTOR-NAME>
<INVENTOR-NAME>
OSWALD, WILLIAM ANTHONY
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to integrated circuits that include a field 
programmable gate array. Integrated circuits (ICs) have traditionally implemented a single 
function, or else functions that were defined by software programming. However, in 
either case, the logic architecture that implemented the functionality was fixed 
during the design of the IC. More recently, integrated circuits have been developed 
whose logic architecture can be changed after manufacture. For example, Field 
Programmable Gate Arrays (FPGAs) have been developed whose logic functions can 
be established by the user. Referring to Fig. 1, a typical FPGA architecture is 
illustrated. The logic functions are typically done in Programmable Function Units 
(PFUs) 100, 101, 102, 103, which are alternatively referred to by workers in the art 
as Configurable Logic Blocks (CLBs). Each PFU includes various logic circuit 
elements (AND gates, OR gates, NAND gates, NOR gates, flip-flops, multiplexers, 
registers, latches, and tri-state buffers, for example) that may be connected in a 
desired arrangement in order to implement desired logic and memory functions. For 
example, typical logic functions include combinatorial logic, adders, counters, and 
other data path functions. The combinatorial logic may be performed using look-up 
tables (LUTs) or logic gates, whereas sequential logic is typically performed using 
storage elements (registers) such as flip-flops and latches. As illustrated in Fig. 1, the PFUs are connected together by Routing 
Nodes (R-nodes), being illustratively the conductors in groups 104, 105, 106 and 
107. In addition, Configurable Interconnect Points (CIPs) are used to connect two or 
more R-nodes together. The CIPs may be grouped as C-blocks (e.g., 108) and S-blocks 
(e.g., 109), whose functions are described below. (In a more recent type of 
FPGA design, a third set of conductors, referred to as "switching R-nodes" are used 
to make connections. These implement the functionality of the C-blocks and S-blocks 
in a manner that provides additional routing flexibility with a reduced total 
number of CIPs. However, more CIPs per path are typically required. Hence, the 
problems addressed herein are common to both types of designs.) Due to their 
symmetric layout, FPGAs may conceptually be divided into more or less identical  
 
blocks of circuitry called Programmable Logic Cells (PLCs). For example, a given 
PLC (117) typically includes a single PFU (101), and the associated R-nodes and 
CIPs as described above.
</DESCRIPTION>
<CLAIMS>
An integrated circuit comprising a field programmable gate array 
having: 

   a multiplicity of programmable logic cells (e.g., 500, 601) comprising at 
least one programmable function unit (e.g., 501, 602) comprising
 at least one logic 
element selected from the group consisting of combinatorial logic (e.g., 504, 608) 

and sequential logic (e.g., 503, 603), and further comprising the associated routing 
resources, including routing conductors and configurable interconnect points; and 

   a multiplicity of programmable input/output cells (e.g., 510, 600) 
comprising at least one driver selected from the group consisting of input driver 

(e.g., 605) and output driver (e.g., 511), and further comprising one or more 
associated bondpads (e.g., 512, 604); 

   Characterized in that said field programmable gate array further 
comprises a direct path (e.g., 508, 606) between an input, or alternatively an output, 

of a given logic element (e.g., 503, 603) in a given programmable function unit, and 
the input driver (e.g., 605), or alternatively the output driver (e.g., 511), respectively, 

in a given programmable input/output cell. 
The integrated circuit of claim 1 wherein said direct path is an output 
path from said given logic element, and includes a multiplexer (e.g., 509) for 

selectively providing a signal from at least one alternative path (e.g., 514) to said 
output driver. 
The integrated circuit of claim 1 wherein said direct path is an input 
path to said given logic element, and includes a multiplexer (e.g., 607) for 

selectively providing a signal to said given logic element from at least one 
alternative path (e.g., 614). 
The integrated circuit of claim 1 wherein said given logic element is a 
combinatorial logic element. 
The integrated circuit of claim 4 wherein said combinatorial logic 
element is a look-up table. 
The integrated circuit of claim 1 wherein said given logic element is a 
sequential logic element. 
The integrated circuit of claim 6 wherein said sequential logic element 
is a flip-flop. 
The integrated circuit of claim 6 wherein said sequential logic element 
is a latch. 
</CLAIMS>
</TEXT>
</DOC>
