<DOC>
<DOCNO>EP-0647903</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Adaptive job scheduling using neural network priority functions.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F946	G06F946	G06F948	G06F950	G06G700	G06G760	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06G	G06G	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F9	G06F9	G06G7	G06G7	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A job scheduler makes decisions concerning the order and 
frequency of access to a resource according to a 

substantially optimum delay cost function. The delay cost 
function is a single value function of one or more inputs, 

where at least one of the inputs is a delay time which 
increases as a job waits for service. The job scheduler is 

preferably used by a multi-user computer operating system to 
schedule jobs of different classes. The delay cost functions 

are preferably implemented by neural networks. The user 
specifies desired performance objectives for each job class. 

The computer system runs for a specified period of time, 
collecting data on system performance. The differences 

between the actual and desired performance objectives are 
computed, and used to adaptively train the neural network. 

The process repeats until the delay cost functions stabilize 
near optimum value. However, if the system configuration, 

workload, or desired performance objectives change, the 
neural network will again start to adapt. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BIGUS JOSEPH P
</INVENTOR-NAME>
<INVENTOR-NAME>
BIGUS, JOSEPH P.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to resource scheduling, 
and in particular to computer operating system functions 
which schedule resources for jobs executing on the system. Early digital computer systems were single user 
machines. That is, a single program or job took control of 
the entire computer, monopolizing all of its resources such 
as the CPU, memory, secondary disk storage and peripherals 
such as terminals and printers. It was quickly realized that 
this was a very inefficient use of costly computer hardware. 
One of the major reasons that computer software called 
operating systems were developed was to allow more than one 
user to use a computer system at a time. It is the operating system's task to maximize the amount 
of work that a set of users can perform on a given computer 
system. The set of user jobs submitted to a computer system 
for processing is called the workload. One of the major functions performed by a computer 
operating system is job scheduling or managing the workload. 
Job scheduling involves giving user jobs access to the 
computer system resources, especially the central processing 
unit (CPU). All jobs are not treated equally in most 
operating systems. Just as there are different categories of 
customers at a bank with differing importance and priorities, 
there are different classes of users on a computer system.  Over the years many different resource scheduling 
algorithms have been developed. The simplest job scheduling 
algorithm is first come first served. This is similar to a 
bank office with a single active teller. Each customer comes 
in the door and gets in line. The customer is served only 
after all of the customers ahead in line are served. A 
disadvantage of this algorithm is that if the first customer 
has a very long transaction, all of the other customers must 
wait. Another job scheduling algorithm is shortest job first. 
In this approach (continuing the bank analogy), each customer 
is asked how many transactions he needs to make, and the one 
with the least number of transactions is served first. On 
average, this algorithm gives the best performance. Of 
course, it is hard to tell in advance how long it will 
actually take to serve the customer. He may have only one 
transaction, but it may be extremely complicated and take 15 
minutes. Another customer may have two transactions which 
will only take one minute each. This difficulty in knowing 
ahead of time how long the customer is going to take has 
prevented the shortest job first algorithm
</DESCRIPTION>
<CLAIMS>
A method for scheduling jobs from among a plurality of 
job classes for service by a resource of a work-producing 

system, comprising the steps of: 
defining a set of performance goals for said job 

classes; 
training a neural network to produce a delay cost value 

function which implements said set of performance goals 
as output from at least one input, wherein at least one 

input to said neural network represents a delay time 
with respect to a job waiting for service by said 

resource; 
using said delay cost value function produced by said 

neural network to assign a respective job delay cost to 
each of a plurality of jobs waiting for service by said 

resource; and 
selecting a next job for service by said resource based 

on said job delay cost. 
The method of claim 1, wherein said resource is a 
computer system resource, and said steps of using said 

delay cost value function to assign a job delay cost, 
and said step of selecting a next job for service, are 

performed by a job scheduler of said computer system's 
operating system. 
The method of claim 1 or 2, wherein said step of 
training said neural network comprises the steps of: 

gathering data regarding actual performance of said 
work-producing system; and

 
using said data as training data for said neural 

network. 
The method of claims 1, 2 or 3, further comprising the 
steps of: 

continuing to gather data regarding actual performance 
of said work-producing system in response to scheduling 

jobs in accordance with said delay cost value function 
of said neural network; and 

updating said neural network using said data gathered in 
response to scheduling jobs in accordance with said 

delay cost value function. 
An apparatus for scheduling jobs in a computer system, 
comprising: 

means for storing a set of user-defined performance 
goals for a plurality of job classes; 

at least one job queue for jobs awaiting service by a 
resource in said computer system; 

means for automatically constructing a substantially 
optimum delay cost value function which implements said 

set of performance goals, wherein at least one input to 
said delay cost value function represents a delay time 

with respect to a job waiting for service by said 
resource; 

means for applying said delay cost value function to 
each of a plurality of jobs awaiting service by said 

resource in said at least one job queue to produce a 
respective delay cost value for each job; 

means for comparing the respective delay cost values of 
 

said jobs to select a next job for service by said 
resource, wherein the next job for service selected is 

a job having highest delay cost. 
The apparatus for scheduling jobs of claim 5, wherein 
said means for automatically constructing a 

substantially optimum delay cost value function 
comprises means for training a neural network to produce 

a delay cost value function which implements said set of 
performance goals as output from at least one input, 

wherein at least one input to said neural network 
represents said delay time with respect to a job waiting 

for service by said resource. 
A program product apparatus for scheduling jobs from 
among a plurality of job classes for service by a 

resource in a work-producing system, said program 
product apparatus being a plurality of computer 

executable instructions recorded on a computer-readable 
medium, said program product apparatus comprising: 

means for receiving as input a set of performance goals 
for said job classes; 

means for training a neural network to produce a delay 

cost value function which implements said set of 
performance goals; as output from at least one input, 

wherein at least one input to said neural network 
represents a delay time with respect to a job waiting 

for service by said resource; 
means for using said delay cost value function produced 

by said neural network to assign a respective job delay 
cost to each of a plurality of jobs waiting for service 

by said resource; and 
means for selecting a next job for service by said 

 
resource based on said job delay cost. 
The program product of claim 7, wherein said means for 
training said neural network comprises: 

means for gathering data regarding actual performance of 
said work-producing system; and 

means for using said data as training data for said 
neural network. 
The program product of claim 7 or 8, wherein said neural 
network is an artificial neural network implemented 

using a plurality of instructions contained in said 
program product for executing on a computer. 
</CLAIMS>
</TEXT>
</DOC>
