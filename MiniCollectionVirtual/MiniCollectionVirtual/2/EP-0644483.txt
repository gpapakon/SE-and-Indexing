<DOC>
<DOCNO>EP-0644483</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Computer system and method for performing multiple tasks
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3048	G06F3023	G06F946	G06F3048	G06F1300	G06F1300	G06F948	G06F954	G06F3023	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F9	G06F3	G06F13	G06F13	G06F9	G06F9	G06F3	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The invention relates to a computer system and method for 
performing multiple tasks. The computer system comprises a 

host (2), a communication subsystem (3), a plurality of 
application programs (1, 2), virtual terminal manager (5), 

virtual terminals (9, 4), an application programming 
interface (6), and a cross application program (7) as well 

as a real terminal T. The logical connections L₁, L₂ of the 
application programs to their associated virtual terminals 

are independent from the logical connections of the 
respective virtual terminals to the real terminal T. The 

logical connections l
1T
, l
2T
 are user selectable by 
positioning of the software controllable switch 11. A 

plurality of application programs, for example applications 
programs (A₁, A₂), are integrated by the cross application 

program (7) which has access to the respective virtual 
terminals (4, 9) via the application programming interface 

(6) and the virtual terminal manager (5). The cross 
application program (7) can also be used for user simulation 

in order to automate the operation of the integrated 
application programs. 


</ABSTRACT>
<APPLICANTS>
</APPLICANTS>
<INVENTORS>
</INVENTORS>
<DESCRIPTION>
The invention relates to a computer system for performing
multiple tasks comprising at least one terminal, at least
one application program and a communication subsystem.
Further the invention relates to a method for performing
multiple tasks in a computer system.The prior art discloses a variety of inter-program
communication methods in data processing networks comprising
a host system connected to a plurality of terminals: The IBM
System Journal, Vol. 22, No. 4, 1983 discloses a computer
network with a communication subsystem which is the IBM
system network architecture (SNA). On page 345 of that
publication a network is defined as "a configuration of
terminals, controllers, and processors and the links that
connect them". When such a configuration supports user
applications involving data processing and information
exchange and conforms to the specifications of the system
network architecture it is called an SNA network.
Essentially SNA defines logical entities that are related to
the physical entities in a network and specifies the rules
for interactions among these logical entities. The logical
entities of an SNA network include network addressable units
and the path control network that connects them. Network
addressable units communicate with one another using logical
connections called "sessions". The three types of network
addressable units (NAUs) are the logical unit (LU), the
physical unit (PU), and the system services control point
(SSCP) which are defined as follows:Logical unit (LU). An LU is a port through which end users
may access the SNA network. An end user uses an LU to 
communicate with another end user and to request services of
a system services control point (SSCP).Physical unit (PU). A PU is a component that manages the
resources of a node in corporation with an SSCP.System services control point (SSCP). This is a focal point
for configuration management, problem determination and
directory services for end users. SSCPs may have sessions
with LUs and PUs. When such a session occurs, the LU or PU
is in the domain of the SSCP. In addition to sessions with
LUs and PUs, SSCPs may also communicate with each other to
coordinate the initiation and the termination of sessions
between logical units and in different domains.From the hardware standpoint a simple network comprises a
host system having a processing unit and a plurality of
remote terminals that are assigned to individual users. The
remote terminals are selectively connectable to the host
system through one or more
</DESCRIPTION>
<CLAIMS>
Computer system for performing multiple tasks, said
computer system comprising at least one terminal T, a

communication subsystem (3), a plurality of host
computers and a plurality of applications programs

which are stored on different ones of said host
computers, each of said applications programs A
i

having a dedicated virtual terminal VT
i
 (4, 9)
assigned thereto,

wherein

a logical connection L
i
 is establishable via said
communication subsystem between one of said applications

programs A
i
 and its dedicated virtual terminal VT
i
 (4, 9),
said logical connection L
i
 is adapted to be maintained
independently from the existence of a logical connection

l
iT
 between said terminal T and said dedicated virtual
terminal VT
i
, and
said logical connections are establishable by means of a
virtual telecommunications access method.
Computer system according to claim 1, wherein

said dedicated virtual terminal VT
i
 (4) having a dedicated
control block B
i
 assigned thereto,
said terminal T having a dedicated terminal control block
BT assigned thereto, and 
said logical connection l
iT
 between said terminal T and
said dedicated virtual terminal VT
i
 is establishable by
storage of a first pointer P
iT
 in said control block B
i

and storage of a second pointer P
Ti
 in said terminal
control block BT, said first pointer P
iT
 pointing to said
terminal control block BT and said second pointer P
Ti

pointing to said control block B
i
.
Computer system according claim 2, wherein said first
pointer P
iT
 being a null pointer if said logical
connection l
iT
 between said terminal T and said dedicated
virtual terminal VT
i
 is not established.
Computer system according to claim 2 or 3, wherein a
dedicated virtual terminal VT
T
 is assigned to said
terminal T and said terminal control block BT preferably

comprises a virtual terminal pointer P
T
 which points to
said dedicated virtual terminal VT
T
 of said terminal T.
Computer system according to any one of the preceding
claims, wherein said computer system further comprises a

user simulation program (7) and a dedicated virtual
terminal VT
c
 (14) which is assigned to said user
simulation program,


a logical connection C
i
 (C
1
, C
2
) between said user
simulation program and said dedicated virtual terminal VT
i

of said application program is establishable under to the
control of said user simulation program, and
a logical connection C
T
 between said terminal T and said
dedicated virtual terminal VT
c
 is establishable
Computer system according to claim 5, wherein said
logical connection C
i
 between said user simulation program
and said dedicated virtual terminal VT
i
 of said
applications program A
i
 is establishable by storage of a 
third pointer P
ic
 in said control block B
i
 and storage of
a fourth pointer P
ci
 in a storage location which is
assigned to said user simulation program, said third

pointer P
ic
 pointing to said user simulation program and
said fourth pointer P
ci
 pointing to said program specific
control block B
i
.
Computer system according to claim 5 or 6, wherein said
logical connection C
T
 between said terminal T and said
dedicated virtual terminal VT
c
 of said user simulation
program is establishable by storage of a fifth pointer P
TC

in said terminal control block BT and by storage of a
sixth pointer P
CT
 in a storage location assigned to said
user simulation program, said fifth pointer P
TC
 pointing
to said user simulation program and said sixth pointer P
CT

pointing to said terminal specific control block BT.
Method for performing multiple tasks in a computer
system, said computer system comprising a terminal T, a

plurality of host computers, a plurality of application
programs stored on different ones of said host computers and a communication subsystem (3), said method

comprising the following steps in which the logical connections are established by means of a virtual telecommunication access mode :

a) selecting an applications program A
i
 out of said
plurality of application programs,
b) establishing a logical connection L
i
 via said
communication subsystem between said applications

program A
i
 and a dedicated virtual terminal VT
i
 (4,
9),
c) establishing a logical connection l
iT
 between said
terminal T and said dedicated virtual terminal VT
i
,
d) maintaining said logical connection L
i
 independently
from the existence of said logical connection l
iT
.
Method according to claim 8, wherein said logical
connection L
i
 is established by

a) assigning a dedicated control block B
i
 (B
1
, B
2
) to
said dedicated virtual terminal VT
i
,
b) assigning a dedicated terminal control block BT to
said terminal T,
c) storing a first pointer P
iT
 in said control block B
i
,
d) storing a second pointer P
Ti
 in said terminal control
block BT,

whereby said first pointer P
iT
 points to said terminal
control block BT and said second pointer P
Ti
 points to
said control block B
i
.
Method according to claim 8 or 9, said computer system
further comprising a user simulation program (7) and a

dedicated virtual terminal VT
c
 (14) which is assigned to
said user simulation program, said method comprising the

following steps:

a) selecting an applications program A
j
 out of said
plurality of application programs,
b) selectively establishing one or more logical
connections C
i
, C
j
 between said user simulation
program and said dedicated virtual terminals VT
i
, VT
j

of said applications programs A
i
, A
j
, 
c) selectively establishing a logical connection C
T

between said terminal T and said dedicated virtual
terminal VT
c
 of said user simulation program.
Computer system or method according to any one of the
preceding claims, wherein said dedicated virtual terminal

comprises a virtual terminal buffer (VTA1, VTA2, VTT1)
which is stored in a main memory of said computer system

independently from the existence of a logical connection
between said terminal T or

- if present - said user simulation program and said
dedicated virtual terminal.
</CLAIMS>
</TEXT>
</DOC>
