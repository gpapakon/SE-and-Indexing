<DOC>
<DOCNO>EP-0660219</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Display of dynamic data in a graphical user interface
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F314	G06F3033	G06F3033	G06F944	G06F3048	G06F314	G06F3048	G06F944	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F3	G06F9	G06F3	G06F3	G06F3	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A system and method is described for presenting dynamic data on a 
display device. The dynamic data is displayed in a notebook as a 

plurality of groups, each group assigned to a page in the notebook. The 
dynamic data is monitored to detect a change in state of the dynamic 

data. In response to a detected change, a determination is made as to 
whether the dynamic data should be regrouped in response to the change in 

state. If the data is regrouped, the notebook is then displayed 
according to the regrouped dynamic data. Each page in the notebook 

preferably has a tab which is displayed according to the state of the 
group assigned to that page. In response to the detected change of the 

dynamic data, the display of the tab may also be changed. Typically, the 
top page in the notebook has a window displayed within. A child window 

can be created by copying the window to a location on the display device 
outside the notebook. When the notebook is closed in response to a user 

command, the child window is automatically closed in response to closing 
the notebook. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CHANG DAVID YU
</INVENTOR-NAME>
<INVENTOR-NAME>
LI SHIH-GONG
</INVENTOR-NAME>
<INVENTOR-NAME>
CHANG, DAVID YU
</INVENTOR-NAME>
<INVENTOR-NAME>
LI, SHIH-GONG
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to user interfaces for data
processing systems. More particularly, the invention concerns the
displaying of dynamic data a graphical user interface.It is well known to provide a Graphical User Interface (GUI) to
allow a user to control a computer system and to present the results of
system operations on the display. In a graphical user interface,
applications and data files are generally represented by a plurality of
graphical objects such as windows or icons. When there is a large amount
of data, particularly dynamic data such as status information which
constantly changes, it is difficult to present all of the data
simultaneously on the display. For this reason, the data may have to be
displayed on many windows sequentially. For example, in the design and
operation of computer networks, it is known to segment networks for
various reasons and to present network information based on this
segmentation. Devices or "nodes" on a network may be assigned to groups,
or "clusters", according to traffic patterns so that the nodes within a
cluster communicate more directly with each other than with other nodes.
Nodes may also be assigned to groups according to differences in the
transmission media between nodes, the location of the nodes or for
security purposes. For manageability and readability, the group size
should not grow too large. Thus, it is likely in large networks to have
a large number of groups associated with dynamic data such as status
information which must be accessible to the user by means of a graphical
user interface.It is known to change the appearance of a symbol on a computer
display to alert a user to the status of the system when a certain
condition occurs. The volume or rate of network transactions among a
group of nodes may be monitored in this manner. When the volume or rate
of transactions within a cluster exceeds a preset limit, a symbol
representing that group will alert the user to investigate the condition.
However, this approach allows only a limited amount of information to be
conveyed to the user to help in an investigation of the system. For
example, with the usual system when a symbol announces that the volume of
transactions has exceeded a limit within a cluster, the user must take
steps to get more data about that cluster. Usually, this involves
selecting the symbol that represents the cluster demanding attention and
changing the computer display to show details. Navigation through 
several windows may be required. With large amounts of
</DESCRIPTION>
<CLAIMS>
A system for presenting dynamic data on a display device (14) of a
data processing system, the system comprising:


grouping means for arranging the dynamic data as a plurality of
groups, each group assigned to a page in a notebook;
display means for displaying a page of the notebook on the display
device (14);
determination means for determining a state for each group of
dynamic data;
monitoring means for detecting a change in state of the dynamic
data;
decision logic, responsive to the monitoring means, for determining
whether the dynamic data should be regrouped in response to the change in

state, and for initiating such regrouping if required;

   the display means being arranged to display the notebook with the
regrouped dynamic data.
A system as claimed in claim 1, further comprising:

means for displaying a window in a top page of the notebook; and
means for creating a child window by copying the window to a

location of the display device (14) outside of the notebook.
A system as claimed in claim 2 wherein the child window is created
by means of a drag and drop operation.
A system as claimed in any of claims 1 to 3, wherein each page of
the notebook has a tab, and the display means is adapted to display the

tab of each page according to the state of the group assigned to that
page. 
A system as claimed in claim 4, further comprising means,
responsive to the monitoring means, for changing the display of a tab

according to the change of state detected by the monitoring means.
A system as claimed in any of claims 2 to 5, further comprising:

means for closing the notebook in response to a user command; and
means for automatically closing any child windows in response to
closing the notebook.
A system as claimed in any preceding claim, wherein the top page of
the notebook is displayed according to an attribute type and a

presentation type.
A system as claimed in any preceding claim, wherein the top page of
the notebook being displayed is updated according to the change in state.
A system as claimed in any preceding claim, wherein the dynamic
data represents a group of nodes in a computer system.
A method of presenting dynamic data on a display device (14) of a
data processing system, the method comprising the steps of:


arranging the dynamic data as a plurality of groups, each group
assigned to a page in a notebook;
displaying a page of the notebook on the display device (14);
determining a state for each group of dynamic data;
detecting a change in state of the dynamic data;
determining, in response to the detection step, whether the dynamic
data should be regrouped in response to the change in state, and

initiating such regrouping if required; and
displaying the notebook with the regrouped dynamic data,
A method as claimed in claim 10, further comprising the steps of: 

displaying a window in a top page of the notebook; and
creating a child window by copying the window to a location of the
display device (14) outside the notebook.
A method as claimed in claim 11 wherein the child window is created
by means of a drag and drop operation.
A method as claimed in any of claims 10 to 12, wherein each page of
the notebook has a tab and the method comprises the further step of

displaying the tab of each page according to the state of the group
assigned to that page.
A method as claimed in claim 13, further comprising the step of,
responsive to the detecting step, changing the display of a tab according

to the detected change of state.
A method as claimed in any of claims 11 to 14, further comprising
the steps of:


closing the notebook in response to a user command; and
automatically closing any child windows in response to closing the
notebook.
</CLAIMS>
</TEXT>
</DOC>
