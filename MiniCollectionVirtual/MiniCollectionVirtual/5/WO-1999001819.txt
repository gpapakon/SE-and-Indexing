<DOC>
<DOCNO>WO-1999001819</DOCNO> 
<TEXT>
<INVENTION-TITLE>
TESTING AND DEBUGGING TOOL FOR NETWORK APPLICATIONS
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1128	G06F1128	G06F1300	G06F1300	H04L1226	H04L1226	H04L2906	H04L2906	H04L2908	H04L2908	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	H04L	H04L	H04L	H04L	H04L	H04L	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F11	G06F11	G06F13	G06F13	H04L12	H04L12	H04L29	H04L29	H04L29	H04L29	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A software development tool (10) permits capture, modification and recording of transactional messages that are transmitted between a client (26) and a server (28) in a computer network. A proxy is employed to capture messages such as requests and responses that are in transit between the client (26) and the server (28). The captured requests and responses can be displayed and modified before being retransmitted via the proxy. Further, transaction records can be selectively provided to at least one software application (46) for analysis.
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
PROGRESS SOFTWARE CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
PROGRESS SOFTWARE CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BARDANI ROBERT L JR
</INVENTOR-NAME>
<INVENTOR-NAME>
CASELLA STEPHEN R
</INVENTOR-NAME>
<INVENTOR-NAME>
SWAN DAVID M
</INVENTOR-NAME>
<INVENTOR-NAME>
BARDANI, ROBERT, L., JR.
</INVENTOR-NAME>
<INVENTOR-NAME>
CASELLA, STEPHEN, R.
</INVENTOR-NAME>
<INVENTOR-NAME>
SWAN, DAVID, M.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
 TITLE OF THE INVENTION TESTING AND DEBUGGING TOOL FOR NETWORK APPLICATIONSCROSS REFERENCE TO RELATED APPLICATIONS Priority is claimed to U.S. Provisional Patent Application Serial No. 60/051,501 entitled TESTING AND DEBUGGING TOOL, filed July 1, 1997.STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENTNot Applicable.BACKGROUND OF THE INVENTION The present invention is related to software development tools, and more particularly to testing and debugging tools for network applications.Testing and debugging tools that facilitate software development are known. However, known testing and debugging tools are generally not well suited for use with network applications such as internet web sites. Testing and debugging tools are typically operative with only one programming language. However, the software employed by an internet web site and browser may comprise a plurality of programming languages. Testing and debugging tools are designed to be employed prior to deployment of the application under development. However, the behavior of a network application following deployment in a "real" environment is often different than the behavior of the application in the development environment. 

 BRIEF SUMMARY OF THE INVENTION In accordance with the present invention, a software development tool permits capture, modification and recording of transactions between a client and a server in a computer network. The tool is situated in a communication path between the client and the server. A protocol-specific proxy is employed to capture data units that are associated with the transaction when the data units are transmitted between the client and the server. The transaction is displayed and optionally modified en route between the client and the server. Further, transaction records are selectively provided to at least one software application for analysis. The supported protocols may include TCP/IP protocols such as HTTP, FTP, SMTP, POP3 and IMAP4.Selectively capturing and modifying data units between the client and the server enables useful features such as tracing and isolating transactions between the client and server. It is also possible to debug a deployed application, debug the internal interactions of a browser application by employing inbound and outbound streams, preview data units that the client device will receive from the server device, and set breakpoints and watch variables to selectively interrupt transactions. Advantages related to security and performance concerns about applets and
</DESCRIPTION>
<CLAIMS>
 CLAIMS What is claimed is:
1. A software tool that facilitates development of an application that operates in a computer network having a first device that transmits a data unit in a predetermined communication protocol toward a second device, comprising: at least one proxy routine that is configured for operation with the predetermined communication protocol, and which is operative to capture the data unit that is formatted in said predetermined protocol and that is transmitted from said first device toward said second device; and an editor that modifies said data unit after said data unit is captured, transmission of said data unit then being resumed toward the second device via said at least one proxy routine.
2. The software tool of claim 1 further including a routine that displays information including a representation of the data unit that is captured by the proxy routine.
3. The software tool of claim 2 further including a view filter that prevents specified information from being displayed.
4. The software tool of claim 1 further including a stream filter that modifies said data unit based upon predetermined criteria.
5. The software tool of claim 1 further including a trigger function that interrupts transmission between the first device and the second device upon detection of a predetermined operational condition.
6. The software tool of claim 1 further including a routine that prompts transmission of a representation of the data unit to at least one selected application that is coupled with the software tool . 

7. A method for testing an application that operates on computer network having a first device and a second device, comprising the steps of: transmitting a data unit from the first device toward the second device; capturing the data unit with a proxy; modifying the data unit; and transmitting the modified data unit from the proxy toward the second device.
8. The method of claim 7 further including the step of displaying information that includes a representation of the data unit that is captured by the proxy.
9. The method of claim 8 further including the step of filtering the information prior to display.
10. The method of claim 7 further including the step of applying a filter to the data unit.
11. The method of claim 7 further including the step of interrupting transmission of the data unit between the first device and the second device upon the detection of a predetermined condition.
12. The method of claim 7 further including the step of providing a representation of the data unit that is captured by the proxy to at least one selected application.
13. A testing and debugging tool that facilitates development of a first application that operates on a first device in a computer network and is responsive to a second application that operates on a second device in the computer network, comprising: at least one proxy that is associated with a predetermined network communication protocol and that is operative to receive a transaction request that are formatted 


in said predetermined protocol and transmitted from the second application toward the first application; and an editor that modifies said transaction request if desired and then prompts transmission of said transaction request toward said first application; said at least one proxy being further operative to receive a transaction response that is formatted in said predetermined protocol and transmitted from the first application toward said second application in response to said transaction request, said editor being operative to modify said transaction response if desired and prompt transmission of said transaction response toward said second application, whereby the transaction comprising said request and said response is modifiable.
14. The software tool of claim 13 further including a routine that displays a representation of at least one of the transaction request and the transaction response.
15. The software tool of claim 14 further including a view filter that selectively filters information that is displayed.
16. The software tool of claim 13 further including a stream filter that selectively filters the transaction requests and responses .
17. The software tool of claim 13 further including a trigger that interrupts transmission between the first device and the second device upon the detection of a predetermined condition.
18. The software tool of claim 13 further including a routine that provides a representation of the transaction to a third application. 

</CLAIMS>
</TEXT>
</DOC>
