<DOC>
<DOCNO>EP-0628908</DOCNO> 
<TEXT>
<INVENTION-TITLE>
PCMCIA interface using shared memory.
</INVENTION-TITLE>
<CLASSIFICATIONS>B62B300	B62B300	B62B500	B62B500	G06F906	G06F906	G06F9445	G06F9445	G06F1100	G06F1100	G06F1310	G06F1310	G06K710	G06K710	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>B62B	B62B	B62B	B62B	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06K	G06K	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>B62B3	B62B3	B62B5	B62B5	G06F9	G06F9	G06F9	G06F9	G06F11	G06F11	G06F13	G06F13	G06K7	G06K7	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A "Personal Computer Memory Card International Association" 
(PCMCIA) peripheral, e.g., a modem (100), incorporates a shared memory (130) 

interface to a personal computer (200). This shared memory interface provides the 
capability to easily program the PCMCIA peripheral (100) either in the factory or in 

the field. In addition, the shared memory interface removes the requirement of 
having a resident "boot-up" code in the PCMCIA peripheral. Finally, the shared 

memory interface provides the capability to transfer user data from the personal 
computer, i.e., data terminal, to the PCMCIA modem at a higher data transfer rate 

than is currently available via the modem's universal asynchronous receive/transmit 
(UART) integrated circuit. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
AT 
&
 T CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
AT
&
T CORP.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BEDINGFIELD JOHN
</INVENTOR-NAME>
<INVENTOR-NAME>
MATTHEWS CRAIG
</INVENTOR-NAME>
<INVENTOR-NAME>
BEDINGFIELD, JOHN
</INVENTOR-NAME>
<INVENTOR-NAME>
MATTHEWS, CRAIG
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to data communications equipment and, 
more particularly, to a modem having a "Personal Computer Memory Card 
International Association" interface. The "Personal Computer Memory Card International Association" 
(PCMCIA) interface defines the physical size and the electrical interconnection for a 
class of computer peripherals, i.e., PCMCIA peripherals. Generally, the size of a 
PCMCIA peripheral is approximately that of a "credit card." Each credit card size 
PCMCIA peripheral electrically interconnects via a PCMCIA electrical connector to 
a "host computer," which is typically a "notebook" size personal computer (PC). 
PCMCIA peripherals like memory, modems, fax, hard disks, etc., are currently 
available. Like their more conventional cousins, a PCMCIA modem is a complex 
piece of equipment that comprises specialized microprocessor circuitry. For 
example, a PCMCIA modem typically includes a general-purpose microprocessor 
(CPU), memory, a telephone line interface to the Public Switched Telephone 
Network (PSTN), and a high-speed digital signal processor for processing the 
respective communications signal in both the transmit and receive directions. The 
functionality of the PCMCIA modem is provided by the CPU's execution of a 
computer program, i.e., the "operating program," that resides in the PCMCIA 
modem's memory. This memory is usually "flash memory," which is a non-volatile 
memory that is field-programmable by the modem's CPU. An advantage of the flash memory is that it allows field upgrades of the 
modem's operating program for either providing new features or "bug" fixes. In 
order to perform a field upgrade a part of the flash memory is reserved for a "boot 
block" computer program. This part of the flash memory is write-protected so that it 
retains its data, i.e., the boot block, even when the rest of the flash memory is erased 
and reprogrammed. The boot block includes computer software for booting-up the 
modem, e.g., after application of power, and for loading the remainder of the flash 
memory with the operating program. A field upgrade of the modem's flash memory is performed over one of 
the serial data ports, either the data communications port or the data terminal port. 
First, the modem's CPU receives a command to reload the operating program from a 
"host" coupled to one of the serial ports. Then the modem's CPU executes that 
portion of the boot block associated with loading the flash memory. This part of the  
 
software first erases the remaining
</DESCRIPTION>
<CLAIMS>
A PCMCIA peripheral coupled to a host computer by a PCMCIA 
connector, the PCMCIA peripheral comprising: 

   memory means for receiving a number of instructions provided by the 
host computer via the PCMCIA connector; and 

   processor means; and 
   control means responsive to the host computer for generating at least 

one control signal to reset the processor means, and for controlling the processor 
means in such a way that the processor means accuses the memory means to 

execute the number of instructions. 
The apparatus of claim 1 wherein the control means includes: 
   control logic means responsive to the host computer for generating the 

at least one control signal and for providing an address control signal; and 
  
 address switching means responsive to the address control signal for 
causing the processor means to access the memory means to execute the number of 

instructions. 
Apparatus comprising: 
   a PCMCIA connector; 

   processor means responsive to a reset signal for providing a starting 
address for accessing a memory location to execute at least one instruction stored 

therein; 
   first memory means; 

   second memory means; and 
   control means responsive to at least one control signal received from the 

PCMCIA connector for a:) providing the reset signal to the processor means, and b) 
switching between a first and second mode of operation; 

   where in the first mode of operation, the control means alters the starting 
address provided by the processor means in such a way that the memory location is 

located within the first memory means, and in the second mode of operation, the 
control means alters the starting address provided by the processor means in such a 

that the memory location is located within the second memory means. 
The apparatus of claim 3 wherein the second memory means is shared 
memory between the processor means and a host computer coupled to the shared 

 
memory by the PCMCIA connector. 
The apparatus of claim 4 wherein the at least one control signal is at 
least one memory access by the host computer to the second memory means via the 

PCMCIA connector. 
A method for use in a PCMCIA peripheral for modifying a computer 
program executed by the PCMCIA peripheral comprising the steps of: 

   coupling to a host computer via a PCMCIA connector; 
   receiving a reset signal from the host computer via the PCMCIA 

connector; 
   receiving data from the host computer via the PCMCIA connector for 

storage in a memory device of the PCMCIA peripheral, where the data represents a 
plurality of instructions; 

   generating a control signal in response to a memory access from the host 
computer via the PCMCIA connector; and 

   responsive to the control signal, accessing the memory device to retrieve 
the data in such a way that a central processing unit of the PCMCIA peripheral 

executes the plurality of instructions; 
   where the memory device is shared between the central processing unit 

of the PCMCIA peripheral and the host computer. 
The method of claim 10 wherein the generating step occurs while the 
reset signal is still active. 
The method of claim 10 wherein the reset signal is a memory access 
by the host computer to a predefined memory location in the PCMCIA peripheral. 
A method for accessing a PCMCIA peripheral comprising the steps of: 
   coupling to the PCMCIA peripheral via a PCMCIA connector; 

   providing a reset signal to the PCMCIA peripheral via the PCMCIA 
connector; 

   moving data via the PCMCIA connector to a storage location located 
within the PCMCIA peripheral, the data representing a plurality of instructions; and

 
   accessing a memory location of the PCMCIA peripheral via the 

PCMCIA connector to cause a central processing unit of the PCMCIA peripheral to 
access the storage location in such a way that the central processing unit executes the 

plurality of instructions. 
</CLAIMS>
</TEXT>
</DOC>
