<DOC>
<DOCNO>EP-0629968</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method for continuous logic computation.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F944	G06F944	G06F1518	G06F1518	G06G700	G06G760	G06N300	G06N300	G06N304	G06N700	G06N702	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06G	G06G	G06N	G06N	G06N	G06N	G06N	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F15	G06F15	G06G7	G06G7	G06N3	G06N3	G06N3	G06N7	G06N7	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A continuous logic method using a neural network (FIG. 8) is 
characterized by defining input and output variables (130, FIG. 9) 

that do not use a membership function, by employing production 
rules (IF/THEN rules) (132) that relate the output variables to the 

input variables, and by using the neural network to compute or 
interpolate the outputs (136). The neural network first learns the 

given production rules and then produces the outputs in real time. 
The neural network is constructed of artificial neurons each 
having only one significant processing element in the form of a 

multiplier. The neural network utilizes a training algorithm 
which does not require repetitive training and which yields a 

global minimum to each given set of input vectors. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
MOTOROLA INC
</APPLICANT-NAME>
<APPLICANT-NAME>
MOTOROLA, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
WANG SHAY-PING THOMAS
</INVENTOR-NAME>
<INVENTOR-NAME>
WANG, SHAY-PING THOMAS
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention is related to the following inventions 
which are assigned to the same assignee as the present invention: 
(1) "Artificial Neuron and Method of Using Same", having 
United States of America patent application number 08/076,602, 
filed June 14, 1993; (2) "Neural Network and Method of Using Same", having 
United States of America patent application number 08/076,601, 
filed June 14, 1993. The subject matter of the above-identified related 
inventions is hereby incorporated by reference into the disclosure 
of this invention. This invention relates generally to continuous logic systems 
and, in particular, to a continuous logic method in which the input 
and output variables do not employ a membership function, and in 
which the production rules are represented by examples. A neural 
network first learns the given production rules and then produces 
the defuzzified outputs in real time. The neural network utilizes 
a training algorithm which does not require repetitive training and 
which yields a global minimum to each given set of input 
variables. In recent years fuzzy logic control systems have been widely 
adapted in consumer electronics and appliances, process control, 
and speech recognition applications. For instance, fuzzy logic has 
been used in more than 2000 products in Japan alone. The  
 
popularity of fuzzy logic is due to its capability of controlling 
non-linear/uncertain systems which are difficult to control by 
conventional control algorithms. Conventional fuzzy logic control systems are well known in 
the prior art, as shown for example in the article "A Comparison of 
Neural Network and Fuzzy Logic Control Systems", David J. 
Holloway et al., Proceedings of American Control Conference, 
1992, pp. 2291-2294. As discussed in the above-referenced article, fuzzy logic 
systems may be characterized by the definition of the 
input/output sets. By this, we mean that the input set will have 
an associated membership function or curve, which curve may 
overlap the neighboring sets of inputs. This is the defining 
difference between fuzzy sets and conventional set theory. There 
are potentially many problems associated with defining the 
membership function - for example, in selecting a curve of 
suitable shape (e.g. bell-shaped, trapezoidal, triangular, etc.) and 
breadth, and in overlapping of the curve with adjacent sets. These 
problems make tuning the logic system difficult and time-consuming, 
and they represent fundamental disadvantages of fuzzy 
logic control
</DESCRIPTION>
<CLAIMS>
A method for continuous logic computation comprising 
the steps of: 


(a) defining a continuous logic system which comprises a 
plurality of inputs and outputs (130, FIG. 9); 
(b) defining production rules which relate the outputs to 
the inputs in a certain manner (132); 
(c) expressing the production rules by an algorithm which 
may take the form of a polynomial equation or orthogonal function 

(133); and 
(d) computing at least one interpolated output from the 
algorithm by substituting at least one input into the polynomial 

equation or orthogonal function (136). 
The method of claim 1, wherein step (a) comprises the 
substep of normalizing the inputs (131). 
The method of claim 1, wherein in step (d) a plurality 
of inputs are substituted into the polynomial equation or 

orthogonal function and wherein said at least one output is 
computed by a parallel processing operation. 
The method of claim 1 and further comprising the step 
of tuning the continuous logic system to a desired performance 

level (137). 
The method of claim 4, wherein said continuous logic 
system is tuned by adjusting the bounds of the inputs and the 

desired values of the outputs in the production rules. 
A method for continuous logic computation comprising 
the steps of: 


(a) defining a continuous logic system which comprises a 
plurality of inputs and outputs (130, FIG. 9); 
(b) defining production rules which relate the outputs to 
the inputs in a certain manner (132); 
(c) expressing the production rules by an algorithm which 
may take the form of a polynomial equation or orthogonal function 

(133); 
(d) defining a neural network (134); 
(e) computing the weights of the neural network (135); 
and 
(f) computing at least one interpolated output from the 
neural network by providing at least one input to the neural 

network (136). 
The method of claim 6, wherein step (a) comprises the 
substep of normalizing the inputs (131). 
The method of claim 6, wherein in step (f) a plurality 
of inputs are provided to said neural network and wherein said at 

least one output is computed by a parallel processing operation. 
The method of claim 6 and further comprising the step 
of tuning the continuous logic system to a desired performance 

level (137). 
The method of claim 9, wherein said continuous logic 
system is tuned by adjusting the bounds of the inputs and the 

desired values of the outputs in the production rules. 
</CLAIMS>
</TEXT>
</DOC>
