<DOC>
<DOCNO>EP-0654748</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method of analyzing data defining an image
</INVENTION-TITLE>
<CLASSIFICATIONS>G06T760	G06K900	G06K900	G06T760	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06T	G06K	G06K	G06T	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06T7	G06K9	G06K9	G06T7	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Input image data define an input image set that shows a node-link structure, such as 
a directed graph, an undirected graph, a tree, a flow chart, a circuit diagram, or a 

state-transition diagram. The input image set can include one image showing the node-link 
structure or two images, one showing graphical features that are a subset of the nodes and the 

other an image of an overlay with editing marks that include the links and another subset of 
the nodes. The input image data are used to obtain likely node-link data (20) indicating parts 

of the input image set that satisfy a constraint on nodes (12,14) and parts that satisfy a 
constraint on links (16). The likely node-link data (20) are used to obtain constrained node-link 

data (30) indicating subsets of the likely nodes and links that satisfy a constraint on node-link 
structures. The likely node-link data (20) can include data defining a likely node image 

showing parts that meet a node criterion and data defining a likely link image showing parts 
that meet a link criterion. The constrained node-link data (30) can be obtained by iteratively 

applying a link nearness criterion to the likely nodes and a node nearness criterion to the likely 
links until stability is reached. The constrained node-link data (30) can be used to obtain output 

image data defining an output image that includes a precisely formed version of the node-link 
structure or an edited version of an input image. Or the constrained node-link data (30) can be 

used to provide control signals to a system. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
XEROX CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
XEROX CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MAHONEY JAMES V
</INVENTOR-NAME>
<INVENTOR-NAME>
RAO SATYAJIT
</INVENTOR-NAME>
<INVENTOR-NAME>
MAHONEY, JAMES V.
</INVENTOR-NAME>
<INVENTOR-NAME>
RAO, SATYAJIT
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a method of analyzing data defining an image and, more
particularly, to techniques for analyzing an image showing a graphical representation.Bunke, H., "Attributed Programmed Graph Grammars and Their Application to Schematic
Diagram Interpretation," IEEE Transactions on Pattern Analysis and Machine Intelligence, Vol.
PAMI-4, No. 6, November 1982, pp. 574-582, describes techniques that apply attributed
programmed graph grammars to the interpretation of circuit diagrams and flowcharts.The Ricoh Imagio MF530 Series General Catalog, Ricoh K.K., 1992, describes Al
copying functions at pages 23 and 24. Page 24 shows how hand-drawn charts, including a flow
chart and two others that appear to have nodes and links, can be cleanly traced and thus made
easier to see.Kasturi, R. et al "A system for recognition and description of graphics" (9th International
Conference on Pattern Recognition, Rome, Italy, 14-17 Nov. 1998, ISBN 0-8186-0878-1,
Washington, D.C., USA, IEEE Comput. Soc. Press, USA, pp. 255--259 vol. 1) discloses a system
for automatic recognition and description of graphical primitives and their interconnections in a
mixed text/graphics image. As an example for a simple graphics image, a flow chart is shown.
The system of this reference recognizes loops as triangles, rectangles and parallelograms.
Even boxes which are not exact rectangles are recognized by the system as rectangles.It is the object of this invention to provide a method and a machine which avoid treating
certain items inappropriately and which have an improved performance.This object is achieved by a method according to claim 1 and a machine according to
claim 12.Preferred embodiments are the subject matters of the dependent claims. The invention is based on analyzing
images that show node-link structures such as directed graphs, undirected graphs, trees, flow
charts, circuit diagrams, state-transition diagrams, and other graphical representations that
include structures of nodes and links. Analysis of an image showing a node-link structure often
requires resolution of ambiguity. For example, a node-link structure may include labels for the
nodes and links, and the labels may include connected components that resemble nodes or
links. The usefulness of node-link structures for communicating information to a machine is
limited by ambiguity.The invention is based on an image analysis technique that alleviates
the problem of resolving ambiguity in node-link structures. The technique analyzes an image
set that
</DESCRIPTION>
<CLAIMS>
A method comprising:

obtaining input image data defining an input image set (10; 100, 102, 104;
480, 484; 490, 494; 500, 520) that shows an input node-link structure; the input image

set showing a set of nodes (12, 14) that satisfy a constraint on nodes and a set of links
(16) that satisfy a constraint on links; the input node-link structure satisfying a constraint

on node-link structures including a link nearness criterion and a node nearness criterion;
a sequence of iterations, each iteration using starting node data and starting
link data to obtain ending node data and ending link data; the sequence beginning with a

first iteration and ending with a last iteration; the first iteration's starting node data
indicating first set of parts of the input image set; the first iteration's starting link data

indicating second set of parts of the input image set; the starting node data of each
iteration after the first iteration being the ending node data of the preceding iteration; the

starting link data of each iteration after the first iteration being the ending link data of the
preceding iteration; the last iteration's ending node data and ending link data together

being constrained node-link data; each iteration comprising:

using the iteration's starting node data and starting link data to obtain the
iteration's ending node data; each iteration's ending node data indicating parts of the

input image set that are indicated by the iteration's starting node data and that meet the
link nearness criterion; and
using the iteration's starting node data and starting link data to obtain the
iteration's ending link data; each iteration's ending link data indicating parts of the input

image set that are indicated by the iteration's starting link data and that meet a node
nearness criterion.
The method of claim 1, in which the input image set includes only one image,
the one image showing all nodes and links in the input node-link structure; or in which the

input image set includes first and second images, the first image showing a first subset of
the set of nodes, the second image showing a second subset of the set of nodes. 
The method of claim 2 in which the first image shows graphical features, each
graphical feature being one of the first subset of the set of nodes; the second image

showing an overlay with editing marks that can be superimposed on the first image to
obtain the input node-link structure, the editing marks including the set of links and the

second subset of the set of nodes.
The method of one of claims 1 to 3 in which the input image set shows a
sketch (480, 484; 490, 494) made by hand.
The method of one of claims 1 to 4 in which the input image set includes
pixels; the constraint on nodes including a node criterion; the constraint on links including

a link criterion;

the ending node data defining a version of the input image set in which each
pixel's value indicates whether the pixel is in a part of the input image set that meets the

node criterion; and
the ending link data defining a version of the input image set in which each
pixel's value indicates whether the pixel is in a part of the input image set that meets the

link criterion.
The method of claim 5 in which the node criterion requires a connected
component that encloses more pixels than are in the connected component, and/or

in which the link criterion requires a connected component that encloses less pixels
than are in the connected component, and/or in which the link criterion requires a

connected component with a first end that meets a head criterion and a second end
that meets a tail criterion; the head criterion requiring a connected component

enclosing a white area smaller than its own area.
The method of one of claims 1 to 6, in which the link nearness criterion
requires a part of the input image set that is the nearest part of the input image set that

meets the node criterion to an end of a part of the input image set that meets the link
criterion, and/or in which the node nearness criterion requires a part of the input image

set with a length that is greater than a distance from an end of the part of the input image
set to a part of the input image set that meets the node criterion, and/or in which each

iteration further comprises:
 
   using the iteration's starting node data, starting link data, ending node data,

and ending link data to obtain stability data indicating whether a change occurred during
the iteration; the stability data of the last iteration indicating that no change occurred

during the last iteration
The method of one of claims 1 to 7 in which the acts of using the starting node
data and starting link data comprise obtaining a list of nodes.
The method of claim 8 in which the acts of using the starting node data and
the starting link data further comprise obtaining a list of links; each link in the list of links

being defined as an ordered pair of nodes that are in the list of nodes.
The method of one of claims 1 to 9, further comprising:

   using the constrained node-link data to obtain output image data (434; 648);
the output image data defining an output image set that shows an output node-link

structure similar to the input node-link structure.
The method of one of claims 1 to 10 in which the input node-link structure is a

directed graph, an undirected graph, a tree, a flow chart, a circuit diagram, or a state-transition
diagram.
A machine comprising:

image input circuitry (70) for obtaining data defining images as input;
memory (68; 192, 194; 410, 412; 620, 640) for storing data; and
a processor (66; 190; 402; 602) connected for receiving data defining images
from the image input circuitry and connected for accessing data stored in the memory;
the data stored in the memory comprising instruction data (192; 410; 620)
indicating image processing instructions (204; 426; 632) the processor can execute; the

processor, in executing the image processing instructions:

receiving input image data from the image input circuitry, the input image data
defining an input image set (10; 100, 102, 104; 480, 484; 490, 494; 500, 520) that shows

an input node-link structure; the input image set including an image showing a set of
nodes (12, 14) that satisfy a constraint on nodes and a set of links (16) that satisfy a

constraint on links; the input node-link structure satisfying a constraint on node-link
structures including a link nearness criterion and a node nearness criterion; 
a sequence of iterations, each iteration using starting node data and starting
link data to obtain ending node data and ending link data; the sequence beginning with a

first iteration and ending with a last iteration; the first iteration's starting node data
indicating first set of parts of the input image set; the first iteration's starting link data

indicating second set of parts of the input image set; the starting node data of each
iteration after the first iteration being the ending node data of the preceding iteration; the

starting link data of each iteration after the first iteration being the ending link data of the
preceding iteration; the last iteration's ending node data and ending link data together

being constrained node-link data; each iteration comprising:

using the iteration's starting node data and starting link data to obtain the
iteration's ending node data; each iteration's ending node data indicating parts of the

input image set that are indicated by the iteration's starting node data and that meet the
link nearness criterion; and
using the iteration's starting node data and starting link data to obtain the
iteration's ending link data; each iteration's ending link data indicating parts of the input

image set that are indicated by the iteration's starting link data and that meet a node
nearness criterion.
The machine of claim 12 in which the input image circuitry is connected for
receiving facsimile transmissions.
The machine of claim 12 or 13 in which the processor is further connected for
providing control signals to a system; the processor further, in executing the image

processing instructions:

using the constrained node-link data to obtain a control signal; and
providing the control signal to the system.
The machine of one of claims 12 to 14 in which the machine further
comprises image output circuitry (90) for providing data defining images as output; the

processor further, in executing the image processing instructions:

using the constrained node-link data to obtain output image data (434; 648)
defining an output image set that includes an output node-link structure similar to the

input node-link structure; and
providing the output image data to the image output circuitry.
The machine of claim 15 in which the output image circuitry is connected for
providing facsimile transmissions.
The machine of one of claims 12 to 16 in which the machine is an image
processing server (398); the image processing server being connected to a network for

receiving requests for image processing operations; the network including the image
input circuitry; the instruction data further indicating request handling instructions the

processor can execute; the processor, in executing the request handling instructions,
determining whether to execute the image processing instructions.
The machine of one of claims 12 to 17 in which the machine is a fax server
(626) or a copier.
</CLAIMS>
</TEXT>
</DOC>
