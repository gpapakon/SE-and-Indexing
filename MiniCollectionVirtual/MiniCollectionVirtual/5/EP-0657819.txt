<DOC>
<DOCNO>EP-0657819</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Cache memory.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1208	G06F1208	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F12	G06F12	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A microprocessor is provided with an integral, two 
level cache memory architecture. The microprocessor 

includes a microprocessor core and a set associative first 
level cache both located on a common semiconductor die. A 

replacement cache, which is at least as large as 
approximately one half the size of the first level cache, is 

situated on the same semiconductor die and is coupled to the 
first level cache. In the event of a first level cache 

miss, a first level entry is discarded and stored in the 
replacement cache. When such a first level cache miss 

occurs, the replacement cache is checked to see if the 
desired entry is stored therein. If a replacement cache hit 

occurs, then the hit entry is forwarded to the first level 
cache and stored therein. If a cache miss occurs in both 

the first level cache and the replacement cache, then a main 
memory access is commenced to retrieve the desired entry. 

In that event, the desired entry retrieved from main memory 
is forwarded to the first level cache and stored therein. 

When a replacement cache entry is removed from the 
replacement cache by the replacement algorithm associated 

therewith, that entry is written back to main memory if that 
entry was modified. Otherwise the entry is discarded. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
ADVANCED MICRO DEVICES INC
</APPLICANT-NAME>
<APPLICANT-NAME>
ADVANCED MICRO DEVICES INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
WITT DAVID B
</INVENTOR-NAME>
<INVENTOR-NAME>
WITT, DAVID B.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates in general to memory 
architectures for computer systems and, more particularly, 
to cache memories for use with computer 
processors. Processors often take several clock cycles to access 
data which is stored in a main memory located external to 
the processor. Not only do these external memory accesses 
require a significant amount of time, these accesses also 
consume a significant amount of power. Cache memories have 
often been used to enhance computer system performance by 
providing a processor with a relatively small, high speed 
memory (or cache) for storing instructions and data which 
have recently been accessed by the processor. These 
instructions and data are stored in the cache in the hope 
that, since they have been accessed once, they will be 
accessed again relatively soon. The speed or access time of 
the cache memory is substantially faster than that of the 
external main memory. By retrieving an instruction or data 
from the cache when a cache hit occurs rather than accessing  
 
the slower external main memory, significant time can be 
saved in the retrieval of the desired information. A recent trend has been to integrate a first level (L1) 
cache on the microprocessor chip together with the 
microprocessor core as shown in FIG. 1. In this particular 
example, the microprocessor chip has been provided with a 
level 1 cache (L1) located on the chip and a level 2 cache 
(L2) located external to the microprocessor chip. The on-chip 
L1 cache includes both an L1 instruction cache and an 
L1 data cache. The L1 caches and the L2 cache are coupled 
via physical address and physical data buses to the external 
main memory in this example. The off-chip L2 cache is 
typically orders of magnitude larger than the on-chip L1 
caches. For example, 4 Kbyte on-chip L1 caches and 256 
Kbyte - 512 Kbyte off-chip L2 external caches are common. In a typical cache arrangement, the second level L2 
cache includes all first level cache entries as subsets. In 
other words, all of the entries of the first level L1 caches 
are also stored in the second level L2 cache. In this 
manner, accesses to the L2 cache do not have to inspect the 
L1 caches unless there is an indication that the requested 
instruction or data is also stored in the L1 caches. Both "direct mapped" and "associative" caches are known 
to increase memory performance. In direct mapped caches, a 
particular block or line of information can only be stored 
in a single location in the cache according to the block-frame 
a
</DESCRIPTION>
<CLAIMS>
1) A microprocessor comprising: 
   a semiconductor die; 

   a microprocessor core situated on said semiconductor 
die; 

   a first level set associative cache situated on said 
semiconductor die and coupled to said microprocessor core, 

said first level cache exhibiting a predetermined byte size 
sufficiently large to store a predetermined number of 

information entries; and 
   a replacement cache situated on said semiconductor 

die and coupled to said first level cache, said replacement 
cache storing information entries which are discarded from 

said first level cache as a result of first level cache 
misses, said replacement cache being at least as large as 

approximately one half the size of said first level cache. 
2) The microprocessor of claim 1 further comprising a 
replacement cache hit detection circuit, coupled to said 

replacement cache, for detecting when a hit occurs in said 
replacement cache and for supplying a hit entry from said 

replacement cache to said first level cache when a hit 
occurs in said replacement cache. 
3) The microprocessor of claim 1 further comprising 
memory accessing means for accessing an external memory to 

retrieve a desired information entry when both a first level 
cache miss and a replacement cache miss occur. 
4) The microprocessor of claim 1 wherein said 
replacement cache comprises a set associative replacement 

cache. 
5) The microprocessor of claim 1 wherein said 
replacement cache comprises a 4 way set associative 

replacement cache. 
6) The microprocessor of claim 1 wherein said first 
level cache comprises a 4 way set associative cache. 
7) A microprocessor comprising: 
   a semiconductor die; 

   a microprocessor core situated on said semiconductor 
die; 

   a first level set associative cache situated on said 
semiconductor die and coupled to said microprocessor core, 

said first level cache exhibiting a predetermined byte size 
sufficiently large to store a predetermined number of 

information entries; 
   a first level cache hit detector, coupled to said 

first level cache, for detecting when a hit occurs in said 
first level cache and for discarding an entr
y from said 
first level cache as a discard information entry when a 

cache miss occurs in said first level cache. 
   a replacement cache situated on said semiconductor 

die and coupled to said first level cache, said replacement 
cache storing discard information entries which are 

discarded from said first level cache as a result of first 
level cache misses, said replacement cache being at least as 

large as approximately one half the size of said first level 
cache; and 

   a replacement cache hit detector, coupled to said 
replacement cache, for detecting when a hit occurs in said 

replacement cache after a first level cache miss and for 
supplying a hit entry from said replacement cache to said 

first level cache when a hit occurs in said replacement 
cache. 
8) The microprocessor of claim 7 wherein said first 
level cache includes a first level instruction cache and a 

first level data cache. 
9) The microprocessor of claim 7 further comprising a 
clock controller for providing a clocking signal to said 

replacement cache when said replacement cache is being 
accessed and for not providing said clocking signal to said 

replacement cache when said replacement cache is not being 
accessed, such that power is conserved. 
10) The microprocessor of claim 7 further comprising a 
first level cache hit detection circuit, situated in said 

first level cache, for detecting when a hit occurs in said 
first level cache and for discarding an entry from said 

first level cache as a discard information entry when a 
cache miss occurs in said first level cache. 
11) The microprocessor of claim 7 combined with an 
external memory for providing instructions and data to said 

microprocessor. 
12) The microprocessor of claim 11 further comprising 
memory accessing means for accessing said external memory 

when both a first level cache miss occurs and a replacement 
cache miss occurs to retrieve a desired information entry 

from said external memory and send said desired information 
entry to said first level cache for storage therein. 
13) The microprocessor of claim 7 wherein said 
replacement cache comprises a set associative replacement 

cache. 
14) The microprocessor of claim 7 wherein said 
replacement cache comprises a 4 way set associative 

replacement cache. 
15) The microprocessor of claim 7 wherein said first 
level cache comprises a 4 way set associative cache. 
16) In a microprocessor including a microprocessor core 
and a first level cache coupled together and situated on a 

common semiconductor die, a main memory being situated 
external to said microprocessor and coupled to said 

microprocessor, a method of accessing memory comprising: 
   providing a replacement cache situated on said 

semiconductor die and coupled to said first level cache, 
said replacement cache being at least as large as 

approximately one half the size of said first level cache; 
   discarding an entry from said first level cache when 

a cache miss occurs in said first level cache, the entry 
thus discarded being designated the discard entry; 

   storing said discard entry in said replacement cache 
for later use by said microprocessor core; 

   said replacement cache supplying a hit entry to 
said first level cache when a cache hit occurs in said 

replacement cache, and 
   storing said hit entry in said first level cache for 

later use by said microprocessor core. 
17) The method of claim 16 further comprising the step 
of clocking said replacement cache during those periods of 

time when said replacement cache is being accessed. 
18) The method of claim 17 further comprising the step 
of ceasing to clock said replacement cache during those 

periods of time when said replacement cache is not being 
accessed. 
19) The method of claim 16 wherein said first level 
cache is set associative. 
20) The method of claim 16 wherein said replacement 
cache is set associative. 
21) The method of claim 16 wherein said first level 
cache is four-way set associative. 
22) The method of claim 16 wherein said replacement 
cache is four-way set associative. 
</CLAIMS>
</TEXT>
</DOC>
