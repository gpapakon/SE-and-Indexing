<DOC>
<DOCNO>EP-0640268</DOCNO> 
<TEXT>
<INVENTION-TITLE>
METHOD AND APPARATUS FOR DECODING ENCODED VIDEO DATA
</INVENTION-TITLE>
<CLASSIFICATIONS>H04N964	H04N964	H04N1104	H04N1104	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04N	H04N	H04N	H04N	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04N9	H04N9	H04N11	H04N11	</CLASSIFICATIONS-FOURTH>
<APPLICANTS>
<APPLICANT-NAME>
AST RESEARCH INC
</APPLICANT-NAME>
<APPLICANT-NAME>
AST RESEARCH, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CHATHAM DALE
</INVENTOR-NAME>
<INVENTOR-NAME>
WAKELAND CARL K
</INVENTOR-NAME>
<INVENTOR-NAME>
CHATHAM, DALE
</INVENTOR-NAME>
<INVENTOR-NAME>
WAKELAND, CARL, K.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention is related to video signal processing
techniques and, more particularly, to a method and
apparatus for decoding differentially encoded video color
data signals.The capability of displaying full-color, 32-bit
images on high-resolution monitors has, in recent years,
become increasingly in demand, particularly in multi-media
and scientific visualization applications. However,
full-color, 32-bit images require enormous amounts of
storage space which, in turn, increases the cost of such
imaging systems considerably. For example, a single
full-color, 32-bit image on a high resolution display can
often require as much as 3-4 Mbytes of data. In contrast,
a single gray-scale image typically requires 1 Mbytes of
data and a single black-and-white image typically requires
only 125 Kbytes of data. These storage requirements are
particularly problematic in animated graphic and/or full
motion video applications. Animated graphic applications
require the storage and display of hundreds of screen
images in sequence. Full-motion color video applications,
on the other hand, requires the display of 30 frames, each 
demanding approximately 1 Mbyte of storage space, per
second. Thus, one minute of full motion color video will
require a storage capacity of almost 2 Gigabytes.Even assuming that sufficient storage capacity is
available, data transfer rates pose yet another obstacle
to widespread use of full color video imaging systems.
Most desktop computers fall well short of the 30 Mbps data
transfer rate required for full-motion color video
applications. For example, the hard disk drives commonly
found in many desktop computers have data transfer rates
of 1 to 2 MBps. Furthermore, the data buses most commonly
associated with such computer systems also tend to
transfer data at rates under 20 MBps. For example, the AT
bus drive runs at 8 MBps.The CD has long been viewed as the solution to the
storage requirements for full-motion color video
applications. CD-ROM drives, however, tend to transfer
data at rates slower than hard disk drives. Thus, while
the much larger storage space of the CD is capable of
addressing one problem with full-motion color video
applications, the relatively slow CD-ROM drive remains an
obstacle.The solution to these problems is the use of data
compression to reduce the size of the data required to
represent a graphic image. In the past, data compression
has been widely used for archiving and transmitting text
files and various data compression algorithms have been
designed for this
</DESCRIPTION>
<CLAIMS>
A method for decoding encoded video data comprising the
steps of:


deformatting encoded video data into a five bit
luminance component (Yprime) for each of four successive

pixel elements, a first five bit chrominance component
(Uprime) for said four successive pixel elements and a second

five bit chrominance component (Vprime) for said four
successive pixel elements;
differentially decompressing said five bit luminance
component (Yprime) for each of said four successive pixel

elements into an eight bit luminance component (Yout) for
said pixel element;
differentially decompressing said first five bit
chrominance component (Uprime) for said four successive pixel

elements into a first eight bit chrominance component (Uout)
for said four successive pixel elements;
differentially decompressing said second five bit
chromina
nce component (Vprime) for said four successive pixel
elements into a second eight bit chrominance component (Vout)

for said four successive pixel elements; and
converting said differentially decompressed luminance
and chrominance components (Yout, Uout, Vout) into

corresponding red, green and blue components (R, G, B).
A method for decoding encoded video data according to
Claim 1 and further comprising the steps of: 


determining the location of a color transition within
said four successive pixel elements; and
replacing said first eight bit chrominance component
(Uout) with an interpolated first eight bit chrominance

component for said pixel element preceding said color
transition.
A method for decoding encoded video data according to
Claim 2 and further comprising the step of replacing said second

eight bit chrominance component (Vout) with an interpolated second
eight bit chrominance component for said pixel element preceding

said color transition.
A method for decoding encoded video data according to
Claim 3 and further comprising the steps of:


determining, from said first chrominance component for
said four successive pixel elements and a first chrominance

component for the previous four successive pixel elements,
said interpolated first chrominance component; and
determining, from said second chrominance component for
said four successive pixel elements and a second chrominance

component for the previous four successive pixel elements,
said interpolated second chrominance component.
A method for decoding encoded video data according the
Claim 3 or 4, wherein the step of determining said interpolated

first chrominance component further comprises the step of
determining the average of said first chrominance component for

said four successive pixel elements and said first chrominance 
component for the previous four successive pixel elements and the

step of determining said interpolated second chrominance component
further comprises the step of determining the average of said

second chrominance component for the previous four successive
pixel elements.
A method for decoding encoded video data according to
any of Claims 1 to 5, wherein one or more of the steps of

differentially decompressing five bit components (Yprime, Uprime,
Vprime) into eight bit components (Yout, Uout, Vout) further

comprise the step of favoring smaller differential changes in said
components during the differential decompression of said five bit

components (Yprime, Uprime, Vprime) into eight bit components
(Yout, Uout, Vout).
A method for decoding encoded video data according to
Claim 6, wherein the or each step of favoring smaller differential

changes in said components during the differential decompression
of said five bit components (Yprime, Uprime, Vprime) into said

eight bit components (Yout, Uout, Vout) further comprises the step
of expanding said five bit components (Yprime, Uprime, Vprime)

into said eight bit components (Yout, Uout, Vout) according to the
following relationships:


5 Bit Value
8 Bit Value
5 Bit Value
8 Bit Value
0
0
16
128
1
1
17
165
2
2
18
190
3
3
19
206
4
4
20
218 
5
5
21
227
6
6
22
234
7
9
23
239
8
12
24
244
9
17
25
247
10
22
26
250
11
29
27
251
12
38
28
252
13
50
29
253
14
66
30
254
15
91
31
255
A method for decoding encoded video data according to
any of Claims 1 to 7, wherein the step of deformatting encoded

video data into a five bit luminance component (Yprime) for each
of four successive pixel elements, a first five bit chrominance

component (Uprime) for said four successive pixel elements and a
second five bit chrominance component (Vprime) for said four

successive pixel elements further comprises the step of
deformatting encoded video data into a two bit transitional code

(Transl) for said four successive pixel elements.
A method for decoding encoded video data according to
Claim 8, wherein the step of deformatting encoded video data into

a five bit luminance component (Yprime) for each of four
successive pixel elements, a first five bit chrominance component

(Uprime) for said four successive pixel elements, a second five
bit chrominance component (Vprime) for said four successive pixel

elements, and a two bit transitional code (Transl) further
comprises the steps of: 


extracting a five bit luminance component (Yprime) for
a first one of said four successive pixel elements, two bits

of a first five bit chrominance component (Uprime) for said
four successive pixel elements and one bit of a two bit

transitional code (Transl) from a first byte of encoded video
data;
extracting a five bit luminance component (Yprime) for
a second one of said four successive pixel elements and three

bits of said first five bit chrominance component (Uprime)
for said four successive pixel elements from a second byte of

encoded video data;
extracting a five bit luminance component (Yprime) for
a third one of said four successive pixel elements, two bits

of a second five bit chrominance component (Uprime) for said
four successive pixel elements and one bit of said two bit

transitional code (Transl) from a third byte of encoded video
data;
extracting a five bit luminance component (Yprime) for
a fourth one of said four successive pixel elements and three

bits of said second five bit chrominance component (Vprime)

for said four successive pixel elements from a fourth byte of
encoded video data;
A method for decoding encoded video data according to
Claim 9 and further comprising the steps of:


combining said extracted first, second, third and
fourth five bit luminance components (Yprime) into a 

luminance component data stream;
combining said extracted bits of said first chrominance
component (Uprime) into a first chrominance component data

stream;
combining said extracted bits of said second
chrominance component (Vprime) into a second chrominance

component data stream;
combining said extracted bits of said transitional code
(Transl) into a transitional code data stream.
A method for decoding encoded video data according to
Claim 8, 9 or 10 when dependent on Claim 2, and further comprising

the step of determining, from the value of said two bit
transitional code (Transl), the location within said four

successive pixel elements of said color transition.
A method for decoding encoded video data according to
Claim 11 and further comprising the step of determining that said

color transition is located between said first and second pixel
elements if said transitional code (Transl) has a value of 0,

determining that said color transition is located between said
second and third pixel elements if said transitional code (Transl)

has a value of 1,, determining that said color transition is
located between said third and fourth pixel elements if said

transitional code (Transl) has a value of 2 and determining that
said color transition is located after said fourth pixel element

if said transitional code (Transl) has a value of 3.
An apparatus for decoding encoded video data 
comprising:


means (40) for deformatting encoded video data into a
five bit luminance component (Yprime) for each of four

successive pixel elements, a first five bit chrominance
component (Uprime) for said four successive pixel elements

and a second five bit chrominance component (Vprime) for said
four successive pixel elements;
means (42) for differentially decompressing said
deformatting five bit components (Yprime, Uprime, Vprime)

into eight bit components (Yout, Uout, Vout); and
means (20) for converting said differentially
decompressed luminance and chrominance components (Yout,

Uout, Vout) into corresponding red, green and blue components
(R, G, B).
An apparatus for decoding encoded video data according
to Claim 13 and further comprising:


means (42) for determining the location of a color
transition within said four successive pixel elements;
means (160) for replacing said first and second eight
bit chrominance components (Uout, Vout) with interpolated

first and second eight bit chrominance components for said
pixel element preceding said color transition.
An apparatus for decoding encoded video data according
to Claim 14, wherein said deformatter means (40) further comprises

means (68, 74) for deformatting encoded video data into a two bit
transitional code (Transl) for said four successive pixel 

elements.
An apparatus for decoding encoded video data according
to Claim 15, wherein said means (42) for determining the location

of a color transition within said four successive pixel elements
further comprises a transition state machine (118) connected to

receive said two bit transitional code (Transl) from said
deformatter means (40), said transition state machine (118)

determining the location of said color transition from said
received two bit transitional code (Transl).
An apparatus for decoding encoded video data according
to Claim 16, wherein said deformatting means (40) further

comprises means (50, 52 ... 78, 80) for extracting a five bit
luminance component (Yprime) for a first one of said four

successive pixel elements, two bits of a first five bit
chrominance component (Uprime) for said four successive pixel

elements and one bit of a two bit transitional code (Transl) from
a first byte of encoded video data, a five bit luminance component

(Yprime) for a second one of said four successive pixel elements
and three bits of said first five bit chrominance component

(Uprime) for said four successive pixel elements from a second
byte of encoded video data, a five bit luminance component

(Yprime) for a third one of said four successive pixel elements,
two bits of a second five bit chrominance component (Vprime) for

said four successive pixel elements and one bit of said two bit
transitional code (Transl) from a third byte of encoded video

data, and a five bit luminance component (Yprime) for a fourth one 
of said four successive pixel elements and three bits of said

second five bit chrominance component (Vprime) for said four
successive pixel elements from a fourth byte of encoded video

data.
</CLAIMS>
</TEXT>
</DOC>
