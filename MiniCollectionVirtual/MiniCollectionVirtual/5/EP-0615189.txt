<DOC>
<DOCNO>EP-0615189</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Memory storage method and control device
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1202	G06F1202	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F12	G06F12	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A memory storage method used in a memory storage 
control device for storing data cells (DC) in memory 

locations (ML) of a memory (MEM) is presented. The memory 
locations (ML) are grouped in predetermined distinct groups 

(S1/SN) with respective cyclically ordered group addresses 
(SA1/SAN). The data cells (DC) have respective cell 

identifiers (ID) corresponding to respective group addresses. 
The method includes for each data cell (DC) to be stored the 

steps of: 

allocating the corresponding group address (SAM) to its 
cell identifier (ID); 
starting with the group (SM) with the corresponding group 
address (SAM) and in said cyclic order allocating 

respective predetermined group filling levels 
(PV1,PV2,...) to the groups (S1/SN) and performing an 

iterative investigation process, each phase thereof 
comprising the steps of comparing an actual filling level 

of the group investigated with the predetermined group 
filling level allocated thereto, and deciding in function 

of the result thereof whether the data cell has to be 
stored in a free memory location of this group or a 

following group has to be investigated during a following 
phase of said process, the iterative process being 

finished when either said free memory location is found 
or a predetermined number of groups is investigated. 
 
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
ALSTHOM CGE ALCATEL
</APPLICANT-NAME>
<APPLICANT-NAME>
ALCATEL
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
DOBBELAERE PHILIPPE GUILLAUME
</INVENTOR-NAME>
<INVENTOR-NAME>
DOBBELAERE, PHILIPPE GUILLAUME
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a memory storage
method for storing data cells in memory locations of a
memory.Such a method generally intends to store the data
cells in memory in order to be able to find them back
afterwards through the use of an address identifying the data
cell. This address may for instance be a part of the data
cell, whilst the rest of the data cell may contain
information searched for. In order to be able to perform a
fast search in memory one generally does not simply store
successively arriving data cells in successive memory
locations of the memory since this requires a so-called
sequential search to find back any data cell, thereby
introducing a relatively long search time. Such sequential
search techniques are described e.g. in the book 'The art of
computer programming, Volume 3 / Sorting and Searching' by D.
E. Knuth, Addison-Wesley, 1973, pp. 393 - 402. Instead, in
order to decrease the search time one may apply a so-called
search and insertion algorithm, which is an algorithm based
on a sorted list of data cells. This sorted list may be
obtained by reordering the data cells each time a new data
cell is stored. However, this reordering operation introduces
a significant time delay each time a data cell is stored.
Another possibility is to provide a so-called linked list
indicating the order of the stored data cells. In this case,
the time delay introduced each time a data cell is stored is
somewhat diminished with respect to the previous solution as
no actual reordering of stored data cells occurs, but
additional memory is needed to store the linked list. In both
cases so-called binary search and similar techniques with a
reduced search time may be applied. The latter techniques and
other ones for storing data cells are described e.g. on pp.
80 - 102 of the already mentioned book, whereas the latter 
search techniques are described e.g. on pp. 406 - 419 (and following) thereof.Another storage allocation is described in "IBM Journal of research and
development, vol. 17 nÂ° 2 , March 1973, New York US, pages 106 - 114 : Van
Der Pool : Optimum allocation for a File with Open Addressing". This document
discloses a method of locating stored records in a storage that is divided into
physical blocks called buckets. A number of records of a file cannot be stored in
the bucket to which they were assigned. Several methods can be used to store
these overflow records. An overflow record from a bucket with address a is stored
in the bucket with address a+d, where d is the smallest
</DESCRIPTION>
<CLAIMS>
Memory storage method for storing data cells (DC) in memory
locations (ML) of a memory (MEM), said memory locations (ML) being grouped in

predetermined distinct groups (S1/SN) having respective group addresses
(SA1/SAN), said data cells (DC) being identified by respective cell identifiers (ID)

to which respective ones of said group addresses correspond, characterized in that
said groups (S1/SN) are ordered in a cyclic order and that said method includes

for each data cell (DC) to be stored the steps of:

allocating the corresponding one (SAM) of said group addresses (SA1/SAN) to
the cell identifier (ID) of said data cell (DC);
allocating to said groups (S1/SN) in said cyclic order and starting with the one
group (SM) having said one group address (SAM) respective predetermined

group filling levels (PV1,PV2,...); and
performing an iterative investigation process on said groups in said cyclic order
and starting with said one group (SM), each phase of said process

comprising the steps of:

a) comparing an actual filling level of the group investigated with the
predetermined group filling level allocated thereto, and
b) deciding in function of the result of said comparison whether said
data cell has to be stored in a free memory location of this group or whether

a following group has to be investigated during a following phase of said
process, said predetermined group filling levels being determined in such a

way as to decrease the probability upon storage of said data cell (DC), whose
cell identifier (ID) corresponds to said one group (SM) having said one group

address (SAM), in a free memory location of said one group (SM).
Method according to claim 1, characterized in that said iterative process is
finished when either said free memory location is found or a predetermined

number of groups is investigated, said predetermined number being equal to the
number of said predetermined group filling levels. 
Method according to claim 1, characterized in that said data cell (DC) is
stored in said free memory 

location when said actual filling level is less than said predetermined group filling
level, whereas otherwise a following group is investigated.
Method according to claim 3, characterized in that said groups (S1/SN)
each have a same number (32) of memory locations (ML), and that said

predetermined group filling levels (PV1,PV2,...) form a monotonic increasing
sequence of integer values.
Method according to claim 4, characterized in that a first predetermined
group filling level (PV1) is less than said same number (32), whereas its second

and next predetermined group filling levels (PV2,...) are equal to said same
number (32).
Method according to claim 1, characterized in that in each of said groups
(S1/SN) the data cells are ordered according to their cell identifier, and that upon

said data cell (DC) being stored in said free memory location, the data cells of the
corresponding group are again ordered according to their cell identifiers.
Method according to claim 1, characterized in that a linked list is
associated to each of said groups (S1/SN) indicating the numerical order of the

data cells stored therein, and that said linked list is updated upon said data cell
(DC) being stored in said free memory location.
A memory storage control device for storing data cells (DC) in memory
locations (ML) of a memory (MEM) wherein said memory locations are grouped in

predetermined distinct groups (S1/SN) having respective group addresses
(SA1/SAN), said data cells (DC) identified by respective cell identifiers (ID) to which

respective ones of said group addresses correspond, characterized in that said
memory storage control device includes :


group order means (SOR) to indicate a cyclic order to said groups (S1/SN);
and in order to store a data cell (DC) further includes : 
first allocating means (ATR) to allocate a corresponding one (SAM) of said
group addresses (SA1/SAN) to the cell identifier (ID) of said data cell (DC) and
second allocating means to allocate to said groups (S1/SN) in said cyclic

order, starting with said group (SM) having said corresponding one group address
(SAM), respective predetermined filling levels (PV1, PV2, ...); and further includes

in order to perform an iterative investigation process on said groups in said cyclic
order thereby starting with said one group (SM):
comparator means (COMP) to compare an actual filling level of an
investigated group with its predetermined group filling level, thereby providing a

result, and to decide in function of said result whether said data cell has to be
stored in a free memory location of this group or whether a following group has to

be investigated during a following phase of said process; and

that said predetermined group filling levels is determined in such a way as to
decrease the probability upon storage of said data cell (DC), whose cell identifier

(ID) corresponds to said one group (SM) having said one group address (SAM), in
a free memory location of said one group (SM).
The memory storage control device according to claim 8, characterized in
that said first allocating means (ATR) is constituted by an identifier translator (ATR)

to translate the cell identifiers of said data cells into said group addresses.
The memory storage control device according to claim 8, characterized
in that

said memory storage control device further includes:

a group register (SR) to store said group address of the group investigated; and
a vector means (VECT) to provide said predetermined group filling level allocated
to said group investigated at its output; and
a measuring means (MEAS) whereto said group address of said group
investigated is input and to provide said actual filling level of said group

investigated, and
 
that said comparator means (COMP) indicates whether said predetermined group

filling level is greater than said actual group filling level or not; and

that said memory storage control device further includes : ,

incrementing means (INCR) to adapt under the control of said comparator
means output the contents of said group register (SR); and
storage means (STO) to store under the control of said comparator output said
data cell (DC).
Memory storage control device according to claim 9,
characterized in that said identifier translator (ATR) includes a memory device in

which the group addresses of said groups (S1/SN) are stored.
Memory storage control device according to claim 9,
characterized in that said identifier translator (ATR) includes a processing means

performing a predetermined function on said cell identifier (ID) in order to obtain
said group address.
</CLAIMS>
</TEXT>
</DOC>
