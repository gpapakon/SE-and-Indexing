<DOC>
<DOCNO>EP-0618728</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Synchronization of audio/video information
</INVENTION-TITLE>
<CLASSIFICATIONS>H04N592	H04N724	H04N732	H04N732	H04N756	H04N5926	H04N592	H04N504	H04N752	H04N750	H04N752	H04N750	H04N5926	H04N724	H04N504	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04N	H04N	H04N	H04N	H04N	H04N	H04N	H04N	H04N	H04N	H04N	H04N	H04N	H04N	H04N	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04N5	H04N7	H04N7	H04N7	H04N7	H04N5	H04N5	H04N5	H04N7	H04N7	H04N7	H04N7	H04N5	H04N7	H04N5	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A compressed video signal and a compressed audio signal decoding apparatus which 
including a local access unit counter intended for digital AV applications where access 

unit headers (e.g. frame headers, audio unit headers or other kind of data unit headers) 
may be lost or generated by storage media or transmission errors. In order to prevent a 

resulting AV sync error a value called "access unit count" is included in each 
elementary stream. With this value each decoder can detect lost or false access unit 

headers, and correct the AV synchronization. In order to support editing, an extra bit 
can be added to indicate discontinuity in the access unit count. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
SONY CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
SONY CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
VELTMAN MARKUS H
</INVENTOR-NAME>
<INVENTOR-NAME>
VELTMAN, MARKUS H.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to the field of digital
transmission or storage of audio and video information. More
particularly, this invention relates to a technique for
verifying the timing of multiplexed packetized audio and/or
video (A/V) information such as ISO's (International
Organization for Standardization) MPEG (Motion Pictures Expert
Group).The term "access unit" as used herein means either a
frame of video data or a batch of audio samples or a batch of
other data samples. In general, a decoder processes it's
"access units" and outputs decoded access units at regular
intervals. In the case of video, for example, this interval
is the picture rate, and for audio this is a constant integer
(equal to the number of audio samples in an audio access unit)
times the audio sampling rate. In the case of an ISO standard MPEG system application,
as defined for example in ISO document number 1-11172,
a "time stamp" indicating
the decoding time for an access unit, is included in the
multiplex syntax for multiplexed video and audio packets as
shown in FIGURE 1. These time stamps are included in the
multiplex syntax, i.e. in packet headers. A time stamp
indicates the decoding time of the first access unit header in
that packet. Since each packet can include multiple access
units, each access unit is not associated with a time stamp.Although multiplex applications use multiple decoders,
ISO's MPEG 1 system standard can also be applied in
applications that only have one decoder. In a fixed bit rate
(e.g. audio) application, perfect clocks do not exist,
therefore the digital storage media (or transmission) bit rate
and (depending on the sampling clock frequency error) the
decoder input bit rate vary. In such a system, the decoder
generally reads one access unit at a time. Furthermore, due
to the differences in the clocks, the transfer bit rate and
the decoder input bit rate do not identically match. A buffer
can be used to compensate for these differences. In the case
of video data, consecutive access units (i.e. frames) are
compressed, which depending on the picture content, results in
variable length compressed (VLC) access units. Consequently
the video decoder input bit rate has large variations and a
relatively large buffer is used.However, even if a buffer is used, ideal bit rates
generally do not exist and therefore "buffer errors" (and even
buffer overflow or underflow) can occur. Two methods are
generally used to prevent buffer overflow and underflow. With
one method (called Digital Storage Media
</DESCRIPTION>
<CLAIMS>
A decoder for a multiplexed signal, comprising:

a clock (118) producing a time reference;
a means (50) for separating a composite data stream into data units and data time
stamps, wherein said data time stamps are fewer than or equal in number to the data units;
a phase-locked loop (120, 122), receiving said time stamps and said time reference,
for comparing said time reference with said time stamps to output a timing signal when the

reference time equals a time stamp:
a data decoder (128, 130) receiving said data units and said timing signal,
associating one of the data units with each of the data time stamps, being that one of the

data units that, in the absence of the data time stamp, would be decoded closest in time, as measured
by the clock (118), to the value of the data time stamp, and decoding said data units in

synchronization with said timing signal, and means (240) for extracting an access unit
count from said data units and comparing said access unit count with a stored access unit

count (244) to verify that said decoder is operating in proper synchronization, wherein a
discontinuity bit is attached to the data units if successive access units do not have sequential access unit counts and the stored access unit count is re-initialized

every time the discontinuity bit is set.
The decoder of claim 1, further comprising:

a video timestamp buffer (104) receiving video time stamps from said separating
means (50).
The decoder of claim 1 or 2, further comprising:

an audio timestamp buffer (108) receiving audio time stamps from said separating
means (50).
The decoder of anyone of the claims 1 to 3, further comprising:

a video buffer (100) receiving video frames from said separating means (50).
The decoder of anyone of the claims 1 to 4, further comprising:

an audio buffer (102) receiving audio sample batches from said separating means
(50).
The decoder of anyone of the preceding claims, wherein said time reference is
indicative of an absolute time elapsed since a reference time.
The decoder of claim 6, wherein said clock (118) operates at 90 KHz.
The decoder of claim 1, wherein said multiplexed signal is an MPEG standard signal.
The decoder of claim 6, wherein said phase-locked loop (122) associates an audio time
stamp with the audio sample batch which is decoded closest in time, as measured by said

clock, to the value of said audio time stamp.
The decoder of claim 6, wherein said video phase-locked loop (120) associates a video
time stamp with the video frame which is decoded closest in time, as measured by said

clock, to the value of said video time stamp.
A method for decoding a multiplexed signal, comprising the following steps:

producing (118) a time reference, 
separating (50) a composite data stream into data units and data time stamps, wherein said
data time stamps are fewer than or equal in number to the data units,
receiving (120, 122) said time stamps and said time reference for comparing said time
reference with said time stamps to produce a timing signal when the reference time equals

a time stamp, and
receiving said data units and said timing signal to associate one of the data units with each
of the data time stamps, being that one of the data units that, in the absence of the data time stamp, would

be decoded closest in time, as measured by the time reference, to the value of the data time
stamp and to decode (128, 130) said data units in synchronization with said timing signal,

wherein

an access unit count is extracted from said data units and said access unit count is
compared with a stored access unit count to verify synchronization;

and

the stored access unit count is incremented each time a new access unit is received,
wherein a discontinuity bit is attached to the data units if successive access units do not have sequential access unit counts and the stored access unit count is re-initialized

every time the discontinuity bit is set.
The method of claim 11, further comprising the step of duplicating a video frame if
said access unit count for a video frame is larger than said stored access unit count.
The method of claim 11, further comprising the step of omitting a video frame if said
access unit count for a video frame is smaller than said stored access unit count.
The method of claim 11, further comprising the step of omitting an audio sample batch
if said access unit count for an audio sample batch is smaller than said stored access unit

count. 
The method of claim 12, further comprising the step of duplicating an audio sample
batch if said access unit count for an audio sample batch is larger than said stored access

unit count.
</CLAIMS>
</TEXT>
</DOC>
