<DOC>
<DOCNO>EP-0624838</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Apparatus and method for deinterleaving
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F778	G06F776	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F7	G06F7	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
This invention relates to an apparatus and method for implementing 
deinterleaving, in particular for a paging system. The memory 

elements of RAM are arranged into an array in such a manner that 
the number of elements in each row corresponds to the number of 

bits in a code word, and the number of rows corresponds to the 
number of code words. At a point before the memory, a series-parallel conversion is carried out, and each memory element has 

a multiplexed input so that the writing in the memory can be 
carried out row by row horizontally and the reading from the 

memory can be carried out vertically. If, for example, the 
memory has 30 x 9 elements, according to the invention 30 

addresses are required for the writing and 9 addresses for the 
reading, i.e. a total of 39 addresses instead of the 270 

addresses previously required. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
NOKIA MOBILE PHONES LTD
</APPLICANT-NAME>
<APPLICANT-NAME>
NOKIA MOBILE PHONES LTD.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
KUUSINEN TERO
</INVENTOR-NAME>
<INVENTOR-NAME>
KUUSINEN, TERO
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention relates to an apparatus and method for
deinterleaving, in particular for implementing deinterleaving in
a paging system.It is common practice in communication systems for a transmitter
to arrange the data bits to be transmitted into a different order
prior to their transmission. This is known as interleaving. The
advantage of such interleaving is that burst errors on the
transmission channel can be spread throughout the data. For
example, if the data consisted of a plurality of code words the
interleaving would temporally disperse the data bits representing
individual code words. Thus, only parts of a code word would be
affected by burst errors and thus error correction of such burst
errors is enhanced. Such interleaving has to be reversed or
undone at the receiver, and this is known as de-interleaving.A typical known example of a system using interleaving involves
the transmission of 30 bit code words. Groups of 9 code words
are interleaved and this results in 270 bit deep interleaving.
In this known example the most significant bit (MSB) of code word
0 is transmitted first, then the MSB of code word 1 etc. and
continuing sequentially through to the least significant bit
(LSB) of code word 8.The following array illustrates the form which the transmitted
data takes.
The bit array is formed by writing one code word at a time into
a memory column by column, and reading the memory row by row,
thus carrying out the interleaving. In this array, for
example, 428 stands for the 28th bit of the 4th code word.In the prior art, deinterleaving is generally performed using a
random access memory (RAM) equipped with a serial bus, since
the data is written into the RAM in one direction and read from
it in another, relative to the columns and rows of the RAM.If, for example, 8-bit words are used for loading the RAM, the
reading out is difficult to implement. If it is necessary to
use serial-form RAM, the number of memory addresses required is
equal to the number of memory elements, and in the present
embodiment this is 30 x 9 = 270. The state-of-the-art method
is very complicated and takes up a lot of the address space of
the RAM.GB 2160685 discloses a data reorganisation apparatus for video
signal processing. The apparatus includes a dual buffer
arrangement in which data is written into each buffer by rows
and is read out by columns.US 5,063,533 discloses a reconfigurable deinterleaver where the
memory array is configured with predetermined parameters to
define the number and length of the interleaved
</DESCRIPTION>
<CLAIMS>
Apparatus for deinterleaving data received by a receiver comprising a memory
means (25,26,27) including memory elements (6...14,15...24) having respective

multiplexed inputs and outputs, and arranged in an array of columns and rows, the output of a memory element in a column being coupled to one of
said multiplexed inputs of the next memory element in said column, wherein the number

of columns corresponds to the number of code words input to the memory means (25,
26, 27) and wherein each row comprises a number of memory elements

corresponding to the number of bits in a code word input to the memory means (25,
26, 27), the memory means (25,26,27) having addressing means for writing data into

the memory means (25, 26, 27) row by row
through the other of said multiplexed inputs of said memory elements and for reading data from the memory

means (25, 26, 27) column by column wherein, data is written into the
memory means (25, 26, 27) by the addressing means in parallel into respective rows,

wherein the memory means (25, 26, 27) is used in a normal way until the last row has
been loaded, whereafter the memory means (25, 26, 27) is read sequentially column by

column by the addressing means, wherein the output of the memory means is
serialised, the arrangement being such that the number of memory addresses used by

the addressing means is the sum of the number of the rows and columns.
A method for deinterleaving data received by a receiver comprising RAM
including memory elements (6...14,15...24) having respective multiplexed inputs and outputs and

arranged in an array of columns and rows, the output of a memory element in a column being coupled to one of
said multiplexed inputs of the next memory element in said column, wherein the number of columns

corresponds to the number of code words input to the RAM (25, 26, 27) and wherein
each row comprises a number of memory elements corresponding to the number of

bits in a code word input to the RAM (25, 26, 27), the RAM (25,26,27) having
addressing means for writing data into the RAM (25, 26, 27) row by row

through the other of said multiplexed inputs of said memory elements and for
reading data from the RAM (25, 26, 27) sequentially column by column, said method comprising

sequentially selecting a row into which data is to be written,

enabling clock inputs of said memory elements of said row, 
clocking data into the memory elements of said row,
selecting a next row into which next data is to be written and deselecting said
row and continuing the above steps until the data has been loaded into the

RAM, the RAM being used in a normal way until the last row has been loaded,
whereby data is written into the RAM by the addressing means in parallel into

respective rows, and sequentially
selecting a column from which data is to be read,
enabling clock inputs of memory elements of said column,
clocking data from the memory elements of said column thereby forming a
serial output, and
selecting a next column from which data is to be read and deselecting said
column and continuing the above steps until the data has been read from the

RAM, wherein the RAM is read sequentially column by column by the
addressing means,
the arrangement being such that the number of memory addresses used by the
addressing means is the sum of the number of the rows and columns.
A method according to claim 2, wherein two RAMS are used in such a manner
that when one is being written into, reading out from the other takes place

simultaneously.
A method according to claim 2 or claim 3, wherein the selection of rows and
columns is implemented by setting address counters to zero before beginning

loading/unloading RAM thereafter the desired next row or column is obtained by
clocking the address counters one step forward.
</CLAIMS>
</TEXT>
</DOC>
