<DOC>
<DOCNO>EP-0637149</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method for establishing multicast virtual circuits
</INVENTION-TITLE>
<CLASSIFICATIONS>H04L1256	H04L1218	H04L1218	H04L1256	H04Q1104	H04Q1104	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04L	H04L	H04L	H04L	H04Q	H04Q	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04L12	H04L12	H04L12	H04L12	H04Q11	H04Q11	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A multicast connection arrangement is provided by which a 
source node may establish multicast virtual circuits to a group of 

destination nodes of an arbitrary-topology network using a single 
procedure, and may subsequently modify those circuits, i.e., add or 

delete destination nodes, with a single, related procedure. The 
arrangement includes a multicast setup packet for opening the multicast 

virtual circuits, the packet containing a multicast identifier field, a virtual 
circuit field and a destination field identifying a list of desired 

destination node addresses. The multicast setup packet may be also 
used to add destination nodes to the circuits, while a multicast delete 

packet is used to delete nodes from the circuits. When adding nodes to 
the multicast virtual circuits, a topology analysis process is provided to 

prevent the formation of an unstable network topology. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
ENTERASYS NETWORKS INC
</APPLICANT-NAME>
<APPLICANT-NAME>
ENTERASYS NETWORKS, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
HAWE WILLIAM R
</INVENTOR-NAME>
<INVENTOR-NAME>
PERLMAN RADIA J
</INVENTOR-NAME>
<INVENTOR-NAME>
HAWE, WILLIAM R.
</INVENTOR-NAME>
<INVENTOR-NAME>
PERLMAN, RADIA J.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to network systems and, more specifically, to 
multicast virtual circuits in arbitrary-topology networks. A computer network typically comprises a collection of interconnected nodes, 
such as computer systems and switches, which may, in turn, be connected through 
an irregular configuration of transmission lines, i.e., links. The switches are 
specialized computers used to connect two or more links. Data is exchanged among 
nodes of such an "arbitrary-topology" network by passing packets from switch to 
switch over the links. Specifically, when a packet arrives on an incoming link, the 
switch decides onto which of the outgoing links that packet will be forwarded. In a connection-oriented network, a virtual circuit is commonly established 
when exchanging packets between nodes of the network. The virtual circuit is a 
temporary logical path connection that requires a set up procedure to "open" the 
virtual circuit prior to transferring the data packets and a release procedure to "close" 
the circuit once the data transfer is complete. This obviates the need for effecting 
routing decisions for each data packet that is transferred between the nodes once the 
circuit is opened. For point-to-point communication, the set up procedure creates a virtual circuit  
 
by allocating certain switches and links in the network to establish the "best" route, 
according to conventional route configuration techniques, between a source node and 
a destination node. To illustrate, refer to Fig. 1A. Here, node A of network 10 
performs a set up procedure to open a virtual circuit route that encompasses the 
switches SA-D. This route is identified by a virtual circuit (VC) number, VC2, that 
is associated with node A's local switch SA. In order to ensure that data packets 
subsequently transferred from node A always follow this virtual circuit route to node 
D, each switch along VC2 maintains a forwarding table with entries indicating where 
to forward the data packets in accordance with the routing configuration results. Fig. 1B illustrates the forwarding tables 20a-d contained within the switches 
SA-D of the network 10. Each entry of the tables includes an incoming portion and 
an outgoing portion, with each portion including a port name and a VC number 
associated with that port. Each data packet transferred over the network contains a 
VC field identifying the open VC number on which it has arrived. Thus, when a 
packet is received at an incoming port of switch SC, that switch searches
</DESCRIPTION>
<CLAIMS>
A method for establishing a multicast virtual circuit between a source node (N) and 
a group of destination nodes (G1-3), for use in an arbitrary-topology network (30, 60) having nodes, switches and interconnecting 

links, said method comprising the steps of: 

creating a multicast setup packet (40, 50) at the source node (N) for transfer to the group of 
destination nodes (G1-3), said multicast setup packet (40, 50) containing a multicast identifer field (42, 52) 

for storing a unique multicast identifier value, a virtual circuit field (44, 54) and a destination 
field (46, 56) identifying the group of destination nodes (G1-3) receiving said multicast setup packet (40, 50), 

and 
allocating selected switches and interconnecting links of said network (30, 60) as 
elements of said multicast virtual circuits for receiving said multicast setup packet (40, 50), 

through generating entries (320) of a forwarding table (300, 600) located within an 
allocated switch (S
n
), said entries (320) containing routing information pertaining to 
outgoing parts (X2, X6) associated with the group of destination nodes (G1-3) 

contained within said destination field (46, 56) of said multicast setup packets 
(40,50) to open said multicast virtual circuit. 
The method of Claim 1 wherein said step of allocating comprises the steps 
of: 


forwarding said multicast setup packet (40, 50) to a first allocated switch (S
N
) of said 
multicast virtual circuits, said first allocated switch (S
N
) being associated with the source 
node (N) and said packet being received at an incoming port (X
1
) of said first allocated 
switch (S
N
); 
selecting at least one outgoing port (X
2
, X
6
) of said first allocated switch (S
N
) for transfer of 
said multicast packet (40, 50), each of the selected outgoing ports (X
2
, X
6
) providing a best route (VC7, VC17) to 
at least one of the group of destination nodes (G1, G2, G3); 
generating at least one copy of said multicast packet (40, 50) for each of the selected 
outgoing ports (X
2
, X
6
), and  
  

 
transferring each copy of said multicast packet (40, 50) through each of the selected 
outgoing ports (X
2
, X
6
) to one of a subsequent allocated switch (S
1
, S
2
, S
4
, S
5
) and the at least one of the 
group of destination nodes (G1, G2, G3). 
The method of Claim 2,
 
   whereby only said selected switches of said multicast virtual circuits need 

maintain routing information relating to the destination nodes (G1-3) in said forwarding 
table (300, 600). 
The method of Claim 3 wherein said step of generating at least one copy 
of said multicast packet (40,50) further comprises the steps of: 


updating said virtual circuit field of each copy of said multicast setup packet (40, 50) 
to contain a virtual circuit value associated with each selected outgoing port; and 
updating said destination field (46, 56) of each copy of said multicast setup packet to 
contain only those destination nodes receiving the copy of said packet. 
The method of Claim 4 wherein said step of generating entries (320) further 
comprises the step of marking said virtual circuit value as originating from the 

source node (N).  
 
The method of Claim 5 wherein said step of selecting comprises the steps 
of: 


determining if the incoming port is allocated to an open multicast virtual circuit 
having a multicast identifier value that matches said unique multicast identifier value 

stored in said multicast setup packet (40, 50). 
The method of Claim 6 wherein said step of selecting further comprises the 
steps of, if the incoming port is not allocated to an open multicast virtual circuit 

having a matching unique multicast identifier value: 

determining if there are any existing entries in said forwarding table associated 
with said unique multicast identifier. 
The method of Claim 7 wherein said step of selecting further comprises the 
steps of, if there are existing entries in said forwarding table (300, 600) associated with said 

unique multicast identifier: 

deleting said port marked as being from the source node (N) and establishing a 
multicast virtual circuit with the added incoming port. 
</CLAIMS>
</TEXT>
</DOC>
