<DOC>
<DOCNO>EP-0622728</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Region layout in a view on a graphical display screen
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F944	G06F314	G06F314	G06F1721	G06F944	G06F1721	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F3	G06F3	G06F17	G06F9	G06F17	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Disclosed is a method and apparatus for laying out a 
plurality of instances (180) of graphical objects within 

a view (100) displayed on a graphical display device 
(80). The view (100) contains one or more regions (110) 

into which the instances (180) may be placed. The placement 
is done by associating an attribute, parameter or 

variable (RegionProp) with the definition of each of the 
instances (180) of graphic objects. The attribute 

(RegionProp) defines into which of the regions (110) of 
the view (100) the instance (180) should be placed. 

Layout routines (200) are provided to extract the value 
of the attribute (RegionProp) from the definition of the 

instance (180) of the graphic object and to use it to 
associate the instance (180) with the region (110) in 

which it is to be displayed. The layout routines (200) 

then calculate an optimum display for all of the instances 
(180) within the region (110). 
Disclosed also is a method for moving the instances 
(180) of the graphic objects from one region (110) to 

another region (110). This involves changing the value 
of the attribute (RegionProp) and reordering the instances 

(180) within the regions (110). 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BURKHARDT PIT
</INVENTOR-NAME>
<INVENTOR-NAME>
FEIGEL ROY A
</INVENTOR-NAME>
<INVENTOR-NAME>
LAND JUTTA
</INVENTOR-NAME>
<INVENTOR-NAME>
WESTERMANN HERBERT DR
</INVENTOR-NAME>
<INVENTOR-NAME>
BURKHARDT, PIT
</INVENTOR-NAME>
<INVENTOR-NAME>
FEIGEL, ROY A.
</INVENTOR-NAME>
<INVENTOR-NAME>
LAND, JUTTA
</INVENTOR-NAME>
<INVENTOR-NAME>
WESTERMANN, HERBERT, DR.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention relates to graphical display apparatus
comprising means for generating views on a display
screen, said views comprising a plurality of graphic
objects.The invention also provides a method of laying out
graphic objects within a view displayed on the graphical
display apparatus.The IBM ScreenView product is a set of services which
can be installed on an operating system for developing
applications with a consistent user interface and for
running these applications. ScreenView essentially
consists of two parts:Runtime Service (RTS) which provide services to applications
at run time.Application Development Services (ADS) which support
programmers to develop various user interface types for
those applications which are consistent across all
applications.ScreenView version 1.1. is described in the following
publications:
ScreenView User's Guide (IBM Publications Number SC33-6451) ScreenView Application Developer's Guide (IBM Publications
Number SC33-6452)ScreenView Application Developer's Reference (IBM Publications
Number SC33-6453)The information contained therein is incorporated into
this patent by reference.When working with ScreenView, all the ScreenView applications
appear as a number of objects on which the end
user can perform certain actions. For example, when
configuring a computer system, the objects that would be
seen (so-called graphic objects) include processors,
disks and/or control units and the actions that may be
performed would include delete, connect and/or add.
ScreenView enables object sharing and eases interoperability
among applications. An example of such an application
is described in the IBM Technical Disclosure
Bulletin, vol 35, no 2, July 1992, pp 58-63 in an article
entitled "Graphical Definition of Configuration
Objects".The design of the end user interface for ScreenView
applications focuses on the objects which the end user
can view and manipulate. The end user interface specification
is programmed using a declarative language called
a user interface declaration (UID).A view in ScreenView is a representation of details of
an object, for example what the object contains, how it
is composed and/or what its properties are. Views allow
a user to look at details of an object and to manipulate
the object. When using a graphical display device, a
view could represent the picture displayed on the display
screen and the objects would be shown as icons on 
the display screen. The term "graphic objects" is often
used to describe the objects displayed on the graphical
display
</DESCRIPTION>
<CLAIMS>
An apparatus for displaying a plurality of graphic
objects within a view on a display, comprising:


a) means for defining a view having a plurality of
regions within which the graphic objects are to be

displayed;
b) means for associating each graphic object with a
particular region of the view to indicate the

region within which the graphic object is to be
displayed;
c) means for defining for each of said regions a
pattern for the positioning of graphic objects

within said region, said pattern being defined
without regard to the number of graphic objects

that may be associated with said region;
d) means for dynamically positioning the graphic
objects associated with each of said regions within

the region in accordance with the pattern defined
for said region, and
e) a display for displaying the view including the
graphic objects within the associated regions.
The apparatus of claim 1 further comprising means for
moving a graphic object associated with a first region

from the first region to a second region by associating
the graphic object with the second region.
The apparatus of claim 1 or 2, wherein each of said
defined patterns is selected from a plurality of

patterns.
A method of displaying a plurality of graphic objects
within a view on a display, comprising the steps of: 


a) defining a view having a plurality of regions
within which the graphic objects are to be

displayed;
b) associating each graphic object with a region of
the view to indicate the region within which the

graphic object is to be displayed;
c) defining for each of said regions a pattern for the
positioning of graphic objects within said region,

said pattern being defined without regard to the
number of graphic objects that may be associated

with said region;
d) dynamically positioning the graphic objects
associated with each of said regions within the

region in accordance with the pattern defined for
said region; and
e) displaying on the display the view including the
graphic objects dynamically positioned within the

associated regions.
The method of claim 4 further comprising the step of
moving a graphic object associated with a first region

from the first region to a second region by associating
the graphic object with the second region.
The method of claim 4 or 5 wherein each of said defined
patterns is selected from a plurality of patterns.
</CLAIMS>
</TEXT>
</DOC>
