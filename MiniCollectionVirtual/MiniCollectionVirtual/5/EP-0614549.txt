<DOC>
<DOCNO>EP-0614549</DOCNO> 
<TEXT>
<INVENTION-TITLE>
PROCEDURAL USER INTERFACE
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F906	G09B1900	G06F3033	G06F3048	G06F314	G06F3048	G06F944	G06F906	G06F314	G09B1900	G06F3023	G06F3033	G06F3023	G06F944	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G09B	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G09B	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G09B19	G06F3	G06F3	G06F3	G06F3	G06F9	G06F9	G06F3	G09B19	G06F3	G06F3	G06F3	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A simplified procedural user interface ("PUI") for controlling the operation of a computer (300), defined in terms of the steps or procedures required to do a given operation. The PUI acts as a graphical checklist that indicates to the user what has to be done and then controls the operation of the computer required to implement the operation. The PUI provides a linked icon representation of a user's task in a series of hierarchical panels (50). The linked icons (58, 60, 62) indicate the steps a user must go through to complete a task using the computer. The hierarchical panels on which the icons reside provide a means to logically group related task steps. The underlying concept is to simplify the computer operation by only presenting the capability required to do a particular task at a given time.
</ABSTRACT>
<APPLICANTS>
</APPLICANTS>
<INVENTORS>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a method for controlling
the operation of a digital computer, comprising a memory, a
visual display and user input means, said method for causing
to be performed a job which is structured as a series of
repeatable functions, comprising the following steps:
reading from memory a panel hierarchy file containing data
representing the graphic definitions of said job, icons,
hierarchy structure and panels to be generated during performance
of said job; anddisplaying a root panel on said visual display, said root
panel comprising one or more function icons representing said
functions, said function icons being serially linked so as
to allow an operator to optically recognize the serial structure
of the job.The invention relates further to a digital computer system,
comprising a memory, visual display, user data input means,
and a central processing unit (CPU) operatively connected to
said memory, said visual display and said user data input means,
said CPU comprising means for causing to be performed by said
computer system a job structured as a series of repeatable
functions, said means comprising:
means for displaying the functions comprised in said job
as a hierarchical series of linked icons on one or more display
panels which provide a graphical representation of the functions
comprised in the job; andmeans for causing the computer operations to navigate to
a particular display panel in response to activation of a
particular icon and to display said particular display panel.Such a method for controlling the operation of a digital
computer and such a digital computer system are known from WO-A-91/06050. This invention relates in general to providing a simplified
mechanism for controlling the operating of a computer
system.In the recent past, computer users have been required
to be both expert in their discipline as well as in the
operation and control of the computer used to execute the
discipline. That is, the user has been required to know
both what has to be done and how to use the computer tools
to do what has to be done. The problems have been compounded
as computer systems have increased in sophistication
and power.These problems associated with the desktop computing
sophistication have been recognized since the early 1980's.
The technical focus of solutions directed to this problem
have been to make the computer easier to use. This has
been by making the operation consistent across various
applications. Apple Computer's "Macintosh" graphical user
interface,
</DESCRIPTION>
<CLAIMS>
A method for controlling the operation of a digital
computer (300) comprising a memory (308), a visual display (304)

and user input means (306), said method for causing to be
performed a job which is structured as a series of repeatable

functions, comprising the following steps:

reading (106) from memory (108) a panel hierarchy
file containing data representing the graphic definitions

of said job, icons (52, 54, 56, 60; 58, 62), hierarchy
structure and panels to be generated during performance

of said job;
displaying (108) a root panel on said visual display
(304), said
 root panel comprising one or more function
icons (58, 62) representing said functions, said function

icons (58,62) being serially linked so as to allow an operator
to optically recognize the serial structure of the job;

   characterized by

said function icons being task icons (58, 62),
said functions being tasks representing a sequence
of operations to be automatically executed when the task

icon (58, 62) is activated (114) by the user; and

   in response to activation (114) of a particular task
icon (58, 62) by the user, automatically executing the

predetermined sequence of operations (120, 122) associated
with that task icon (58, 62) and automatically managing

a flow (124, 128) of data in accordance with a data dependency between tasks represented by
sequentially activated linked task icons (58, 62). 
The method according to claim 1, characterized by
the step of displaying on said root panel one or more navigation

icons (52, 54, 56, 60), each representing a predetermined panel
in turn represented by data comprising said panel hierarchy

file, and further comprising the step of reading (106) said
file in response to activation of said navigation icon (52,

54, 56, 60) by the user and displaying (108) said predetermined
panel.
The method according to claim 1 or claim 2, characterized
in that said step of automatically executing said

sequence of operations (120, 122) comprises:

reading (118) said panel hierarchy file and retrieving
executable instructions to be automatically executed;
executing (120, 122) said executable instructions;
and
processing (124, 126, 128) data in accordance with
predetermined processing instructions for said particular

activated task icon (58, 62).
The method according to any of the preceding claims,
characterized in that said step of automatically executing said

sequence of operations (120, 122) comprises, for at least one
task icon (58, 62):


retrieving (124) from memory (308) data processed
from operations initiated in response to a previous

activation of another of said task icons (58, 62);
processing (126) said retrieved data in accordance
with predetermined processing instructions; and
storing (128) said processed data in memory.
A digital computer system (300) comprising a memory
(308), visual display (304), user data input means (306), and 

a central processing unit (CPU) (302) operatively connected
to said memory (308), said visual display (304) and said user

data input means (306), said CPU (302) comprising means for
causing to be performed by said computer system (300) a job

structured as a series of repeatable functions, said means
comprising:


means for displaying the functions comprised in said
job as a hierarchical series of linked icons (52, 54, 56,

60; 58, 62) on one or more display panels which provide
a graphical representation of the functions comprised in

the job; and
means for causing the computer operations to navigate
to a particular display panel (50) in response to activation

of a particular icon (52, 54, 56, 60) and to display said
particular display panel (50);

   characterized by

said functions being tasks representing a series
of operations to be automatically executed,
said linked icons (52, 54, 56, 60; 58, 62)
comprising navigation icons (52, 54, 56, 60) and task

icons (58, 62), the navigation means operating in response
to activation of said navigation icons (52, 54, 56, 60),

and

   means for causing a task to be executed in response
to activation of a particular task icon (58, 62), and

automatically managing (124, 128) a flow of data in accordance with a data dependency between
tasks represented by sequentially activated linked task icons

(58, 62).
The system according to claim 5, characterized by
means (302) for storing a panel hierarchy file in memory (308),

said file containing data representing graphic definitions of
said job, said icons (52, 54, 56, 60; 58, 62) and panels (50) 

generated during execution of said method, and wherein said
means for causing predetermined computer operations (120, 122)

to be initiated in response to activation of a particular task
icon (58, 62) comprises means for reading (118) said panel

hierarchy file, means for retrieving (120, 122) executable
instructions to be automatically executed, means for executing

said executable instructions, and means for processing (124,
126, 128) data in accordance with predetermined processing

instructions for said particular activated task icon (58, 62).
The system according to claim 5 or claim 6, characterized
in that said means for causing predetermined computer

operations (120, 122) to be initiated in response to activation
of a particular task icon (58, 62) comprises, for at least one

such task icon (58, 62), means for retrieving (124) data
processed from operation initiated in response to a previous

activation of another of said task icons (58, 62), means for
processing (126) said retrieved data in accordance with said

predetermined processing instructions, and means for storing
(128) said processed data.
The system according to any of claims 5 - 7, characterized
by means for storing a panel hierarchy file in memory

(308), said file containing data representing graphic definitions
of said task, said icons (52, 54, 56, 60; 58, 62) and panels

(50) generated during execution of said method, and wherein
said means for causing said computer operations to navigate

to a particular display panel (50) in response to activation
of particular navigation icons (52, 54, 56, 60) comprises means

for reading (106) said panel hierarchy file and means for
displaying (108) on said computer display (304) said particular

display panel (50).
</CLAIMS>
</TEXT>
</DOC>
