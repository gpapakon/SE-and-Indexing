<DOC>
<DOCNO>EP-0622729</DOCNO> 
<TEXT>
<INVENTION-TITLE>
A user interface builder for a user interface server.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3048	G06F3048	G06F314	G06F314	G06F906	G06F906	G06F944	G06F944	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F3	G06F3	G06F9	G06F9	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The present invention relates generally to building or editing 
of user interfaces for computer systems. The user 

interfaces created and edited are independent of any 
particular windowing system and do not need to be 

compiled to use. The user interface implementation can easily 
be ported from one system to another. The user 

interfaces are stored in a display object store and can be 
utilized by applications via a user interface server. 
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
OLDFIELD WILLIAM T
</INVENTOR-NAME>
<INVENTOR-NAME>
SCOTT CHRIS
</INVENTOR-NAME>
<INVENTOR-NAME>
TOLAND BARBARA
</INVENTOR-NAME>
<INVENTOR-NAME>
WHITE RONALD B
</INVENTOR-NAME>
<INVENTOR-NAME>
WIERWILLE ROBERT L
</INVENTOR-NAME>
<INVENTOR-NAME>
WISS RICHARD
</INVENTOR-NAME>
<INVENTOR-NAME>
OLDFIELD WILLIAM T
</INVENTOR-NAME>
<INVENTOR-NAME>
SCOTT CHRIS
</INVENTOR-NAME>
<INVENTOR-NAME>
TOLAND BARBARA
</INVENTOR-NAME>
<INVENTOR-NAME>
WHITE RONALD B
</INVENTOR-NAME>
<INVENTOR-NAME>
WIERWILLE ROBERT L
</INVENTOR-NAME>
<INVENTOR-NAME>
WISS RICHARD
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present application is related to application serial 
number 08/049 697 filed on 16 April 1993, entitled "Dynamic 
Sharing of User Interfaces" by inventors R. Wiss and J. Stucka 
(Docket number BT 9-92-023), incorporated 
herein by reference. The present application is also related 
to application serial number 08/049 700 filed on 
16 April 1993, entitled "User Interface Server" by inventors 
R. Wiss, W. Oldfield, and R. Wierwille (Docket number BT9-92-024), 
incorporated herein by reference. This invention relates generally to building or editing of 
user interfaces for computer systems. In particular the 
interactive building and editing of graphical user interfaces. An application interacts with a user via a user interface. A 
graphical user interface (GUI) allows a user to 
interact with a computer using graphics, images, data and text 
together with some form of pointing device. The 
GUI is an improvement over the traditional text display and 
alphanumeric keyboard input device. One of the 
more popular pointing devices used by a GUI is the mouse. The 
mouse input device complements the keyboard 
which can be used for traditional text input and display. The 
GUI's graphical images are chosen to be intuitive 
for ease of use, such as a push-button labeled with the image 
of a file cabinet to denote the action of saving a 
file. Individual components of the graphical user interface, 
such as a particular window or a push-button, are  
 
selected by using the mouse or any other supported pointing 
device. Other pointing devices include tablets, touch 
screen, touch screen overlays, track balls, joy sticks, light 
pens, thumb wheels etc. A window management system provides many of the important 
features of modern user computer interfaces.
 
A window management system allows multiple applications to 
interact with the use r on a single computer 
display, and provides low level functions for the application 
to display data an d collect input from the user. The 
window management system permits application programs to show 
results in different areas of the display, to 
resize the screen areas in which those applications are 
executing, to pop-up and to pull-down menus. The 
window management system is a resource manager in much the 
same way that an operating system is a resource 
manager, only the types of resources differ. The window 
management system allocates the resources of screen 
area to various applications that seek to use the screen and 
then assists in man aging these screen areas so
</DESCRIPTION>
<CLAIMS>
In a data processing system which includes a 
computing means, a memory means, a display means, 

input means interconnected by a system bus, 
comprising, 

a display object store in the memory means which 
contains a plurality of user interfaces, wherein 

each user interface contains a plurality of 
hierarchically related user interface components; 

a interactive editor means in the memory means coupled to 
the display object store, said interactive editor 

having a primary window containing a main menu, a status 
line, a user interface component creation control 

panel and a user interface component hierarchy display 
area, displayed in a firs t portion of the display means, 

the interactive editor means responsive to a initial 
developer selection of a user interface, retrieves 

the user interface from the display object store and 
loads the user interface into a working memory area, 

displays a hierarchical representation of the 
components of the retrieved user interface in the 

user interface component hierarchy display area, 
displays a WYSIWYG representation of the user 

interface in a second portion of the display means, 
the interactive editor means responsive to one or more 

editing commands input by the developer using the 
input means, so that for each said editing command 

the user interface in the working memory area is 
modified,

 
said editing command causing updating of the user 

interface component hierarchy display area and the 
WYSIWYG representation of the user interface in the 

second portion of the display means to reflect the 
modifications; and 

storing said modified user interface in the display 
object store when the developer is finished editing. 
The system in claim 1 wherein the interactive editor 
means is coupled to a win dow management system such 

that the window management system controls 
displaying on the display means. 
The system in claim 1 wherein the interactive 
display means also displays a list of resource names 

and associated resource values for a component 
selected by the developer in a third portion of the 

display means, and were the editing commands permit 
modification of the resource values selected from 

the list. 
A system for the interactive editing of a user 
interface, comprising: 


a) a computer having a display and stored tasks 
wherein the appearance of said user interface and 

method for manipulation are defined by a hierarchy 
of user interface components each component having 

associated resources, 
b) an interactive display editor for defining the 
hierarchy of user interface components and their 

associated resource values, 
c) the interactive display editor storing the defined user 
interface consisting of the hierarchy of user 

 
interface components and their associated resources 

values in a display object store, and 
d) user interface server using said user interface as 
stored in the display object store to render said 

user interface upon the display and enable user 
interaction with said user interface . 
An interactive method of editing a window system 
independent user interface in a computer system 

which includes a computing means, a memory means, a 
display means, input means interconnected by a 

system bus, the user interface being represented by 
a plurality of hierarchically related user interface 

components, each component having a plurality of 
resources the method comprising the steps of: 

retrieving a first user interface from a display object 
store in the memory means; 

displaying in a first window one or more editor 
commands; 

displaying in a second window a hierarchical 
representation of the user interface components of 

the first user interface; 
displaying in a third window a WYSIWYG 

representation of the user interface; 
editing the user interface in response to editing 

commands selected by a developer in the first 
window; 

storing the edited user interface in the display 
object store. 
An interactive method of creating a window system 
independent user interface in a computer system 

which includes a computing means, a memory means, a 
display means, input means interconnected by a 

system bus, the user interface being represented by 
 

a plurality of hierarchically related user interface 
components, each component having a one or more 

resources, the method comprising the steps of: 

a) displaying in a first portion of the display means, a 
primary window containing a main menu, a status 

line, a user interface component creation control 
panel and a user interface component hierarchy 

display area; 
b) creating a active user interface hierarchy in the 
memory means having a root user interface component 

and displaying said root user interface component as a 
symbol in the user inter face component hierarchy 

display area, where the root user interface component is 
designated a active component; 
c) displaying a WYSIWYG representation of the active user 
interface hierarchy in a second portion of the 

display means; 
d) adding a user interface component to the active user 
interface hierarchy, as a child of the active component, 

when a developer selects a user interface component type 
from the user interface component creation control panel; 
e) updating the user interface component hierarchy 
display area to display the added user interface 

component as a symbol with a interconnection symbol to 
the active component; 
f) updating the WYSIWYG representation of the active user 

interface hierarchy in the second portion of the 
display means; 
g) repeating steps d) through f) until the developer has 
added all components of the user interface; 
h) storing the user interface represented by the active 
user interface hierarchy in a display object store. 
The method of claim 6 where in step e) the added 
user interface component is designated the active 

component. 
The method of claim 6 wherein the developer 
designates the active component before selecting the 

user interface component type, where the designation 
is accomplished by the developer selecting the 

symbol in the user interface component hierarchy 
display area associated with the active component to 

be designated. 
The method of claim 6 wherein a component resource 
list having a resource name and an associated 

resource value is displayed for the active component 
in a third portion of the display means said 

resource list: 
permitting the developer to select resources and 

modify the value of the selected resource for the 
active component in the memory means, and in 

response to such modification updating the user 
interface component hierarchy display area and the 

WYSIWYG representation of the active user interface 
hierarchy on the display means to reflect the 

modified resource value. 
The method of claim 9 wherein in response to the 
developer selecting a resource a resource editor 

associated with the resource is invoked to allow the 
developer to interactively modify the resource 

value. 
An interactive method of creating a window system 
independent user interface in a computer system 

which includes a computing means, a memory means, a 
display means, input means interconnected by a 

 
system bus, the user interface being represented by 

a plurality of hierarchically related user interface 
components, each user interface component having a 

one or more associated resources, the method 
comprising the steps of: 


a) displaying in a first portion of the display means, a 
primary window containing a main menu, a status 

line, a user interface component creation control panel 
and a user interface component hierarchy display area; 
b) creating a active user interface hierarchy in the 
memory means having a root user interface component 

and displaying said root user interface component as a 
symbol in the user inter face component hierarchy 

display area, where the root user interface component is 
designated a active component, displaying a 

WYSIWYG representation of the active user interface 
hierarchy in a second portion of the display means 

displaying a list of resource names and associated 
resource values for the root component in a third 

portion of the display means; 
c) adding a user interface component to the active user 
interface hierarchy, as a child of the active 

component, when a developer selects a user interface 
component type from the user interface component 

creation control panel, updating the user interface 
component hierarchy display area to display the added 

user interface component as a symbol with a 
interconnection symbol to the active component, and 

updating the WYSIWYG representation of the active user 
interface hierarchy in the second portion of the display 

means to reflect the added user interface component; 
d) designating the added user interface component the active 
component and displaying the list of resource 

 
names and associated resources values for the active 

component in the third portion of the display means; 
e) permitting the developer to change a resource value in 
memory associated with the active component by a 

resource editing means; said resource editing means 
causing the updating of the WYSIWYG representation of 

the active user interface hierarchy, the active component 
in the user interface component hierarchy display 

area, the associated resource value in the third portion 
of the display means to reflect the changed resource 

value; 
f) repeating steps c) through e) until the user interface is 
completed; 
g) storing the user interface represented by the active user 
interface hierarchy in a display object store. 
An interactive method of editing a window system 
independent user interface in a computer system 

which includes a computing means, a memory means, a 
display means, input means interconnected by a 

system bus, the user interface being represented by 
a plurality of hierarchically related user interface 

components, each user interface component having a 
one or more associated resources, the method 

comprising the steps of: 

a) displaying in a first portion of the display means, a 
primary window containing a main menu, a status 

line, a user interface component creation control panel 
and a user interface component hierarchy display area; 
b) retrieving a user interface from a display object store, 
in response to a developer selection in the primary 

window; 
c) creating a active user interface hierarchy in the memory 
means from the retrieved user interface, 

displaying a hierarchical representation the components 
of the active hierarchy in the user interface component 

hierarchy display area, displaying a WYSIWYG 
representation of the active user interface hierarchy in 

a second portion of the display means, displaying a list 
of resource names and associated resource values for the 

root component in a third portion of the display means; 
d) editing the active user interface hierarchy in the memory 
means in response to developer selections, 

updating the user interface component hierarchy display 
area, the WYSIWYG representation of the active user 

interface hierarchy in the second portion of the display 
means, and the list of resource names and associated 

resource values in the third portion of the display 
means, to reflect the editing; 
e) storing the user interface represented by the active user 
interface hierarchy in a display object store after 

the developer has completed editing the active 
hierarchy. 
</CLAIMS>
</TEXT>
</DOC>
