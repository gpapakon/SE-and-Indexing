<DOC>
<DOCNO>EP-0639808</DOCNO> 
<TEXT>
<INVENTION-TITLE>
METHOD FOR DEBUGGING SEQUENCE PROGRAM
</INVENTION-TITLE>
<CLASSIFICATIONS>G05B1905	G06F1132	G05B1905	G05B2302	G05B2302	G05B19042	G05B1904	G05B19048	G05B19048	G06F1132	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G05B	G06F	G05B	G05B	G05B	G05B	G05B	G05B	G05B	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G05B19	G06F11	G05B19	G05B23	G05B23	G05B19	G05B19	G05B19	G05B19	G06F11	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method for 
debugging a sequence 

program of a flowchart 
type, by which the temporal 

flow of steps can be 
easily grasped. In the time 

display column (71), the 
order of times sampled 

at given intervals (8 ms), 
is displayed. In the step 

number display column (72) 
the numbers of the steps 

which are executed at the 
timings are displayed. By 

watching the data display 
screen (70), it is possible, 

for exemple, to know that 
the steps (ST09, ST10, 

and ST11) which branch 
in parallel require the 

sampling periods (1, 2, 
and 4), or 8 ms, 16 ms, 

and 32 ms for execution, 
respectively. Thus it is clear 

at a glance that the speed 
of execution of the parallel 

branching is determined as 
a whole by the step (ST11). 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
FANUC LTD
</APPLICANT-NAME>
<APPLICANT-NAME>
FANUC LTD.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
ONISHI YASUSHI
</INVENTOR-NAME>
<INVENTOR-NAME>
SATO KAZUO
</INVENTOR-NAME>
<INVENTOR-NAME>
TANAKA KUNIO
</INVENTOR-NAME>
<INVENTOR-NAME>
ONISHI, YASUSHI
</INVENTOR-NAME>
<INVENTOR-NAME>
SATO, KAZUO
</INVENTOR-NAME>
<INVENTOR-NAME>
TANAKA, KUNIO
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a system for
debugging a sequence program which is to be executed by a
programmable controller (PC), and more particularly to a
system for debugging a sequence program which is generated
by flowcharting.Sequence programs to be executed by a PC may be expressed
by logic descriptions, ladder diagrams, etc.
Flowcharting is advantageous as it makes an overall flow of
work easy to understand. A flowchart represents a
sequential process step by step. One typical example of
flowchart is a sequential function chart (SFC). However, a
program representative of specific operation in each step is
expressed by logic descriptions, ladder diagrams, etc.FIG. 3 of the accompanying drawings shows a specific
example of a sequence program which is generated according
to flowcharting. The sequence program shown in FIG.
3 is composed of a total of 14 steps ST01 âˆ¼ ST14 following
an initial step ST00. In a selective branch section 51
following the execution of the step ST01, either one of the
steps ST02, ST03, ST04 is selected depending on the executed 
result of the step ST01. For example, if the step ST04 is
selected and executed, then the step ST07 is executed, after
which control is transferred to the step ST08.In a parallel branch section 52 following the
execution of the step ST08, the steps ST09, ST10, ST11 are
executed at the same time the execution of the step ST08
ends. Since these steps ST09, ST10, ST11 and the next steps
ST12, ST13, ST14 have different execution times, the
respective routes end at different times. When this happens,
one of the steps ST12, ST13, ST14 which ends at first waits
for the other steps to end, and then control proceeds to a
next step (end step 53 in FIG. 3) at the time the last one
of the steps ST12, ST13, ST14 ends.One major process of debugging a generated
sequence program is to reproduce varying states of signals
which are traced during the execution of the program, at a
low speed on a screen.Sequence programs generated by flowcharting have
many program execution routes if the number of steps and
branch instructions are increased. As those many program execution
routes are difficult to confirm visually, those sequence
programs cannot easily be debugged. If the
programmer wishes to know which one of the steps is selected
and executed in the selective branch section 51 in FIG. 3 or
which one of the steps ST12, ST13, ST14 is the slowest and
how long the waiting step has been waiting in a waiting
process involving the steps ST12, ST13, ST14, then it has 
been
</DESCRIPTION>
<CLAIMS>
A system (10) for debugging a sequence program having
steps constituting a sequential flowchart in the form of a

sequential function chart, the system comprising:

program executing means (20) for executing the
sequence program; characterised by:
sampling means (20) sampling, at predetermined time
intervals, all program steps to be executed while said

sequence program is being executed;
step storage means (24) provided to store
consecutively executed program steps in sequence and

simultaneously executed program steps in parallel; and
display means (31) displaying, for the respective
predetermined time intervals, the time interval number and

all program step numbers of the program steps being
executed simultaneously at the respective predetermined

time intervals.
A system (10) according to claim 1, wherein said
sampling means (20) includes means for receiving a preset

numerical value from a user indicative of predetermined
intervals.
A system (10) according to claim 1, further comprising
means (20) for determining said predetermined time

intervals based upon data of the sequence program received
from a user.
A system (10) according to claim 1, further comprising
means (20) for determining said predetermined time

intervals based upon data of the sequence program received
as a result of the sequence program having been executed

once.
</CLAIMS>
</TEXT>
</DOC>
