<DOC>
<DOCNO>EP-0634718</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Computer systems integration
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1310	G06F1310	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A computer system comprises first and second processing 
environments interconnected by a gateway. The gateway 

emulates a terminal in the second environment, converting 
service requests from a client in the first environment into 

dialogues on the emulated terminal by executing scripts in a 
scripting language. This allows client applications in the 

first environment to communicate with server applications in 
the second environment in a way that is completely 

transparent to the clients. The client is not aware that it 
is communicating with the server through a dialogue on an 

emulated terminal; all knowledge of the dialogue is embodied 
in the scripts. This is of utility in integrating legacy 

computer sytems with new systems. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
INT COMPUTERS LTD
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL COMPUTERS LIMITED
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CHI-WAH YAU ROBERT
</INVENTOR-NAME>
<INVENTOR-NAME>
DUXBURY PAUL
</INVENTOR-NAME>
<INVENTOR-NAME>
CHI-WAH YAU, ROBERT
</INVENTOR-NAME>
<INVENTOR-NAME>
DUXBURY, PAUL
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to computer systems and more specifically
is concerned with integration of such systems.The introduction of new computer systems and applications is
frequently complicated by the existence of legacy systems and
applications (i.e. those already in use by the customer), whose
immediate replacement is not practical. It is desirable to
provide some way of integrating such legacy systems and
applications with new systems and applications, allowing both to
be used side-by-side, so that the new systems can be phased in
more gradually.Several integration products are already on the market.
However, their coverage is usually limited and they often
require some modification to the target application or its host
system.Data Communications, Vol.18, No.15, 21st November 1989, pages
51-59, describes a way of emulating a terminal, using a high-level
language application program interface (HLLAPI), allowing
a user to interface with a terminal-based host application.
However, this does not, in itself, solve the integration
problems mentioned above.The object of the present invention is to provide a novel means
for integration, which reduces these problems.According to the invention, a computer system comprises the
features as defined in Claim 1. It will be shown that the invention allows client applications
to communicate with processing applications in other
environments in a way that is completely transparent to the
clients. A client is not aware whether it is communicating with
an application in a first environment (which may, for example,
be a legacy application) or with an application in a second
environment (which may be a replacement application).One embodiment of the invention will now be described by way of
example with reference to the accompanying drawings.Figure 1 is a block diagram of an integrated computer system.Figure 2 is a block diagram showing a gateway unit in more
detail.Referring to Figure 1, it is assumed in this example that a
banking organisation has a legacy computer system consisting of
at least one host computer 10 which runs a banking application
11. The banking application maintains customer account data,
and can perform various operations such as opening or closing
accounts, and transferring funds between accounts. The
application is accessible only through dumb terminals 12, e.g.
VT100 terminals, connected to the computer 10.It is assumed that the bank wishes to introduce a new computer
system to replace this existing system. The new application
runs on a computer
</DESCRIPTION>
<CLAIMS>
A computer system comprising:

a) a first processing environment (10) including a first
processing application (11);
b) a second processing environment (13) including a client
interface (16); and
c) a gateway (20) interconnecting the environments, the gateway
including terminal emulation means for providing an emulated

terminal which emulates a terminal in the first environment,
and means for converting service requests from the second

environment into dialogues on said emulated terminal by
executing scripts in a scripting language;

characterised in that the second processing environment (13)
further includes:


d) a second processing application (14);
e) a transaction processing monitor (18), which receives service
requests from the client interface (16) and which steers

service requests having one of a first set of identifier
values to the first processing application (11) by way of the

gateway (20), and steers service requests having one of a
second set of identifier values directly to the second

processing application (14).
A system according to Claim 1 wherein the gateway includes
control means (31) for initiating the scripts in response to the

service requests from the client interface, and for
communicating with the scripts by way of a pipe interface, so as

to receive requests for terminal emulation operations from the
scripts, and to return results of terminal emulation operations

to the scripts. 
A system according to Claim 2, wherein the control means
controls terminal sessions with the terminal emulation means,

each of said sessions being shared between a plurality of
clients.
A system according to any preceding claim wherein said
terminal emulation means comprises means for using an area of

memory as a virtual screen for the emulated terminal, means for
enabling said server application to perform operations on said

virtual screen, and means for storing statistics relating to
operations performed on said virtual screen by said server

application.
</CLAIMS>
</TEXT>
</DOC>
