<DOC>
<DOCNO>EP-0638188</DOCNO> 
<TEXT>
<INVENTION-TITLE>
COMPUTER METHOD AND APPARATUS FOR A TABLE DRIVEN FILE PARSER
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1500	G06F1721	G06F1730	G06F1722	G06F1727	G06F1500	G06F1200	G06F1200	G06F1721	G06F1730	G06F1727	G06F1722	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F15	G06F17	G06F17	G06F17	G06F17	G06F15	G06F12	G06F12	G06F17	G06F17	G06F17	G06F17	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
An interface between different file formats employs a table for parsing component parts of each file format. The table cross references or categorizes each of the different file formats according to file type from a predefined set of file types. For each file type, the table provides an indication and description of each component part of a file of that type. Each component part description of the table is in a commmon format. Thus, the present invention method and apparatus employs a table driven parser which utilizes a common form of representation for defining multiple file formats.
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
WANG LABORATORIES
</APPLICANT-NAME>
<APPLICANT-NAME>
WANG LABORATORIES INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
METHE EDWARD D
</INVENTOR-NAME>
<INVENTOR-NAME>
METHE, EDWARD, D.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
In a computer system, user programs called applications are executed by a 
digital processor. The digital processor may be for example a mainframe, a host 
processor of a network, a stand-alone PC and the like. The applications may be for 
example spreadsheet programs and word processing programs, to name a few. 
Execution of the different applications generates files of different file formats. That 
is, a word processing application generates files of a text storage format while a 
spreadsheet application generates files of another format, and among different word 
processing applications different text storage formats are employed for the generated 
files. In order for one application (a requesting application) to access files of foreign 
file formats, either (a) the requesting application must know the file format of the 
desired files, or (b) the requesting application must use an interface which accesses 
the desired files according to the foreign file format thereof. As a result, the proper 
interface must be available to a requesting application which means that a variety of 
interfaces must be available for a requesting application to access files of a variety of 
foreign file formats.  
 U.S. Patent No. 5,021,995 discloses a computer apparatus which reads a 
logical record from a source file having a first type and produces a generic form that 
represents the contents of the logical record. The generic form is independent of any 
file type. Thus the apparatus is able to further produce from the generic form a 
logical record for a destination file having a second type (i.e., different type than the 
source file). The patent further discloses methods for producing the generic form 
from file types of each of four basic classes of file types, namely stream file types, 
record file types, record and field file types and document file types. Another solution to availability of various interfaces has been to include 
individual open, close, read, and write access routines for each of specific file formats 
in an interface. For different file formats outside of those specified for an interface, 
the appropriate open, close, read, and write routines are developed and added to the 
interface upon user/customer request. This requires development  
 
time to make the necessary changes to the interface for the additional/new file 
formats. In turn, the longer development time is, the longer is the turn-around 
time which leads to customer dissatisfaction. Thus, there exists a need for improvements in
</DESCRIPTION>
<CLAIMS>
A computer apparatus in a digital processor (11) having (i) a storage 
memory (19) holding a plurality 

of files (17) of different file formats and (ii) a multiplicity of different 
applications (15) executable in main memory, said computer apparatus comprising:
 
   processor means; and characterized in that
 
   the apparatus further comprises a table (23) stored in working memory 

of the digital processor (11) for indicating component parts of different file 
formats, the table (23) having a different entry for each of different file 

formats; and wherein
 
   the processor means is coupled to the table (23) for interfacing between 

an application and files of different file formats in the storage memory (19), 
for a desired file having a respective file format different than a file format 

used by the application, the processor means (a) accessing the entry of the 
table (23) corresponding to the file format of the desired file, and (b) 

according to the component parts indicated in the table entry, interpreting the 
desired file such that the application is enabled to access the desired file. 
Apparatus as claimed in Claim 1 wherein the table (23) cross references each 
of different file formats according to different file type, different files of the 

digital processor (11) each being assigned a respective file type.  
 
Apparatus as claimed in Claim 1 wherein the different file formats include a 

spreadsheet format. 
Apparatus as claimed in Claim 1 wherein the table (23) further includes a set 
of common representations used in each entry for indicating component parts 

of respective file formats. 
A method in a digital processor (11) having (i) a storage memory (19) holding a plurality 
of files (17) of different file formats and (ii) a multiplicity of different 

applications (15) executable in main memory, said method accessing files of 
different formats comprising the steps of;
 
   providing a processor means; and said method being characterized in that it 

further comprises:
 
   providing a table (23) stored in working memory of the digital 

processor (11) for indicating component parts of different file formats, the 
table (23) having a different entry for each of different file formats;
 
   coupling the processor means to the table (23) for interfacing between 

an application and files of different file formats in the storage memory (19); 
and
  
 

   for a desired file having a respective file format different than a file 
format used by the application, operating the processor means including 

(a) accessing the entry of the table (23) corresponding to the file format of the 
desired file, and (b) according to the component parts indicated in the table 

entry, interpreting the desired file such that the application is enabled to access 
the desired file. 
A method as claimed in Claim 5 wherein the step of providing a table (23) 
includes providing cross references in the table which cross reference each of 

different file formats according to a different file type, different files of the 
digital processor (11) each being assigned a respective file type. 
A method as claimed in Claim 5 wherein the different file formats include a 
spreadsheet format. 
A method as claimed in Claim 5 wherein the step of providing a table (23) 
includes providing a set of representations common to each entry for indicating 

component parts of respective file formats. 
</CLAIMS>
</TEXT>
</DOC>
