<DOC>
<DOCNO>EP-0633528</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Maintenance of a data processing system.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F306	G06F306	G06F1100	G06F1100	G06F1130	G06F1130	G06F1300	G06F1300	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F11	G06F11	G06F11	G06F11	G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The invention relates to a method and apparatus for the maintenance 
of a data processing system 203. A topology map of the physical connections 

of direct access storage devices of storage subsystems 211 is created. This 
map enables the system to keep track of the physical configuration of DASDs 

and their control units, especially in the case of interconnected processor 
complexes. 
According to an embodiment of the invention, the topology map also 
includes desired status data and other information data about the DASDs. 

This data is used in the monitoring of the DASDs to determine deviations 
from desired operating characteristics. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BAIRD ROBERT
</INVENTOR-NAME>
<INVENTOR-NAME>
DAWKINS JOHN
</INVENTOR-NAME>
<INVENTOR-NAME>
MOORE RICHARD ALAN
</INVENTOR-NAME>
<INVENTOR-NAME>
WOODING GARY GEORGE
</INVENTOR-NAME>
<INVENTOR-NAME>
BAIRD,ROBERT
</INVENTOR-NAME>
<INVENTOR-NAME>
DAWKINS, JOHN
</INVENTOR-NAME>
<INVENTOR-NAME>
MOORE, RICHARD ALAN
</INVENTOR-NAME>
<INVENTOR-NAME>
WOODING, GARY GEORGE
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to the maintenance of a data processing 
system. More particularly the present invention relates to a method for 
determining the topology (or structure) of a storage subsystem of a data 
processing system, monitoring the status of the subsystem and automatically 
responding to perturbations in the subsystem. The management of storage devices and sets of data on large data 
processing systems and mainframe computers is a known problem. Most large 
computer systems have a hierarchy of storage devices ranging from magnetic 
tape cartridge data storage devices which have slow access time to direct 
access storage devices (DASD) which have a relatively fast access time. 
Typically, the hardware configuration of computer systems is constantly 
undergoing change i.e. new DASDs may be introduced and others removed or 
replaced. In the case of interconnected systems, arrangements as to whether 
particular DASDs are shared between processors may also be subject to 
change. Also, restrictions may be imposed to limit the sharing of DASDs 
subject to certain conditions being met. DASDs may be shared between 
processors to save disk space or when they are being used to store a program 
library. An example of an interconnected data processing system is shown in 
Figure 1. The central computer system 10A is connected to remote target 
computer systems 10B and 10C. The computer systems 10A, 10B and 10C have 
associated DASD storage i.e. DASDs 30A, 30B and 30C are associated with the 
processor of 10A via I/O controller 40A. DASDs 30D, 30E, 30F and 30C are 
associated with the processor of 10B via I/O controller 40B. DASD 30C is 
shared between processor 10A and 10C. In such a system both 10A and 10B may 
be aware that DASD 30C is shareable but, neither processor can determine the 
identity of the other processor. Each DASD has a unique serial number or physical identifier associated 
with it. This physical identifier is not actually utilised by the processor 
but is used by service engineers as an address for locating the physical 
position of a DASD for the purpose of replacing it or performing maintenance 
on it. The processor communicates with storage space on a DASD by means of 
a logical address. The actual physical positions and physical connections 
of DASDs are not known by the processor.  As data processing systems are expanded and modified there is a 
problem in recording and keeping track of the physical configuration of the 
direct access storage devices and their control
</DESCRIPTION>
<CLAIMS>
A method for managing a data processing system including determining 
the topology of a storage subsystem of the data processing system by the 

steps of: 
   reading identification data representing a processor of the data 

processing system; 
   reading identification data representing an I/O controller associated 

with the processor; 
   reading identification data representing a storage element of the 

storage subsystem associated with the I/O controller and processor; 
   storing the identification data in a database; and 

   repeating each of the reading steps and storing step for each storage 
element of the storage subsystem of the data processing system thereby 

producing a topology database from which the data processing system 
may identify the physical connections of a storage element of the storage 

subsystem. 
A method for managing a data processing system as claimed in claim 1 
further comprising the steps of: 

   creating a status field in the topology database for each respective 
storage element; 

   entering desired status data into the status fields; 
   monitoring the actual status of a storage element; 

   comparing the actual status of a storage element with the desired 
status from the topology database; and 

   signalling the data processing system if there are any discrepancies 
between the desired status and the actual status of a storage element. 
A method for managing a data processing system as claimed in any of 
the preceding claims wherein the system includes more than one processor, 

 
each processor having an associated I/O controller and associated storage 

subsystem. 
A method for managing a data processing system as claimed in any of 
the preceding claims wherein each storage element of the storage 

subsystem is a direct access storage device. 
A data processing system comprising: 
   one or more processors; 

   at least one storage subsystem associated with each respective 
processor; 

   an I/O controller associated with each respective processor for 
controlling data transfer between the processor and associated storage 

subsystems; 
   means for reading identification data representing one of the 

processors; 
   means for reading identification data representing an I/O controller 

associated with the processor; 
   means for reading identification data representing an element of one 

of the subsystems associated with the processor; 
   means for storing the identification data in a topology database 

whereby the data processing system may identify the physical connections of 
a storage element of the storage subsystem. 
</CLAIMS>
</TEXT>
</DOC>
