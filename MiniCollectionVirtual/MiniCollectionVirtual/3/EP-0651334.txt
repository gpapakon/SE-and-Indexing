<DOC>
<DOCNO>EP-0651334</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Data transfer in a data processing system.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F506	G06F506	G06F510	G06F512	G06F946	G06F946	G06F1320	G06F1328	G06F1338	G06F1338	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F5	G06F5	G06F5	G06F5	G06F9	G06F9	G06F13	G06F13	G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Data is transferred from a host system to a subsystem connected to 
the host by a system bus in an efficient manner using one or more virtual 

first in first out (FIFO) registers in host memory and a corresponding 
set of virtual FIFOs located in the subsystem memory. A transmission 

controller controls the transfer of data from the host FIFOs to the 

subsystem FIFOs while the subsystem processor reads and processes data 
from the subsystem FIFO. By accumulating data in the host FIFOs before 

transfer to the subsystem, overhead associated with starting and stopping 
data transfers over the system bus is substantially reduced. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CHERICHETTI CORY ANSEL
</INVENTOR-NAME>
<INVENTOR-NAME>
DINICOLA PAUL DAVID
</INVENTOR-NAME>
<INVENTOR-NAME>
JOHNS CHARLES RAY
</INVENTOR-NAME>
<INVENTOR-NAME>
RAHIM OMAR MAHMOUD
</INVENTOR-NAME>
<INVENTOR-NAME>
RICE DAVID ANDREW
</INVENTOR-NAME>
<INVENTOR-NAME>
VAN NOSTRAND MARK ERNEST
</INVENTOR-NAME>
<INVENTOR-NAME>
CHERICHETTI, CORY ANSEL
</INVENTOR-NAME>
<INVENTOR-NAME>
DINICOLA, PAUL DAVID
</INVENTOR-NAME>
<INVENTOR-NAME>
JOHNS, CHARLES RAY
</INVENTOR-NAME>
<INVENTOR-NAME>
RAHIM, OMAR MAHMOUD
</INVENTOR-NAME>
<INVENTOR-NAME>
RICE, DAVID ANDREW
</INVENTOR-NAME>
<INVENTOR-NAME>
VAN NOSTRAND, MARK ERNEST
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to data transfer in data processing 
systems. For the past few years, most data processing systems have offered 
some type of graphics output as a standard feature. This graphics output 
could range from a simple two dimensional graphics reproduction 
capability to very advanced three dimensional graphics reproduction 
capability. Graphics subsystems vary considerably in terms of 
complexity, part count, and cost. A two dimensional graphics subsystem, 
for example, may consist only of a frame buffer and video logic; while a 
three dimensional graphic subsystem typically will consist of one or more 
floating-point processors, several custom very large scale integrated 
(VLSI) circuits, one or more frame buffers, and video logic. In either 
case, the host executes the graphics application program and generates an 
appropriate data stream for the graphics subsystem. The difference 
between the relatively simple 2D graphics and the more complex 3D 
graphics lies in where the graphics order processing and rasterization 
occur. In the simple 2D graphics subsystem example, the host processor 
performs the graphics order processing and rasterization in software, 
while in the more complex 3D graphics subsystem example, hardware and 
microcode in the graphics subsystem process graphics orders and other 
graphics processing. To allow customers greater flexibility in 
configuring a system that best meets the customer's need, graphics 
subsystems are typically offered as stand alone features. The graphics subsystems are usually attached to the host processor 
complex by a general purpose bus. Data transfer between the host 
processor and the graphics subsystem can occur in one of two ways. First, 
the host processor may store the data directly into the graphics 
subsystem using Programmable Input Output (PIO) transfer or, second, the 
graphics subsystem may read the data from host memory using direct memory 
access (DMA). PIO is a data transfer mechanism that uses an instruction 
in the host processor to move a single word of data from or to a register 
in the host processor to or from a graphics subsystem. Since a DMA 
operation is most efficient for large transfer sizes, and since graphics 
applications usually generate small transfer sizes, the DMA mechanism for 
data transfer is rarely used for graphics applications. PIO is the  
 
typical mechanism used for transfer of data to a graphics subsystem. PIO 
allows the host processor to directly send data to the graphics 
subsystem.
</DESCRIPTION>
<CLAIMS>
An information handling system, comprising: 
   a first processing means (20) for executing application programs 

under control of an operating system program; 
   a first memory means (30) connected to said first processing means 

for storing information in the form of programs and data associated 
with said first processing means, said first memory means 

comprising one or more temporary storage registers for accumulating 
said information for transmission to one or more peripheral 

subsystems; 
   a transmission means (40) connected to said first memory for 

transmitting said information to said one or more peripheral 
subsystems; 

   one or more peripheral subsystems connected (80) to said 
transmission means, each said peripheral subsystem comprising: 

   a transmission control means (60) connected to said transmission 
means for controlling transmission of information between said 

first memory and said peripheral subsystem; 
   a second memory means (50), connected to said transmission means 

(60) and said transmission control means (60) for storing 
information received from said first memory means and information 

to be transmitted to said first memory means, said second memory 
means comprising one or more temporary registers for storing said 

information received from said first memory means and for 
accumulating data to be transmitted from said second memory means 

to said first memory means; and 
   a second processor (70) connected to said second memory means for 

processing information transmitted from said first memory means to 
said second memory means. 
An information handling system as claimed in Claim 1 further 

comprising:
 

   a video display system connected to said second processor for 
displaying results of processing information by said second 

processor. 
An information handling system as claimed in Claim 2 wherein said 
video display system displays graphic representations of the information 

resulting from processing by said second processor. 
An information handling system as claimed in any preceding Claim 
wherein said temporary storage registers in said first memory comprise 

first in first out registers. 
An information handling system as claimed in any preceding Claim 
wherein said one or more temporary registers in said second memory means 

comprise first in first out registers. 
A method for transmission of data in an information handling system 
between a first memory means and a second memory means comprising the 

steps of: 
   first determining if a quantity of data in one or more temporary 

registers in a first memory means has reached a first predetermined 
level; and 

   transmitting data from said temporary registers in said first 
memory means to corresponding one or more temporary registers in 

said second memory means under the control of a transmission 
control means employing direct memory access transfer if said first 

determining step determines that said first predetermined level is 
reached. 
A method as claimed in Claim 6 comprising the step of determining 
whether there is sufficient space in said one or more temporary registers 

in said second memory means to accommodate the quantity of data to be 
transmitted. 
A method as claimed in Claim 6 or Claim 7 comprising the step of 
updating one or more counters which contain counts representing a number 

of attempts to transmit information. 
A method as claimed in any of Claims 6 to 8 comprising the step of 
determining if there is more than one temporary storage register in said 

first memory means containing information to be transmitted to said 
second memory means; and moving to a next temporary storage register 

after completion of data transfer from a previous temporary storage 
register if it has been determined that there is more than one temporary 

storage register containing data to be transmitted. 
</CLAIMS>
</TEXT>
</DOC>
