<DOC>
<DOCNO>EP-0631235</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Partial-scan built-in selftesting sequential circuit
</INVENTION-TITLE>
<CLASSIFICATIONS>G01R3128	G01R3128	G01R313185	G01R313183	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G01R	G01R	G01R	G01R	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G01R31	G01R31	G01R31	G01R31	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The testability of a near-acyclic circuit (14) can be enhanced by the 
addition of one or more control points and observation points to allow for 

increased observability and controllability of selected nodes (28).The control points 
and/or test points are added by first computing the controllability, 

observability and fault detection probability at each node. A fault is then selected. If 
either the controllability or observability for such fault is not inside a prescribed 

value range, and the fault detection probability is below a prescribed value, then 
either a control point and/or an observation point may be added. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
AT 
&
 T CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
AT
&
T CORP.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
LIN CHIH-JEN
</INVENTOR-NAME>
<INVENTOR-NAME>
LIN, CHIH-JEN
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to digital circuits having
an improved ability to be electronically tested, and to
methods for modifying a near-acyclic circuit to improve
its testability.The advent of miniaturization has led to ever denser electronic circuits.
As the density of electronic circuits has increased, so too has the complexity and cost
of testing. In an effort to reduce the cost and complexity of testing digital integrated
circuits and, particularly, random logic digital circuits, various techniques such as
partial-scan testing have been developed. Partial-scan testing is practiced by
partitioning the circuit such that selected sequential elements (i.e., flip-flops) in the
circuit are arranged as a shift register. Initially, the circuit is placed in a test mode
and a known stream of test data is shifted into the shift register configured of the
selected flip-flops, usually referred to as "scan" flip-flops. Thereafter, the integrated
circuit is placed in its normal operating mode so as to react to the test data. Finally,
the integrated circuit is returned to the test mode and the test data (as modified by the
operation of the integrated circuit) is shifted out from the scan flip-flops for
comparison to a reference data stream.While partial-scan testing achieves very high fault coverage, there is a
need to increase the level of fault coverage even higher. One traditional approach to
increasing the level of fault coverage in built-in, self-test circuits has been to add
"test points" at various nodes in the circuit. For purposes of discussion, a test point
is defined as being either an observability point (i.e., a line coupled to a circuit node
to facilitate observation of the signal at that node) or a control point, (i.e., either an
AND or OR gate inserted between the node, and a line supplying the node with
signals). Placement of test points in a built-in, self-test circuit presents little
difficulty when the circuit is comprised purely of combinational elements (i.e, AND,
OR, NAND, NOR, NOT and XOR gates). For such combinational circuits, test
points can be selected using a known procedure for calculating a probabilistic
measure of the controllability and observability of the nodes in the circuit. The
controllability of a node is defined as the ability to excite a fault (e.g., a stuck-at-1 or
a stuck-at-0 fault), whereas the observability of a node is defined as the ability to 
observe the effect of a fault at the node.In contrast, placement of test points in a sequential circuit (i.e., a circuit
contai
</DESCRIPTION>
<CLAIMS>
A digital circuit (10) having an improved ability to be electronically tested,
by test signals applied thereto, comprising:


a sequential network (12,14) having a near-acyclic structure, the network having
at least one node therein at which a fault may occur;
a test pattern generator (16) coupled to the said network (12,14) for supplying successive
test patterns thereto to cause the said network (12,14) to generate a response following receipt of

each successive pattern; and
an electronic logic block (22) coupled to the said network for compacting the
response generated thereby;
the said digital circuit being CHARACTERIZED BY at least one test point
added to at least one node selected in the sequential network (12,14) for improving the

testability of said sequential network (12,14) by increasing fault coverage during testing,
said test point configuring said sequential network (12,14) such that said node has a separate

one of its controllability and observability fault detection probabilities different from
a prescribed value therefor and a detection probability below a prescribed value

therefor prior to the addition of said test point.
A circuit according to claim 1 wherein the test point comprises an
observation point.
A circuit according to claim 1 wherein the test point comprises a
control point.
A circuit according to claim 3 wherein the control point comprises an
OR gate when the selected node has a controllability below a prescribed value.
A circuit according to claim 3 wherein the control point comprises an
AND gate when the selected node has a controllability above a prescribed value.
A method for modifying a near-acyclic circuit (10) to improve its
testability by adding at least one test point thereto to increase the level of fault

coverage when the circuit is tested by applying a successive one of t random test
patterns thereto, CHARACTERIZED BY the steps of: 


(a) computing the controllability and observability of each node in the
circuit by the step of decomposing the circuit into self-loop flip-flop blocks, each

containing a self-looping flip-flop, and primary output blocks containing no self-looping
flip-flops;
(b) computing further the controllability of each node in the circuit by
the steps of:


(i) replacing each non-self-loop flip-flop with a short circuit;
(ii) computing the controllability of each self-loop flip-flop block from a
lower macro-level toward a higher macro-level, one block at a time; and
(iii) computing the controllability of each primary output block from a
lower macro-level to a higher macro-level, one block at a time;
(c) computing further the observability of each node in the circuit by
the steps of:


(i) computing the observability of each primary output block; and
(ii) computing the observability of each self-loop flip-flop block;
(d) selecting a fault for a given one of the nodes;
(e) computing the detection probability for said fault at a node in
accordance with the controllability and observability for that node;
(f) adding a test point at a particular node when a separate one of the
controllability and observability for the node is not within a prescribed value range

for each value therefor and the detection probability is below a prescribed value
therefor; and
(g) repeating the steps (b)-(f) until either the fault coverage no longer
increases or until no more faults can be selected.
A method according to claim 6 wherein the test point which is added
comprises an observation point.
A method according to claim 6 wherein the test point which is added
comprises a control point.
A method according to claim 8 wherein the control point comprises an
AND gate when the controllability of the node at which the control is to be added is

above a prescribed value.
A method according to claim 8 wherein the control point comprises 
an OR gate when the controllability of the node at which the control is to be added is

below a prescribed value.
A method according to claim 6 wherein only control points are added
as long as no more faults can be selected and thereafter repeating steps (b)-(f),

wherein either control points or observation points are added.
A method according to claim 6 wherein the controllability of each
self-loop flip-flop is computed by the steps of:


(a) assigning a controllability value to the Q output of the self-looping
flip-flop in the block to zero and then computing the controllability of all nodes in

the block, including the controllability (C(O)) of the corresponding flip-flop D input;
(b) assigning a controllability value of one to the Q outputs of the self-looping
flip-flop and then updating the controllability of each node lying in the path

of the self-looping flip-flop and an input of a gate in the block connected to the
output of the self-looping flip-flop to reflect the controllability change at the self-looping

flip-flop Q output, with the new controllability at the self-looping flip-flop D
input now being C(1); and
(c) assigning the value C(O)/(1 - C(1) + C(O)) to the controllability of
the Q output of the self- looping flip-flop and then updating the controllabilities of

said nodes lying in the path of the self-looping flip-flop and input of a gate in the
block connected to the output of the self-looping flip-flop.
A method according to claim 6 wherein the observability of each
self-loop flip-flop is computed by the steps of:


(a) assigning O(W), the observability of each self-loop flip-flop block,
to the O(Q), the observability of the Q output of the self-loop flip-flop in the block if

there exists a branch W which link the block somewhere else; otherwise assign zero
to O(Q);
(b) assigning O(Q) to O(D), the observability of the D input of the self-loop
flip-flop in the block 32;
(c) computing only the observabilities of each node lying in the path of
the self-looping flip-flop and an input of a gate in the block connected to the output

of the self-looping flip-flop in the block from the self-loop flip-flop D input back to
each preceding node, until O(B), the observability along a feedback loop B in the

block is computed; 
(d) calculating the O(Q) using the relationship:

O(Q) = 1-[{1-O(B))*(1-O(W))]
(e) calculating if O(Q) - O(D) / (O(D)) 
>
 a prescribed % then repeat
step (b); otherwise
(f) assigning O(Q) to O(D); and
(g) computing the observability of all of the nodes in the self-loop
flip-flop.
</CLAIMS>
</TEXT>
</DOC>
