<DOC>
<DOCNO>EP-0626685</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Digital signal processor for a disk drive.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F306	G06F306	G11B1928	G11B1928	G11B2000	G11B2000	G11B2110	G11B2110	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G11B	G11B	G11B	G11B	G11B	G11B	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G11B19	G11B19	G11B20	G11B20	G11B21	G11B21	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
An servo disk drive employs a microcomputer (42) in combination 
with a digital signal processor (DSP) (44). The microcomputer (42) is designed to 

configure and initiate the DSP (44), but thereafter operates independently of the 
digital signal processor (44), allowing for co-processing capabilities. The digital 

signal processor (44) operates according to a small instruction set, wherein the 
instructions have relatively small word sizes. The DSP (44) includes a 

coefficient/data memory (122), a data pointer register (134), and a coefficient 
pointer register (130). The coefficients are arranged in the memory (122) according 

to a predefined pattern of use during execution of a program. The coefficient 
pointer register (130) has the ability to self-increment to the next coefficient in the 

predefined pattern, and thus the instructions do not carry information concerning 
the address of the next coefficient. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
HEWLETT PACKARD CO
</APPLICANT-NAME>
<APPLICANT-NAME>
HEWLETT-PACKARD COMPANY
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
HESSING CHARLES E
</INVENTOR-NAME>
<INVENTOR-NAME>
SHELTON BOYD N
</INVENTOR-NAME>
<INVENTOR-NAME>
HESSING, CHARLES E.
</INVENTOR-NAME>
<INVENTOR-NAME>
SHELTON, BOYD N.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to disk drives, and more particularly, to 
digital signal processors for disk drives. Computer hard disk drives can be generally classified into two 
categories: dedicated servo disk drives and embedded servo disk drives. 
Dedicated servo disk drives have one or more magnetic disks wherein one entire 
surface of a disk is dedicated to storing servo information that is useful in 
controlling and synchronizing the operation of the magnetic disk and read/write 
head. In contrast, embedded servo disk drives have one or more magnetic disks 
wherein each disk has thin "pie-shaped" slices of servo information interspersed 
between larger "pie-shaped" regions of data. In general, disk drives employ a closed loop servo control system 
which depends on position information read from the disk surface(s). In order to 
accurately read the required position information, a high precision timing system 
must be created. The timing system must be capable of both acquiring a 
synchronous operating state with the spinning disk(s) and maintaining that 
mode of operation indefinitely. The timing system supplies critical timing and 
status of both the servo system and the read/write system. According to present design procedures, one of the first tasks in 
designing a disk drive is to fully characterize the format and capacity of the disk 
drive. That is, a disk drive engineer must initially specify the drive 
configuration, read/write timing and other variables, memory capacity, and 
intended operating environment within which the drive is to work. Once these 
parameters are known, the engineer designs an application specific integrated 
circuit (ASIC) which is specifically constructed to control the specified disk 
drive. Unfortunately, the ASIC-based controller offers little flexibility in the 
event that it is desirable to change the characteristics or parameters of the disk 
drive. For example, to change the disk format, a new ASIC must be designed.  Today's design procedures are slow because special ICs must be 
designed for each new hard disk drive. Swift introduction of new disk drive 
products is therefore impeded. Furthermore, expenses associated with 
non-recurring engineering and design time are high. Accordingly, it would be 
desirable to create a chip set which is flexible and adaptable to many different 
disk drives having different operating characteristics, formats, and parameters. Another drawback of conventional processors for closed loop 
servo disk drives concerns selecting between
</DESCRIPTION>
<CLAIMS>
A digital signal processor for use in a servo and timing 
processor for a servo disk drive, the digital signal processor being configured to 

minimize instructions and bit-size of individual instructions, the digital signal 
processor comprising: 

   a first memory (120) for storing a program of instructions; 
   a second memory (122) for storing coefficients and data, the 

coefficients being arranged within the second memory according to a predefined 
pattern of use for the program stored in the first memory (120); 

   an operational unit, operatively coupled to the first and second 
memories, for processing information using the coefficients and data stored in the 

second memory (122) in accordance with the instructions stored in the first 
memory (120); 

   a program counter (124) for holding an address to the first memory 
(120) indicative of a memory location that stores a next instruction to be processed 

by the operational unit; 
   a data pointer register (134) for holding an address to the second 

memory (122) indicative of a memory location that stores data to be used in the 
operational unit; and 

   a coefficient pointer register (130) for holding an address to the 
second memory (122) indicative of a memory location that stores a coefficient to 

be used in the operational unit, the coefficient pointer register (130) including 
means for indexing (132) to a subsequent address in the predefined pattern 

indicative of a memory location that stores a next coefficient to be used in the 
operational unit independently of, and without receiving information from, the 

instructions to be processed in the operational unit. 
A servo disk drive comprising the digital signal processor of 
claim 1. 
A digital signal processor for use in a servo and timing 
processor for a servo disk drive, the digital signal processor comprising: 

   a RAM (122) having a memory capacity of m words x n bits, the RAM 
(122) being arranged in p pages of q words; 

   a k-bit data pointer register (134) for holding an address to a memory 
location in the RAM (122), the data pointer register (134) having s bits assigned 

to address one of the p pages in the RAM (122) and t bits assigned to address one 
of the words within the addressed p page, where 

k = s + t  
; and 

   a k-bit coefficient pointer register (130) for holding an address to a 
memory location in the RAM (122), the coefficient pointer register (130) including 

means for independently indexing (132) to a subsequent address. 
A digital signal processor according to claim 5 wherein the 
RAM memory capacity is not greater than 256 words (m 256) and the data and 

coefficient registers are 8-bit registers (k = 8). 
A digital signal processor according to claim 5 wherein: 
   the RAM memory capacity is 128 words (m = 128) x 16 bits (n = 16) 

and the RAM is arranged in 8 pages (p = 8) of 16 words (q =16); 
   the data and coefficient registers are 8-bit registers (k = 8); and 

   the data register has 4 bits (s = 4) assigned to address one of the 8 
pages and 4 bits (t = 4) assigned to address one of the 16 words of the addressed 

page. 
A servo and timing processor for a servo disk drive, the servo 
and timing processor comprising: 

   a digital signal processor (44) for performing high speed computations 
affecting servo control of the disk drive; 

   a servo timing generator (70), coupled to the digital signal processor 
(44), for storing and providing instructions to operably control the disk drive; 

   a microcomputer (42) operatively coupled to, but separate from, the 
digital signal processor (44) for initiating operation of the digital signal processor 

(44); and 
   the digital signal processor (44) continuing operation independent of 

the microcomputer. 
A servo and timing processor according to claim 8 wherein the 
microcomputer (42), digital signal processor (44), and servo timing generator (70) 

are formed on a single chip. 
A servo and timing processor according to claim 8 wherein the 
digital signal processor comprises: 

   a first memory (120) for storing a program of instructions; 
   a second memory (122) for storing coefficients and data, the 

coefficients being arranged within the second memory according to a predefined 
pattern of use for the program stored in the first memory (120); 

   an operational unit, operatively coupled to the first and second 
memories, for processing information using the coefficients and data stored in the 

second memory (122) in accordance with the instructions stored in the first 
memory (120); 

   a program counter (124) for holding an address to the first memory 
(120) indicative of a memory location that stores a next instruction to be processed 

by the operational unit; 
   a data pointer register (134) for holding an address to the second 

memory (122) indicative of a memory location that stores data to be used in the 
operational unit; and 

   a coefficient pointer register (130) for holding an address to the 
second memory (122) indicative of a memory location that stores a coefficient to 

be used in the operational unit, the coefficient pointer register (130) including 
means for indexing (132) to a subsequent address in the predefined pattern 

indicative of a memory location that stores a next coefficient to be used in the 
operational unit independently of, and without receiving information from, the 

instructions to be processed in the operational unit. 
A servo disk drive comprising the servo and timing processor 
of claim 8. 
A method for processing data within a digital signal processor 
used in a servo disk drive, the method comprising the following steps: 

   storing a program of instructions in a first memory (120); 
   storing coefficients and data in a second memory (122); 

   arranging the coefficients in a predefined pattern within the second 
memory (122); 

   initially transferring an address of a next instruction to a first register 
(124) from an external source; 

   initially transferring an address of selected data to a second register 
(134) from the external source; 

   initially transferring an address of a selected coefficient to a third 
register (130) from the external source; 

   accessing and retrieving the selected data and selected coefficient 
using respective addresses stored in the second and third registers; 

   processing information using the selected data and selected 
coefficient; and 

   incrementing the third register (130) to a subsequent address 

indicative of a memory location that stores the next coefficient in the pattern 
independently of, and without receiving the subsequent address from, the external 

source. 
</CLAIMS>
</TEXT>
</DOC>
