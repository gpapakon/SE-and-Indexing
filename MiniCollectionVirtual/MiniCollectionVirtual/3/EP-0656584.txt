<DOC>
<DOCNO>EP-0656584</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Conditional memory store from a register pair
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1208	G06F1208	G06F934	G06F9318	G06F932	G06F938	G06F938	G06T160	G06F9318	G06F934	G06F9302	G06F9312	G06F9312	G06T160	G06F9302	G06F932	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06T	G06F	G06F	G06F	G06F	G06F	G06T	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F12	G06F12	G06F9	G06F9	G06F9	G06F9	G06F9	G06T1	G06F9	G06F9	G06F9	G06F9	G06F9	G06T1	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A memory store operation comes from one of a pair of 
registers selected by an arithmetic logic unit condition. An 

instruction logic circuit (250, 660) controls an addressing 
circuit (120) to store data in a first register into memory if 

a selected status bit has a first state and to store data in 
a second register associated with the first register into 

memory if the selected status bit has a second state in 
response to a register pair conditional store instruction. 

The bits may indicate a negative output of the arithmetic 
logic unit (230), a carry out signal, an overflow, or a zero 

output. The register pair conditional store instruction 
designates a particular one of the status bits to control the 

conditional store. The instruction logic circuit (250, 660) 
substitutes the selected status bit for a least significant 

bit of the register number. Thus memory store is from the 
first register if the status bit is "1" and is from the second 

register if the status bit is "0". In a further embodiment 
the register pair conditional write instruction is 

conditional. The write operation aborts if the designated 
condition is true. In the preferred embodiment of this 

invention, the arithmetic logic unit (230), the status 
register (210), the data registers (200) and the instruction 

decode logic (250, 660) are embodied in at least one digital 
image/graphics processor (71) as a part of a multiprocessor 

formed in a single integrated circuit (100) used in image 
processing. 
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
TEXAS INSTRUMENTS INC
</APPLICANT-NAME>
<APPLICANT-NAME>
TEXAS INSTRUMENTS INCORPORATED
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BALMER KEITH
</INVENTOR-NAME>
<INVENTOR-NAME>
GUTTAG KARL M
</INVENTOR-NAME>
<INVENTOR-NAME>
POLAND SYDNEY W
</INVENTOR-NAME>
<INVENTOR-NAME>
BALMER, KEITH
</INVENTOR-NAME>
<INVENTOR-NAME>
GUTTAG, KARL M.
</INVENTOR-NAME>
<INVENTOR-NAME>
POLAND, SYDNEY W.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The technical field of this invention is the field of
digital data processing and more particularly microprocessor
circuits, architectures and methods for digital data
processing especially digital image/graphics processing. This invention relates to the field of computer graphics
and in particular to bit mapped graphics. In bit mapped
graphics computer memory stores data for each individual
picture element or pixel of an image at memory locations that
correspond to the location of that pixel within the image.
This image may be an image to be displayed or a captured image
to be manipulated, stored, displayed or retransmitted. The
field of bit mapped computer graphics has benefited greatly
from the lowered cost and increased capacity of dynamic random
access memory (DRAM) and the lowered cost and increased
processing power of microprocessors. These advantageous
changes in the cost and performance of component parts enable
larger and more complex computer image systems to be
economically feasible.The field of bit mapped graphics has undergone several
stages in evolution of the types of processing used for image
data manipulation. Initially a computer system supporting bit
mapped graphics employed the system processor for all bit
mapped operations. This type of system suffered several
drawbacks. First, the computer system processor was not
particularly designed for handling bit mapped graphics.
Design choices that are very reasonable for general purpose
computing are unsuitable for bit mapped graphics systems.
Consequently some routine graphics tasks operated slowly. In
addition, it was quickly discovered that the processing needed
for image manipulation of bit mapped graphics was so loading
the computational capacity of the system processor that other
operations were also slowed.The next step in the evolution of bit mapped graphics
processing was dedicated hardware graphics controllers. These
devices can draw simple figures, such as lines, ellipses and
circles, under the control of the system processor. Many of 
these devices can also do pixel block transfers (PixBlt). A
pixel block transfer is a memory move operation of image data
from one portion of memory to another. A pixel block transfer
is useful for rendering standard image elements, such as
alphanumeric characters in a particular type font, within a
display by transfer from nondisplayed memory to bit mapped
display memory. This function can also be used for tiling by
transferring the same small image to the whole of bit mapped
display memory. The
</DESCRIPTION>
<CLAIMS>
A data processing apparatus including a memory (20)
storing data at addressable memory locations, an addressing

circuit (120) generating memory addresses for data accesses
to said memory, a data circuit including a plurality of data

registers (200), each storing a predetermined number of data
bits, an arithmetic logic unit (230) having operand inputs

and an output coupled to said plurality of data registers, a
status register (210) storing a plurality of status bits set

in accordance with the status of a prior result of said
arithmetic logic unit and instruction logic circuit (250,245)

connected to said addressing circuit and said data circuit,
said instruction logic circuit controlling said addressing

circuit and said data circuit in response to a received
instruction;


said instruction logic circuit (250,245) being arranged
to control said addressing circuit (120) and said data

registers (200) to store said predetermined number of data
bits stored in a first data register into a specified address

in said memory if a status bit stored in said status register
(210) selected from said plurality of status bits has a first

state and to store said predetermined number of data bits
stored in a second data register associated with said first

data register into said specified address in said memory if
said selected status bit stored in said status register (210)

has a second state in response to a register pair conditional
store instruction,
wherein said register pair conditional store instruction
includes a field of a plurality of bits ("N C V Z" Figure 18)

designating whether particular ones of said plurality of
status bits are protected from being set corresponding to

said result of said arithmetic logic unit; and 
said instruction logic circuit (250,245) is further
arranged to control said status register (210) to prevent

modification of said particular ones of said plurality of
status bits designated in said field of said register pair

conditional store instruction.
A data processing apparatus according to claim 1,
wherein:


said field ("N C V Z" Figure 18) of said register pair
conditional store instruction designates whether particular ones of

said plurality of status bits are protected from being set
consists of a plurality of bits, each bit corresponding to

one of said plurality of status bits; and
said instruction logic circuit control is arranged to
said status register to permit modification of each status

bit if said corresponding bit of said field of said register
pair conditional store instruction is in a first state and

prevent modification of each status bit if said corresponding
bit of said field of said register pair conditional store

instruction is in a second state.
A data processing apparatus according to claim 2,
wherein:


said status register (210) stores a negative status bit
set when said output of said arithmetic logic unit is

negative, a carry status bit set when said arithmetic logic
unit generates a carry out signal, an overflow status bit set

when said arithmetic logic unit generates an overflow signal
and a zero status bit set when said output of said arithmetic

logic unit is zero; and
said field ("N C V Z" Figure 18) of said register pair
conditional store instruction designating whether particular ones

of said plurality of status bits are protected from being set 
consists of an N bit indicating whether said negative status

bit is protected from modification, a C bit indicating
whether said carry status bit is protected from modification,

a V bit indicating whether said overflow status bit is
protected from modification and a Z bit indicating whether

said zero status bit is protected from modification.
A data processing apparatus according to claim 1,
wherein:


said register pair conditional instruction includes a
source operand field ("src" Figure 18) and a conditional bit

("c" Figure 18) designating whether to make a conditional
source selection; and
said instruction logic circuit (250,245) is further
arranged to control said addressing circuit (120) and said

data registers (200) in response to said register pair
conditional store instruction


to store said predetermined number of data bits
stored in said first data register corresponding to said

source operand field into said specified address in said
memory if a status bit selected from said plurality of

status bits has a first state and to store said
predetermined number of data bits stored in a second

data register associated with said first data register
into said specified address in said memory if a status

bit selected from said plurality of status bits has a
second state if said conditional bit has a first state,

and
to store said predetermined number of data bits
stored in said first data register corresponding to said

source operand field into said specified address in said
memory regardless of the state of said status bit 

selected from said plurality of status bits if said
conditional bit has a second state.
</CLAIMS>
</TEXT>
</DOC>
