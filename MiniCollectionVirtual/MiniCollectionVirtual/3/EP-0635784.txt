<DOC>
<DOCNO>EP-0635784</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Multiprocessorsystem
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F945	G06F945	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
In a multiprocessor system, the intention is for all active processors to be utilised as optimally as possible for the processing of a static task packet. In order to achieve this aim, the active processors fetch the tasks, in accordance with the invention, independently from a central task control table of the common memory, for processing, and wait at a synchronisation point, before continuing this activity, until the conditions stipulated by the synchronisation point are fulfilled. 
<
IMAGE
>
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
SIEMENS AG
</APPLICANT-NAME>
<APPLICANT-NAME>
SIEMENS AKTIENGESELLSCHAFT
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MATZ CHRISTINE DIPL-PHYS
</INVENTOR-NAME>
<INVENTOR-NAME>
PETERSEN VOLKER
</INVENTOR-NAME>
<INVENTOR-NAME>
SCHOEN HANS-ULRICH DR RER NAT
</INVENTOR-NAME>
<INVENTOR-NAME>
SIEGWART BERND DIPL-PHYS
</INVENTOR-NAME>
<INVENTOR-NAME>
MATZ, CHRISTINE, DIPL.-PHYS.
</INVENTOR-NAME>
<INVENTOR-NAME>
PETERSEN, VOLKER
</INVENTOR-NAME>
<INVENTOR-NAME>
SCHOEN, HANS-ULRICH, DR. RER. NAT.
</INVENTOR-NAME>
<INVENTOR-NAME>
SIEGWART, BERND, DIPL.-PHYS.
</INVENTOR-NAME>
</INVENTORS>
<CLAIMS>
Multiprocessor system having

a) a task control table (TCT) in the common memory of
the system, in which table a task package is entered,

broken down into individual tasks,
b) an additional entry for each individual task, which
in each case indicates whether an individual task has

already been carried out, is being processed or has not
yet been processed,
c) processors for processing the task package, which in
each case retrieve from the task control table the next

free task for processing,
d) synchronization points (SynP) within the task
control table for coordinating the processing of the

task package, which in each case follow a series of
entries with independent individual tasks and for which

the processors must wait before retrieving the next
free task, until the conditions defined by the

synchronization point are satisfied.
Multiprocessor system according to Claim 1,

characterized in that

a) that processor which is processing the last
condition required at a synchronization point

transmits, after completing this processing, a
continuation message to the processors which are

waiting at the synchronization point,
b) a master processor (MPM) monitors the correct
sequence at a synchronization point, in that it sets a 

monitoring timer as soon as it arrives at a
synchronization point and, when the monitoring timer is

running without receiving a continuation message, on
the one hand emits an appropriate fault message and on

the other hand transmits a continuation message to the
other processors.
Multiprocessor system according to Claim 1 or
2,

characterized by

parallel procedures for processing long individual
tasks, which can be called up more than once by

different processors using different parameters
(NI, IR) in each case, in which case the said

parameters can be taken from the task control table
(TCT).
Multiprocessor system according to Claim 3,

characterized by

an initialization procedure (TCTI) for dynamic
initialization of the task control table, which

procedure calculates the range parameter (IR) of a
parallel procedure as a function of the size of the

parallel procedure and of the number of available
processors.
Method for processing a task package in a
multiprocessor system according to one of Claims 1 to

4, in accordance with which

a) on reaching a synchronization point, one processor
checks whether all the procedures quoted in the

synchronization point have been carried out,
b) if a procedure is identified as still being carried
out, this processor checks whether the processor

carrying out this procedure has failed,
c) if the processor carrying out this procedure has
failed, the procedure is repeated by the checking

processor.
</CLAIMS>
</TEXT>
</DOC>
