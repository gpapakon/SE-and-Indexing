<DOC>
<DOCNO>EP-0620935</DOCNO> 
<TEXT>
<INVENTION-TITLE>
CALL MANAGEMENT IN A COLLABORATIVE WORKING NETWORK
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1500	G06F1500	G06F1300	G06F946	G06F946	G06F950	G06F948	G06F1300	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F15	G06F15	G06F13	G06F9	G06F9	G06F9	G06F9	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A programmable workstation for collaborative working in a network comprises a conventional operating system and network control layer for controlling physical routing of data between nodes. A collaborative application subsystem which interfaces with application programs is responsive to a predetermined call from a collaboration call manager to establish the call manager at the node to handle incoming events which are not specific to any application program instances at the node.
</ABSTRACT>
<APPLICANTS>
</APPLICANTS>
<INVENTORS>
</INVENTORS>
<DESCRIPTION>
This invention relates to call management in a collaborative working
network and more specifically to a programmable workstation and a method
for use in such a collaborative working environment.Personal computers are now widespread throughout the business community and
many are able to intercommunicate, either through fixed connections e.g.
local area networks, or through dynamically established links e.g. ISDN or
async lines over the public switched telephone network. Increasingly, these
connected personal computers can be used to enhance collaborative working
between remote individuals; a typical example being the use of desk top
conferencing software. Successful collaborative work generally requires
more than a simple data link between the participants; voice capabilities
are normally essential and video links are frequently required. Thus remote
collaborative working can often be regarded as an extension to the
traditional telephone call - it being enhanced with the data and programs
available at the desktop via the personal computer - and, on occasions,
enriched with video services.A broad spectrum of collaborative applications can be envisaged, ranging
from utilities taking advantage of the data and applications on a
workstation, e.g. sharing of screen windows and files, through to new
collaborative applications designed to meet the needs of specific classes
of remote user e.g. just-in-time education, remote presentations, executive
broadcasts or help desk. The common requirements behind these examples are:
the support of a wide variety of personal computer platforms - both
hardware and software.operation over the existing communication networks.group communications and multi-media data services.The behaviour of a desk top conferencing system, particularly the way in
which the system reacts to incoming calls, is usually determined by the
suppliers of the system software. The conventional view of real-time desk 
top conferencing makes a distinction between the system functions, such as
setting up and tearing down calls, and application functions, such as
sending and receiving data. Thus while applications (such as a shared
electronic chalkboard) may be aware of events such as the start and end of
calls, they are unable to affect the way these events are handled in
detail. For example, the barring of incoming calls is normally regarded as
a system function which can be toggled on and off by the user and perhaps,
via an API call, by an application program.Accordingly, the invention provides a
</DESCRIPTION>
<CLAIMS>
A programmable workstation for collaborative working in a network of
workstations forming the nodes of the network, the network being connected

by physical links for the transmission of data between nodes;

the workstation comprising an operating system;
a network control program layer, running on the operating system, for
controlling physical routing of data between nodes; and
a collaborative application subsystem for interfacing with
application programs running on the workstation and responsive to a

predetermined application programming interface call from a call manager
program to establish the call manager program as the new call manager at the node to

handle incoming events which are not specific to any application program
instance at the node.
A workstation as claimed in claim 1 in which, if a call
manager already exists at the node, the predetermined application programming in
terface
call is directed to the existing call manager which, at its option, may

transfer handling of incoming events to the new call manager.
A workstation as claimed in claim 1 or claim 2 in which incoming
events which are specific to an application instance are passed directly to

that instance.
A workstation as claimed in any preceding claim in which such a
call manager responds to non-application specific

events passed to it by the collaborative application subsystem and naming
an application program, by directing the events to an existing instance of the

named application, by launching a new instance of the named application or by
handling the event itself .
A method of collaborative working in a network of programmable
workstations forming the nodes of a network connected by physical links for

the transmission of data between nodes, the method comprising in response
to a predetermined application programming interface call from a call

manager program running on the workstation, establishing the 
call manager program

as the new call manager
at the node to handle incoming events which are not

specific to any application program instance at the node.
A method as claimed in claim 5 in which, if a call
manager already exists at the node, the predetermined application programs

call is directed to the existing call manager, which, at its option, may
transfer handling of incoming events to the new call manager.
A method as claimed in claim 5 or claim 6 in which incoming events
which are specific to an application instance are passed directly to that

instance.
A method as claimed in any one of claims 5 to 7 in which such a
call manager responds to non-application specific events

naming an application program by directing the events to an existing
instance of the names application, by launching a new instance of the named

application, or by handling the event itself.
</CLAIMS>
</TEXT>
</DOC>
