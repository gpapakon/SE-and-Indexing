<DOC>
<DOCNO>EP-0642104</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Interactive volume rendering method and system.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06T1500	G06T1500	G06T1550	G06T1550	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06T	G06T	G06T	G06T	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06T15	G06T15	G06T15	G06T15	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
In order to reduce the amount of re-calculations needed when 
mapping functions to a color/opacity volume are changed, the processing 

of a volume rendering method is separated into two portions, the first 
depending on the volume data (i.e., a portion determined by the volume 

data) and the second depending on the mapping to the color and opacity. 
Pre-processing calculations will then be limited to the portion depending 

on the volume data, so as to thereby allow mapping functions to the color 
and opacity to be changed interactively. To this end, a "VIS volume" 

that consists of a data value, a shaded intensity, and a surface 
strength, and is expressed by 3 bytes per one voxel, is calculated and 

ray-traced. The color and opacity at each sampling point are determined 
when the VIS volume is sampled. Therefore, even if the mapping functions 

to the color and opacity are changed, it is not necessary to calculate 
the VIS module again. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MIYAZAWA TATSUO
</INVENTOR-NAME>
<INVENTOR-NAME>
MIYAZAWA, TATSUO
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a method and system for 
interactive volume rendering. In recent years, volume rendering methods have come to be used for 
image processing of CT scans, visualization of the computed results of 
fluid analysis, visualization of measurement data of resource 
exploration, etc. The method by Levoy is known as the typical volume 
rendering method (M. Levoy, "Display of Surfaces from Volume Data," IEEE 
CG & A, Vol. 8, No. 3, pp. 29-37, 1988). In the following, Levoy's method will be described with reference 
to Figure 2 for a case in which volume data is assumed to be three-dimensional 
array data and a ray tracing method is employed as the volume 
data projection method. A volume value (block 212) at a lattice point (voxel) (i,j,k) of 
volume data 200 is written as 
data(i,j,k). A shaded color C(i,j,k) (block 210) and an opacity α(i,j,k) (block 
214) at the lattice point (i,j,k) of a color/opacity volume are 
calculated according to the following procedure. 
Initial color 202: C₀(i,j,k) = {R₀(i,j,k), G₀(i,j,k), B₀(i,j,k) R₀(i,j,k) = ColorLUT(data(i,j,k), 0) G₀(i,j,k) = ColorLUT(data(i,j,k), 1) B₀(i,j,k) = ColorLUT(data(i,j,k), 2) In the above equations, "LUT" means table look-up operation. 
Initial opacity 208: α₀(i,j,k) α₀(i,j,k) = OpacityLUT(data(i,j,k)) Gradient vector 204: Gv(i,j,k) Gv(i,j,k) = {Gvx(i,j,k), Gvy(i,j,k), Gvz(i,j,k)} Gvx(i,j,k) = data(i+1,j,k) - data(i-1,j,k) Gvy(i,j,k) = data(i,j+1,k) - data(i,j-1,k) Gvz(i,j,k) = data(i,j,k+1) - data(i,j,k-1) Magnitude 206 of gradient vector: Gm(i,j,k) Gm(i,j,k) = |Gv(i,j,k)| Shaded intensity I(i,j,k) I(i,j,k) = ShadingLUT(Gv(i,j,k)) The shading intensity I(i,j,k) is omitted in Figure 2, but is used 
in calculating the shaded color 210 as described below. 
Surface strength S(i,j,k) S(i,j,k) = StrengthLUT(Gm(i,j,k)) The surface strength S(i,j,k) is also omitted in Figure 2, but is 
used in calculating the opacity 214. Using the above parameters, the 
following calculations are performed. 
Shaded color 210: C(i,j,k) = {R(i,j,k), G(i,j,k), B(i,j,k)} C(i,j,k) = C₀(i,j,k)*I(i,j,k) R(i,j,k) = R₀(i,j,k)*I(i,j,k) G(i,j,k)=G₀(i,j,k)*I(i,j,k) B(i,j,k) = B₀(i,j,k)*I(i,j,k) Opacity 214: α(i,j,k) α(i,j,k) = α₀(i,j,k)*S(i,j,k) The color/opacity volume consists of the shaded color (three 
components of R, G and B) and the opacity. More specifically, for the 
lattice point (i,j,k), the volume has the four components of 
R(i,j,k), G(i,j,k), B(i,j,k) and α(i,j,k). In addition to the above components, the original volume data 212 
needs to
</DESCRIPTION>
<CLAIMS>
A computerized volume rendering method, comprising the steps of: 

(a) providing volume data; 
(b) constructing a voxel at each lattice point of the volume data by a 
data value, an intensity, and a surface strength; 
(c) determining, for each ray, a data value, an intensity, and a 
surface strength at each sampling point along the ray, and calculating a 

sample color and a sample opacity based on the data value, intensity, and 
surface strength thus determined; and 
(d) determining, for each ray, the pixel value of an image to be 

generated by accumulating the sample color values and the sample 
opacities calculated in step (c) along the ray. 
A computerized volume rendering method, comprising the steps of: 

(a) providing volume data; 
(b) constructing a voxel at each lattice point of the volume data by a 
data value, an intensity, and a surface strength; 
(c) determining, for each ray, the data value, the intensity, and the 
surface strength of the voxel closest to each sampling point along the 

ray, and calculating the sample color and sample opacity of the voxel 
closest to the sampling point based on the data value, intensity, and 

surface strength thus determined; and 
(d) determining, for each ray, the pixel value of an image to be 
generated by accumulating the sample color values and the sample 

opacities calculated in step (c) along the ray. 
A volume rendering method according to claim 1 or 2, wherein the 
data value, intensity, and surface strength of the voxel each consist of 

1 byte, which means one voxel consists of 3 bytes. 
A computerized volume rendering method, comprising the steps of: 

(a) providing volume data; 
(b) constructing a voxel at each lattice point of the volume data by a 
data value, an intensity, and a surface strength; 
(c) determining an opacity mapping function and a color mapping 
function in response to designation of an opacity and a color from an 

operator; 
(d) determining, for each ray, a data value, an intensity, and a 
surface strength at each sampling point along the ray, and calculating a 

sample color and a sample opacity from the data value, intensity, and 
surface strength using the mapping functions determined in step (c); and 
(e) determining, for each ray, a pixel value of an image to be 
generated by accumulating the sample color values and the sample 

opacities calculated in step (d) along the ray. 
A volume rendering method according to claim 4, wherein the data 
value, intensity, and surface strength of the voxel each consist of 1 

byte, which means one voxel consists of 3 bytes. 
A volume rendering method according to claim 4, wherein each of the 
mapping functions is defined by a look-up table. 
A volume rendering system comprising: 

(a) a means for storing volume data; 
(b) a means for sampling the volume data, constructing a voxel at each 
of the sampling points by a data value, an intensity, and a surface 

strength, and storing the voxel thus constructed; 
(c) a means for determining an opacity mapping function and a color 
mapping function in response to designation of an opacity and a color 

from an operator; 
(d) a means for determining, for each ray, a data value, an intensity, 
and a surface strength at each sampling point along the ray, and 

calculating a sample color and a sample opacity from the data value, 
intensity, and surface strength using the mapping functions determined by 

means (c); and 
(e) means for determining, for each ray, the pixel value of an image to 
be generated by accumulating the sample color values and the sample 

opacities calculated by means (d) along the ray. 
A volume rendering system according to claim 7, wherein the data 
value, intensity, and surface strength of the voxel each consist of 1 

byte, which means one voxel consists of 3 bytes. 
A volume rendering system according to claim 7, wherein each of the 
mapping functions is defined by a look-up table. 
</CLAIMS>
</TEXT>
</DOC>
