<DOC>
<DOCNO>EP-0654734</DOCNO> 
<TEXT>
<INVENTION-TITLE>
System for speaking hypertext documents such as computerized help files
</INVENTION-TITLE>
<CLASSIFICATIONS>G10L1300	G06F316	G06F944	G06F1200	G06F316	G06F1200	G06F944	G10L1300	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G10L	G06F	G06F	G06F	G06F	G06F	G06F	G10L	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G10L13	G06F3	G06F9	G06F12	G06F3	G06F12	G06F9	G10L13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A system for speaking structured files 
such as computerized help files thereby reducing the 

amount of on-screen clutter and allowing an operator 
to receive help while simultaneously viewing the 

screen generated by a computer application program. 
In response to commands to process such files, a 

help engine is instantiated and, in accordance with 
parameters set by the operator, is set to give 

spoken help and/or visual help. When giving spoken 
help, hypertext links to other topics in the 

structured file are detected and stored, and in 
response to operator commands, the help engine jumps 

to those other topics and begins speaking the 
jumped-to topic. Likewise, as the help file is 

spoken, the hierarchical structure, if any, of 
topics in the file is detected and stored and in 

response to operator commands the help engine jumps 
to specified topics. Preferably, as the hypertext 

links and the hierarchical structure are spoken, 
they are spoken with aural cues such as a voice that 

is different from the voice used for the remainder 
of the topic. When other topics are jumped to, 

those other topics may be spoken in the same voice 
or in the different voice so as to assist the 

operator in navigation through the file. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
CANON INFORMATION SYST INC
</APPLICANT-NAME>
<APPLICANT-NAME>
CANON INFORMATION SYSTEMS, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
KODIMER MARIANNE L
</INVENTOR-NAME>
<INVENTOR-NAME>
TULLIS THOMAS S
</INVENTOR-NAME>
<INVENTOR-NAME>
KODIMER, MARIANNE L.
</INVENTOR-NAME>
<INVENTOR-NAME>
TULLIS, THOMAS S.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention concerns a
computerized system for speaking hypertext
documents, i.e. a document containing embedded links
to other locations in the document, such as a
computerized help file which contains embedded links
to multiple help topics. More particularly, the
system concerns a system for providing spoken help
information in response to a computer operator's
request for help with an application program such as
a word processing program or other information
processing program.With increasing sophistication, complexity
and capabilities of computer application programs
such as word processing programs and other 
information processing programs, more and more attention
has been focused on providing users of those application
programs with on-demand (or on-line) help. It is now
common, for example, for computer application programs
to designate a special key such as a "F1" key which, when
depressed during execution of the application program,
will provide the operator with help concerning the
application program. Help ordinarily consists of textual
information which is stored in a hypertext file of help
topics and which is retrieved from that file by a
separate computer program, normally called a "help
engine", and displayed in text form on the computer
screen. Such an operation is disclosed in the Microsoft
Professional Toolkit for Visual Basic-Help Compiler Guide
1992 pp 1-71.A disadvantage of displaying help information on the
computer screen is that the help information obstructs
the operator's view of the application program. More
particularly, an operator ordinarily requires help while
in the middle of executing a software task in conjunction
with the application program. Help therefore is
requested when the computer's screen is displaying
information with which the operator needs help. But when
the help information is displayed on the screen, it
obstructs the operator's view of the application program
with which he needs help, making it difficult to
implement the information provided by help. Commonly the
operator must read the help text, clear the screen of
that text, and then try to remember what it said.It is disclosed in an article entitled "Auditory
versus Visual Presentation of Help Messages" (Proceedings
of the Human Factors Society 35th Annual Meeting, Volume
1, 6th September 1991, San Francisco, CA US, pages 224
to 248, P A Savage et al), that help messages can be
presented orally on telephone sets as well as presented 
visually on the telephone sets equipped with display
screen
</DESCRIPTION>
<CLAIMS>
A method of processing a hypertext help file of
topics, at least some of the topics including text and

at least one hypertext link to a jump topic, the method
comprising the steps of:


receiving a request for a first topic of the
hypertext help file of topics;
generating speech serially for the text in the first
topic;
accessing a jump topic specified by a said hypertext
link in response to a user jump command; and
generating speech serially for the text in the jump
topic;

characterised by the step of:
generating speech for the or each hypertext link
when encountered during the serial speech generation for

the text and generating an aural cue so as to indicate
that a hypertext link and not text is being spoken.
A method according to claim 1, wherein the aural cue
comprises the generation of speech for the or each

hypertext link in a second voice which is different from
a first voice generated for the text in the first or jump

topic.
A method according to claim 1 or claim 2, including
optionally displaying the text and the or each hypertext

link of the topic for which speech is being generated.
A method according to claim 3, wherein the steps of
claim 3 are implemented by a help engine, the method

further comprising the steps of:

executing an application program which includes
operator-invocable commands to execute the help engine 

which is settable to provide any one of speech generated
help, displayed help, and both speech generated and

displayed help; and
instantiating the help engine in response to
operator commands.
A method according to claim 4, further comprising
the step of passing context of the application program

to the help engine, where speech is generated for topics
and optionally topics are displayed commencing with the

context passed from the application program.
A method according to claim 4 or claim 5, further
comprising the step of displaying a graphic user

interface by which the help engine is controlled.
A method according to claim 6, wherein the hypertext
help file is arranged hierarchically, and wherein the

graphic user interface includes a set of processing
commands to process the hierarchical levels of the

hypertext file.
A method according to claim 7, wherein the set of
processing commands includes commands to jump to

different topics.
A method according to claim 7, wherein the set of
processing commands includes commands to jump to

different levels.
A method according to claim 7, wherein the set of
processing commands includes commands to reposition the

speech generator and optional display of the topic. 
A method according to any preceding claim, further
comprising the step of storing one of said at least one

hypertext link.
A method according to claim 11, further comprising
the step of accessing the topic specified by the stored

link in response to user jump commands and generating
speech for the jump topic.
A method according to claim 12, further comprising
the step of returning to the jumped-from topic at the

conclusion of the jump topic.
A method according to any preceding claim, wherein
the hypertext file is arranged hierarchically, and

further comprising the step of detecting and storing the
hierarchical structure of topics.
A method according to claim 14, further comprising
the step of jumping to different topics in the stored

hierarchical structure in accordance with operator
commands.
A method according to claim 14, further comprising
the step of generating speech for the stored hierarchical

structure of topics.
A method according to claim 16, further comprising
the step of jumping to a selected one of the spoken

topics.
A method according to any preceding claim, further
comprising the steps of, while in the jump topic

accessing a second jump topic specified by another of 
said at least one hypertext link in response to a second

user jump command.
A method according to any preceding claim, further
comprising the step of returning to the first topic at

the conclusion of the generation of speech for the jump
topic.
A method according to any preceding claim, further
comprising the step of detecting context wherein the

first topic is context dependent.
A method according to any preceding claim, further
comprising the step of displaying a graphical user

interface by which an operator may issue jump commands.
A method according to claim 21, wherein said
graphical user interface receives commands to reposition

speech generation for the topic.
Apparatus for processing a hypertext help file of
topics, at least some of the topics including text and

at least one hypertext link to a jump topic, the
apparatus comprising:


receiving means for receiving a request for a first
topic of the hypertext help file of topics;
speech generation means for serially generating
speech for the text in the first topic; and
accessing means for accessing a jump topic specified
by a said hypertext link in response to a received user

jump command;

wherein said speech generation means is adapted to
generate speech serially for the text in the jump topic;

characterised in that: 
said speech generation means is adapted to generate
speech for the or each hypertext link when encountered

during the serial speech generation of the text and to
generate an aural cue to indicate that a hypertext link

and not text is being spoken.
Apparatus according to claim 23, wherein said speech
generation means is adapted to generate speech for the

or each hypertext link in a second voice which is
different from a first voice generated for the text in

the first or jump topic, so as to provide the aural cue
to indicate that a hypertext link and not text is being

spoken.
Apparatus according to claim 24, comprising a
processor for executing processor implementable

instructions, said processor being adapted to implement
processor implementable instructions to execute an

application program which includes operator invocable
commands to execute a help engine which is settable to

provide any one of speech generated help, displayed help,
and both speech generated and displayed help, said help

engine comprising said receiving means, said speech
generation means, said accessing means, and said display

control means.
Apparatus according to claim 25, wherein said
processor is adapted to pass context of the application

program to the help engine, and the help engine is
adapted to commence speech generation for topics and

optionally display topics with context passed from the
application program. 
Apparatus according to claim 25 or claim 26, wherein
said processor is adapted to generate a graphic user

interface for the control of the help engine.
Apparatus according to claim 27, wherein the
hypertext help file is arranged hierarchically, and the

processor is adapted to implement the graphic user
interface to include a set of processing commands to

process the hierarchical levels of the hypertext files.
Apparatus according to claim 28, wherein the
processor is adapted to implement the graphical user

interface to include commands to jump to different
topics.
Apparatus according to claim 28, wherein the
processor is adapted to implement the graphical user

interface to include commands to jump to different
levels.
Apparatus according to claim 28, wherein the
processor is adapted to implement the graphical user

interface to include commands to reposition the speech
generation and optional display of the topic.
Apparatus according to any one of claims 23 to 31,
further comprising means for storing one of said at least

one hypertext link.
Apparatus according to claim 32, wherein said help
engine is adapted to access the topics specified by the

stored link in response to user jump commands and to

generate speech for the jump topic. 
Apparatus according to claim 33, wherein said help
engine is adapted to return to the jumped-from topic at

the conclusion of the jump topic.
Apparatus according to any one of claims 23 to 34,
wherein the hypertext file is arranged hierarchically,

and said help engine is adapted to detect and store the
hierarchial structure of topics.
Apparatus according to claim 35, wherein said help
engine is adapted to jump to different topics in the

stored hierarchical structure in accordance with
operator commands.
Apparatus according to claim 36, wherein said help
engine is adapted to generate speech for the stored

hierarchical structure of topics.
Apparatus according to claim 37, wherein said speech
engine is adapted to jump to a selected one of the spoken

topics.
Apparatus according to any one of claims 23 to 38,
wherein said speech engine is adapted to, while in the

jump topic, access a second jump topic specified by
another of said at least one hypertext link in response

to a second user jump command.
Apparatus according to any one of claims 23 to 39,
wherein said help engine is adapted to return to the

first topic at the conclusion of the generation of speech
for the jump topic. 
Apparatus according to any one of claims 23 to 40,
wherein said help engine is adapted to detect context

wherein the first topic is context dependent.
Apparatus according to any one of claims 23 to 41,
wherein said processor is adapted to display a graphical

user interface by which an operator may issue jump
commands.
Apparatus according to claim 43, wherein said
processor is adapted to implement said graphical user

interface to receive commands to reposition speech
generation for the topic.
A storage medium storing program instructions for
controlling a processor to carry out the method of any

one of claims 1 to 22.
Processor implementable program instructions for controlling
a processor to carry out the method of any one of claims

1 to 22.
</CLAIMS>
</TEXT>
</DOC>
