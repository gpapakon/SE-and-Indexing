<DOC>
<DOCNO>EP-0628904</DOCNO> 
<TEXT>
<INVENTION-TITLE>
METHOD OF RUNNING TWO APPLICATIONS ON A COMPUTER SYSTEM.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3023	G06F3023	G06F3033	G06F3033	G06F3048	G06F3048	G06F944	G06F944	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F3	G06F3	G06F3	G06F3	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method in a computing system which includes a cursor 
(781) and an icon displayed on a monitor (14), the 

icon being used to reference a data file (849), and 
which includes, a first software application (846) which 

is able to utilize data in the data file (849), a second 
software application (101) which is able to utilize data 

in the file (849) and input means for allowing a user 
(843) to position the cursor (781) and to perform other 

actions which are detectable by the computing system, 
the method comprising the following steps: 


(a) at the direction of a user (843) using the input 
means, placing the cursor (781) over the icon; 
(b) upon the user (843) performing a first set of 
operations using the input means, starting the first 

software application (846), the first software 
application (846) performing operations on data within 

the data file (849); and, 
(c) upon the user (843) performing a second set of 
operations using the input means, staring the second 

software application (101), the first software 
application (846) performing operations on data within 

the data file (849). 
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
HEWLETT PACKARD CO
</APPLICANT-NAME>
<APPLICANT-NAME>
HEWLETT-PACKARD COMPANY
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CROW, WILLIAM M.
</INVENTOR-NAME>
<INVENTOR-NAME>
EHRLICH, YITZCHAK
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to the encapsulation of 
applications to be run on an object management facility. One problem that has made computer use difficult is 
inefficient file management systems. For instance, in a 
directory, there cannot exist too files with the same name. Further, there is data incompatibility between data 
files which are originated by different computer 
applications. Typically, each computer application operates 
independently from other computer applications. It is 
extremely rare that data from one computer application may be 
effectively incorporated into data from another application. 
If data is incorporated, it is difficult if not impossible to 
modify. Furthermore, once data has been transferred from a 
first application to a second application, it is usually 
impossible to return the date back to the first application 
to be modified. Once an environment has been presented which allows the 
effective transfer of data between applications, there 
remains the problem of upward compatibility for applications 
which were not originally designed to function in the 
environment.  In accordance with the preferred embodiment of the 
present invention a computing system having an object 
management facility is presented. The object management 
facility manages a plurality of objects. Each object 
references an application designed to run in conjunction with 
the object management facility. The computing system also 
includes an encapsulation system which facilitates the 
inclusion in the computing system of a first application not 
designed to run in conjunction with the object management 
facility. The encapsulation facility includes an 
encapsulation shell and a shell filter. The encapsulation 
shell is referenced by objects as if the encapsulation shell 
wag an application designed to run in conjunction with the 
object management facility. The encapsulation shell also 
acts as an interface between the object management facility 
and the first application. The shell filter interacts with 
the encapsulation shell and upon instruction from the 
encapsulation shell is able to intercept commands from a user 
to the first application. The shell filter also forwards to 
the first application commands generated by the encapsulated 
shell. The encapsulated shell may be used for a variety of 
applications. In order that the encapsulated shell may know 
particular information about a particular application, each 
application to be encapsulated by the encapsulated shell has 
associate
</DESCRIPTION>
<CLAIMS>
A method in a computing system which includes a 
cursor (781) and an icon displayed on a monitor (14), 

the icon being used to reference a data file (849), and 
which includes, a first software application (846) which 

is able to utilize data in the data file (849), a second 
software application (101) which is able to utilize data 

in the file (849) and input means for allowing a user 
(843) to position the cursor (781) and to perform other 

actions which are detectable by the computing system, 
the method comprising the following steps: 


(a) at the direction of a user (843) using the input 
means, placing the cursor (781) over the icon; 
(b) upon the user (843) performing a first set of 
operations using the input means, starting the first 

software application (846) , the first software 
application (846) performing operations on data within 

the data file (849); and, 
(c) upon the user (843) performing a second set of 
operations using the input means, staring the second 

software application (101) , the first software 
application (846) performing operations on data within 

the data file (849). 
A method as in Claim 1 wherein the input means 
includes a keyboard (19) and a mouse (20), the first 

set of operations includes depressing a button on the 
mouse (20) and the second set of operations includes 

holding down a first key on the keyboard (19) while 
depressing a button on the mouse (20). 
A method in a computing system which includes a 
cursor (781) and an icon displayed on a monitor (14), 

the icon being used to reference a data file (849), and 
which includes a software application (846) which is 

 
able to utilize data in the data file (849) , an 

encapsulation program (844, 845), and input means for 
allowing a user (843) to position the cursor (781) and 

to perform other actions which are detectable by the 
computing system, the encapsulation program (844, 845) 

including a first set of parameters which specify a 
first way in which the software application (846) is to 

use the data file (849) and a second set of parameters 
which specify a second way in which the software 

application (846) is to use the data file (849), the 
method comprising the following steps: 


(a) at the direction of a user (843) using the input 
means, placing the cursor (781) over the icon; 
(b) upon the user (843) performing a first set of 
operations using the input means, starting the software 

application (846) utilizing the first set of parameters; 
and, 
(c) upon the user (843) performing a second set of 
operations using the input means, starting the software 

application (846) using the second set of parameters. 
A method as in Claim 3 wherein the input means 
includes a keyboard (129) and a mouse (20), the first 

set of operations includes depressing a button on the 
mouse (20) and the second set of operations includes 

holding down a first key on the keyboard (19) while 
depressing on the mouse (20). 
</CLAIMS>
</TEXT>
</DOC>
