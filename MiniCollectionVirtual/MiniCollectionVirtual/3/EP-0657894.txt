<DOC>
<DOCNO>EP-0657894</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method and apparatus for memory dynamic burn-in and test.
</INVENTION-TITLE>
<CLASSIFICATIONS>G11C2904	G11C2910	G11C2950	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G11C	G11C	G11C	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G11C29	G11C29	G11C29	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A memory embedded in a integrated processor chip is 
dynamically stressed tested by repeatedly writing a test 

pattern to the data locations of the memory in which 
a high percentage of the memory cells are sequentially written 

with complementary data in order to create a high stress on 
the memory devices. The test pattern is generated as 

a function of the number of address locations of the memory 
and the number of data bits of a memory data word. The test 

pattern is rotated each time the memory is addressed. The 
test pattern preferably has a contiguous group of digits with 

the number of digits in the contiguous group being a function 
of the number of address locations and the number of data bits 

in the memory word. The memory data input register is 
configured as a recirculating loop and additional dummy bits 

are added to provide recirculating loops longer than the data 
input register. A plurality of independent circulating loops 

may be created in the data input register or in combination 
with a number of dummy register bits. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BERRY ROBERT WALTER JR
</INVENTOR-NAME>
<INVENTOR-NAME>
KOENEMANN BERND KARL F
</INVENTOR-NAME>
<INVENTOR-NAME>
SCARPERO WILLIAM JOHN JR
</INVENTOR-NAME>
<INVENTOR-NAME>
SHEPHARD PHILIP GEORGE III
</INVENTOR-NAME>
<INVENTOR-NAME>
WAGNER KENNETH DAVID
</INVENTOR-NAME>
<INVENTOR-NAME>
YASAR GULSUN
</INVENTOR-NAME>
<INVENTOR-NAME>
BERRY, ROBERT WALTER, JR.
</INVENTOR-NAME>
<INVENTOR-NAME>
KOENEMANN, BERND KARL F.
</INVENTOR-NAME>
<INVENTOR-NAME>
SCARPERO, WILLIAM JOHN, JR.
</INVENTOR-NAME>
<INVENTOR-NAME>
SHEPHARD, PHILIP GEORGE, III
</INVENTOR-NAME>
<INVENTOR-NAME>
WAGNER, KENNETH DAVID
</INVENTOR-NAME>
<INVENTOR-NAME>
YASAR, GULSUN
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention relates generally to improved methods and 
apparatus for exercising and testing memory devices, and, more 
particularly, to burn-in and tests of integrated circuit 
memories. It is well recognized that failures in integrated circuit and 
electronic devices tend to occur in the first part of the life 
cycle. Furthermore, the repair or replacement of integrated 
circuits in assembled systems in the field is expensive both 
from the point of view of performance of the repair and from 
the significant system down-time which may result as well as 
from errors which may have been introduced in the system 
because of the failed part. To reduce the number of failures 
in newly installed systems, it is not uncommon to exercise the 
device at an elevated temperature or, in what is known as a 
burn-in operation, before the device is assembled into a 
system, in addition to performing standard operational tests 
on the device. The purpose of the burn-in operation is not only to test the 
operability of the device, but to exercise and stress the 
circuitry in order to allow the circuitry to mature and to 
cause the failure of any circuits which are only marginally 
operable and which will fail in the early part of the life 
cycle. Prior art testing arrangements typically apply randomly 
generated data words to a memory for burn-in and test purposes 
with the assumption that the majority of all possible 
combinations, which could cause failures, will be generated. 
It is recognized that a greater stress is applied to the  
 
memory devices when the memory devices are written 
sequentially by a selected data bit and its complement 
in order to switch the circuits more often. One prior art 
patent, U.S. Patent 5,138,619 describes the application of 
randomly generated test pattern to a number of address 
locations of a memory device followed by applying the 
complemented test pattern in order to provide maximum stress 
on the memory device. A problem, however, with this prior art 
arrangement and all other prior art arrangements that apply 
randomly generated test patterns is that there is no 
assurance that a specific pattern, such as consecutive 0's and 
1's for all combinations of bits, will be generated. In order 
to increase the probability that all desired patterns will be 
generated, the test cycle may be increased. However, 
not all bits may be switched with the same frequency for the 
purpose of stimulating failures in weak devices. In large scale integrated circuitry, it is not uncommon to use 
b
</DESCRIPTION>
<CLAIMS>
A method of selectively stress testing memory cells 
of an integrated circuit memory having a predefined 

number of memory address locations storing data 
words of a predefined number of data bits, the 

method comprising the steps of: 

A) generating a test pattern as a function of the 
predefined number of address locations and the 

predefined number of data bits; 
B) storing the test pattern in a data input register and 
storing a selected memory address in an address register; 
C) writing the test pattern from the data input register 
to the memory address location defined in the address 

register; 
D) rotating the test pattern stored in the data input 
register; 
E) storing a next address in the address register 
F) repeating steps C through E a selected number of 
times. 
The method in accordance with claim 1 wherein the 
step of generating a test pattern comprises 

generating a test pattern having a number of 
contiguous digits of a first binary value and a 

number of contiguous digits of a second 
binary value complementary to the first binary value and 

wherein the number of contiguous digits of the first 
binary value is a function of the predefined number of 

memory address locations and the number of data bits. 
The method in accordance with claim 2 wherein the 
step of generating a test pattern comprises 

generating a data pattern wherein the number of 
contiguous digits of the first binary value is a function 

of the absolute value of the difference between the 
predefined number of address locations and an 

integral multiple of the predefined number of data 
bits. 
The method in accordance with claim 2 wherein the 
step of generating a test pattern comprises 

generating a data pattern wherein the number of 
contiguous digits of the first binary value is equal to 

the absolute value of the difference between the 
predefined number of address locations and anintegral 

multiple of the predefined number of data bits. 
The method in accordance with claim 1 wherein the 
step of rotating comprises rotating the test pattern 

in a recirculating loop of predefined length. 
The method in accordance with claim 5 wherein the 
step of rotating the test patterns in a 

recirculating loop comprises rotating the test 
pattern in a memory data input register having a 

predefined number of bit locations corresponding to 
the predefined number of data bits. 
The method in accordance with claim 6 wherein the 
step of rotating the test pattern in a recirculating 

loop comprises rotating the test pattern through at 
least one additional bit location. 
The method in accordance with claim 5 and further 
comprising the step of defining the length of the 

recirculating loop as function of the predefined 
number of memory address locations. 
The method in accordance with claim 8 wherein the 
step of generating a test pattern comprises the step 

of defining the length of the recirculating 
loop as a function of the number of contiguous digits of 

a selected binary value in the test pattern. 
The method in accordance with claim 9 wherein the 
step of defining includes defining the length of the 

recirculating loop to correspond to a multiplication 
factor of a number derived as the sum of the number 

defining the contiguous digits and the predefined number 
of addresses. 
The method in accordance with claim 1 wherein the 
step of rotating comprises rotating the test pattern 

in a plurality of independent recirculating loops in 
the data input register. 
The method in accordance with claim 11 wherein each 
of the recirculating loops has a length which is 

defined as a function of the predetermined 
number of addresses. 
The method in accordance with claim 12 wherein the 
length of each of the recirculating loops is further 

defined as the number of contiguous digits of a 
selected value in the test pattern. 
The method in accordance with claim 13 wherein the 
length of each of the recirculating loops 

corresponds to a multiplication factor of a number 
derived as the sum of the number defining the 

contiguous digits and the predefined number of 
addresses. 
The method in accordance with claim 11 and further 
comprising the step of adding at least one dummy 

register to data input register and the step of 
selecting one of the recirculating loops such that 

the selected loop extends beyond the data input 
register and includes at least one dummy register. 
The method in accordance with claim 1 wherein the 
step of generating a test pattern comprises 

generating a test pattern having a number of 
contiguous digits of a first binary value and a number of 

contiguous digits of a second binary value 
complementary to the first binary value and wherein 

the number of contiguous digits of the first binary 
value is a function of the predefined number of 

memory address locations. 
The method in accordance with claim 16 wherein the 
number of contiguous digits of the first binary 

number equals the predefined number of memory 
address locations. 
The method in accordance with claim 1 wherein the 
test pattern comprises a number of contiguous bits 

of a first binary value and a number of contiguous 
bits of a second binary value complementary to the 

first binary value and wherein the step of rotating 
comprises rotating the test pattern in a 

recirculating loop of a length which is a 
multiplication factor of a number defined as the 

product of a first number which is a function of the 
sum of the number of contiguous digits of the first 

binary value and the predefined number of address 
locations, and a second number which is a function 

of the difference between the number defining the 
number of contiguous digits of the first binary 

value and the predefined number of address 
locations. 
An integrated circuit chip comprising: 
an embedded memory device; 

memory address generating circuitry connected to the 
memory device operative to periodically apply a 

modified memory address to the memory; 
a data input register circuit connected to the memory to 

provide data to be written in the memory and operative as 
a shift register, the shift register having a number of 

register bit positions corresponding to the length of a 
memory data word and at least one additional bit 

position, the shift register circuit operative to 
periodically rotate a data word through the full length 

of the shift register circuit, including the 
additional bit position, 
and to write the rotated data 
word to the memory. 
The integrated circuit chip in accordance with claim 
19 wherein the shift register circuit comprises a 

plurality of the additional bit positions. 
The integrated circuit chip in accordance with claim 
19 and further comprising select circuitry operative 

to selective supply a signal from one of the 
register bit positions or form one of the additional 

bit positions to an input of the shift register 
circuit to enable data stored in the shift register 

circuitry to be selectively rotated through a variable 
bit length loop. 
The integrated circuit chip in accordance with claim 
19 and further comprising read/write control 

circuitry and mode control circuitry selectively 
controlling the read/write circuitry to repeatedly 

write data to memory and to control the data input 
register circuit to write to a next memory location a 

data word rotated by at least one bit position from a 
 

data word written to a previously written memory 
location. 
</CLAIMS>
</TEXT>
</DOC>
