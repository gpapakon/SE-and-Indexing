<DOC>
<DOCNO>EP-0650115</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Multiplier capable of calculating double precision, single precision, inner product and multiplying complex numbers
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F748	G06F7544	G06F753	G06F748	G06F752	G06F7533	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F7	G06F7	G06F7	G06F7	G06F7	G06F7	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
An AND gate (7A) inputs the most significant bit of 
a lower word (Y₃₋₀) of an multiplicand or "0" to an 

input terminal of the least significant bit of Booth's 
decoders (1A and 1B) to which an upper word (Y₇₋₄) of 

the multiplicand is inputted based on a control signal 
(S₁). An AND gate (7B) replaces a part (P₀₃ to P₀₀, P₁₃ 

to P₁₀) of a partial products with "0" based on the 
control signal (S₁). A selector (10) replaces other 

part (P₂₈ to P₂₅, P₃₈ to P₃₅) of the partial products 
with partial products (P₂₄ and P₃₄) of the lower bits 

than the other part of the partial products. Whereby, a 
plurality of pairs of data can be multiplied at one 

time. 

</ABSTRACT>
<APPLICANTS>
</APPLICANTS>
<INVENTORS>
</INVENTORS>
<DESCRIPTION>
The invention relates to a multiplier using Booth's algorithm
for multiplying a multiplier and a multiplicand according to
the preamble of claim 1 as known from EP 0 239 899.Furthermore, EP 209 446 describes a parallel multiplier using
Booth's decoding technique. A dividing means in response to a
control signal passes either zero or the most significant bit
of a lower portion to the least significant bit of the higher
portion of the multiplicand.FIGS. 1A and 1B show a conventional parallel
multiplier using Booth's algorithm. In FIGS. 1A and 1B,
reference numeral 1 is a Booth's decoder, 2: a Booth's
selector, and 3: a parallel adding circuit for adding
partial products.FIG. 2 shows an example of a circuit forming the
Booth's decoder 1 of FIG. 1A. In FIG. 2, reference
numeral 4 is an NAND gate, 5: an NOR gate, 6: an OR
gate, 7: an AND gate, and 8: an inverter.FIG. 3 shows an example of a circuit forming the
Booth's selector 2 of FIG. 1A. In FIG. 3, reference
numeral 9 is an exclusive NOR gate.Regarding the parallel adding circuit 3, the
parallel adding circuit, which is disclosed in Japanese
Patent Application KOKAI Publication No. 63-55627, can
be used.Booth's algorithm is algorithm for multiplying a
multiplier X and a multiplicand Y, which are expressed
by twos complement, together at high speed as shown in
equations (1) and (2). In this algorithm, as shown in
equation (3), if a value of the multiplicand Y is
decoded every three bits by the decoder 1, and each bit
of the multiplier X is selected by the selector 2 in  
accordance with the decoding result, a partial product
Pm is generated.A product Z can be obtained by adding the partial
products Pm from m = 0 to m = (n/2)-1 as shown in
equation (4). According to this algorithm, since the
number of the partial products can be reduced to a half
of the case in which an array multiplier using an AND
gate to generate the partial products, the calculating
speed can be increased. Normally, a value of y2m-1 is
set to 0 when m = 0.
Multiplier X = -2n-1xn-1 + 2n-2xn-2 +
... + 2x1 + x0Multiplicand Y = -2n-1yn-1 + 2n-2yn-2 +
... + 2y1 + y0PARTIAL PRODUCTS Pm = X (-2y2m+1 + y2m + y2m-1) 22m
wherein y-1 = 0.
In recent years, a portable data communication
apparatus has been widely used. As an LSI, which is
mounted on the apparatus, an LSI whose consumption of
electrical power is low is required so as to prolong a
life of a battery. Moreover, in order to deal with
noise and an insufficiency of a communication channel
capacity, the digital processing is essential, and
an
</DESCRIPTION>
<CLAIMS>
A multiplier using Booth's algorithm for multiplying a
multiplier (X) and a multiplicand (Y) each including a

predetermined number of bits, said multiplier and said
multiplicand each consisting of a lower word (X3-X0; Y3-Y0)

including a first subset (X3-Y0; Y3-Y0) of bits
counted from the least significand bit (X0, Y0) and of a

host word (X7-X4; Y7-Y4) including the bits of said
multiplier and multiplicand not contained in the

respective first subset of bits, comprising:

a)
 a first Booth's decoder (1A, 1B) receiving as input
said host word of said multiplicand;
b)
 a second Booth's decoder (1C, 1D) receiving as input
the lower word of said multiplicand;
c)
 a first to fourth Booth's selector arrays (P00-P03,
P10-P13; P04-P08, P14-P18; P20-P23, P30-P33; P24-P28,

P34-P38),

c1) said first Booth's selector array (P00-P03; P10-P13)
including first selectors (2) adapted to

produce partial products (P00-P03; P10-P13)
dependent on the output of said second Booth's

decoder (1C, 1D) and the bits of said lower word
(X3-X0) of said multiplier;
c2) said second Booth's selector array (P04-P08,
P14-P18) including second selectors (2) adapted

to produce partial products (P04-P08, P14-P18)
dependent on the output of said second Booth's

decoder (1C, 1D) and the bits of said host word
(X7-X4) of said multiplier;
c3) said third Booth's selector array (P20-P23, P30-P33)
including third selectors (2) adapted to

produce partial products (P20-P23, P30-P33)
dependent on the output of said first Booth's

decoder (1A, 1B) and the bits of said lower word
(X3-X0) of said multiplier; and 
c4) said fourth Booth's selector array (P14-P28,
P34-P38) including fourth selectors (2) adapted

to produce partial products (P24-P28, P34-P38)
dependent on the output of said first Booth's

decoder (1A, 1B) and the bits of said host word
(X7-X4) of said multiplier;
characterized by
d)
 a multiplicand dividing means (7A) for receiving a
control signal (S1) and for inputting to an input

terminal of said first Booth's decoder (1A, 1B),
where the least significant bit (Y4) of the host word

is input

the most significant bit (Y3) of said lower word
(Y3-Y0) of said multiplicand when said control

signal (S1) has a first level (
1
), and
"0" when said control signal (S1) has a second
level (
0
);
e)
 a zeroising means (7B) for receiving said control
signal (S1) and for applying a "0" to the first

selectors (2) of said first Booth's selector array
(P03-P00; P13-P10), when said control signal (S1) has

said second level (0);
f)
 a bit extension means (10) for receiving said control
signal (S1) and for applying to the fourth selectors

(2) of said fourth Booth's selector array (P24-P28,

P34-P38) the most significant bit (X3) of the lower
word (X3-X0) of said multiplier (X7-X0), when said

control signal (S1) has said second level (0);
wherein
g)
 all said generated partial products (P00-P38) are
provided to an adder (3) for addition in order to

obtain the multiplication result (Z0-Z14).
A multiplier using Booth's algorithm according to claim 1,
characterized in that

when said control signal (S1) has said first level (1) and
said multiplicand dividing means (7A) inputs the most

significant bit (Y3) of said lower word (Y3-Y0) of said
multiplicand to said input terminal of said first Booth's 

decoder (1A, 1B) where the least significant bit (Y4) of
the host word is input, said adder (3) outputs a single

precision or double precision multiplication result (Z).
A multiplier using Booth's algorithm according to claim 1,
characterized in that

when a set of bits a
1
 and a set of bits a
0
 are input to
the host word and the lower word of said multiplier,

respectively, and a set of bits b
0
 and a set of bits b
1

are input to the host word and the lower word of said
multiplicand, respectively, and said control signal (S1)

has said second level (0) and said multiplicand dividing
means (7A) inputs "0" to said input terminal of said first

Booth's decoder (1A, 1B) where the least significant bit
(Y4) of the host word is input, said adder (3) outputs as

a multiplication result (Z) an inner product of the vector

A
=(a
0
, a
1
) and 
B
=(b
0
, b
1
).
A multiplier using Booth's algorithm according to claim 1,
characterized by

a multiplicand complementing means (11) for inputting "0"
or "1" to an input terminal of the least significant bit

of said second Booth's decoder, and for inputting the
lower word of the multiplicand or the reversed signal to

said second Booth's decoder (1C, 1D).
A multiplier using Booth's algorithm according to claim 4,
characterized in that

when a set of bits b and a set of bits a are input to the
host word and the lower word of said multiplier,

respectively, and a set of bits c and a set of bits d are
input to the host word and the lower word of said

multiplicand, respectively, "1" is input to the input
terminal of the least significant bit of said second

Booth's decoder (1C, 1D) by said multiplicant
complementing means (11), the reversed signal of the lower

word of the multiplicand is input to the second Booth's
decoder (1C, 1D) by said multiplicand complementing means 

(11), "0" is input to the input terminal of the least
significant bit of said first Booth's decoder (1A, 1B) by

said multiplicant dividing means (7A) and said control
signal (S1) has said second level (0), said adder (3)

outputs as a multiplication result (Z) the real part of a
multiplication of the two complex numbers F = a + jb and G

= c + jd.
A multiplier using Booth's algorithm according to claim 4,
characterized in that

when a set of bits a and a set of bits b are input to the
host word and the lower word of said multiplier,

respectively, and a set of bits c and a set of bits d are
input to the host word and the lower word of said

multiplicand, respectively, "0" is input to the input
terminal of the least significant bit of said second

Booth's decoder (1C, 1D) by said multiplicand
complementing means (11), the lower word of the

multiplcand is input to said second Booth's decoder by
said multiplicand complementing means (11), "0" is input

to the input terminal of the least significant bit of said
first Booth's decoder (1A, 1B) by said multiplicand

dividing means (7A) and said control signal (S1) has said
second level (0), said adder (3) outputs as a

multiplication result (Z) the imaginary part of a
multiplication of the two complex numbers F = a + jb and G

= c + jd.
A multiplier using Booth's algorithm according to claim 1,
characterized by

a multiplicand reversing means (11, 6) for inputting the
host word of the multiplicand or the reversed signal to

said frist Booth's decoder.
A multiplier using Booth's algorithm according to claim 7,
characterized in that

when a set of bits a and a set of bits b are input to the
host word and the lower word of said multiplier,

respectively, and a set of bits d and a set of bits c are 
input to the host word and the lower word of said

multiplicand, respectively, a reversed signal of said host
word of the multiplicand is input to said first Booth's

decoder (1A, 1B) by said multiplicant reversing means (11,
6), "1" is input to the input terminal of the least

significant bit of said first Booth's decoder (1A, 1B) by
said multiplicand reversing means (11,6) and said control

signal (S1) has said second level (0), said adder (3)
outputs as a multiplication result (Z) the real part of a

multiplication of the two complex numbers F = a + jb and G
= c + jd.
A multiplier using Booth's algorithm according to claim 7,
characterized in that

when a set of bits a and a set of bits b are input to the
host word and the lower word of said multiplier,

respectively, and a set of bits c and a set of bits d are
input to the host word and the lower word of said

multiplicand, respectively, said host word of the
multiplicand is input to said first Booth's decoder (1A,

1B) by said multiplicand reversing means (11, 6), "0" is
input to the input terminal of the least significant bit

of said first Booth's decoder (1A, 1B) by said
multiplicand dividing means (7A) and said control signal

(S1) has said second level (0), said adder (3) outputs as
a multiplication result (Z) the imaginary part of a

multiplication of the two complex numbers F = a + jb and G
= c + jd.
</CLAIMS>
</TEXT>
</DOC>
