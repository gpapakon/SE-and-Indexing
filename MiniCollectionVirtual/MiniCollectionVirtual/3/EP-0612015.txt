<DOC>
<DOCNO>EP-0612015</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Improved disk array system having special parity groups for data blocks with high update activity.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F306	G06F306	G06F1110	G06F1110	G06F1208	G06F1208	G06F1212	G06F1212	G11B2018	G11B2018	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G11B	G11B	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F11	G06F11	G06F12	G06F12	G06F12	G06F12	G11B20	G11B20	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
In a digital storage disk array system in which parity blocks 
are created and stored in order to be able to recover lost data 

blocks in the event of failure of a disk, high-activity parity 
groups are created for data blocks having high write activity 

and low-activity parity groups are created for data blocks not 
having high write activity. High-activity parity blocks formed 

from the high-activity data blocks are then stored in a buffer 
memory of a controller rather than on the disks in order to 

reduce the number of disk accesses during updating. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
DAN ASIT
</INVENTOR-NAME>
<INVENTOR-NAME>
WU KUN-LUNG
</INVENTOR-NAME>
<INVENTOR-NAME>
YU PHILIP SHI-LUNG
</INVENTOR-NAME>
<INVENTOR-NAME>
DAN, ASIT
</INVENTOR-NAME>
<INVENTOR-NAME>
WU, KUN-LUNG
</INVENTOR-NAME>
<INVENTOR-NAME>
YU, PHILIP SHI-LUNG
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to permanent storage systems 
for digital information, especially those of the disk type, and 
more particularly to disk array systems which create and store 
parity blocks in order to be able to recover from a disk 
failure. A Redundant Array of Inexpensive Disks (RAID) has been proposed 
as a means for providing large storage of digital information 
with high throughput and at a low cost. The idea with RAID is 
to use less expensive disks, which individually might have a 
higher chance of failure, but then to add enough redundancy by 
creating and storing parity blocks to be able to recover from a 
disk failure. At least one disk failure is typically tolerated 
and some schemes have been proposed which allow recovery when 
more than one disk fails simultaneously. Fig. 1 shows a disk 
array subsystem architecture on which a RAID organization can 
be implemented. A disk controller 30 having a cache 31 manages 
an array of inexpensive disks 40-43. In a RAID organization 
with a total of N+1 disks, one parity block is created for each 
N data blocks, and each of these N+1 blocks is stored on a 
different disk. A parity block is computed from N data blocks 
by computing a bitwise "Exclusive Or" of the N data blocks. The 
parity block along with the N data blocks from which that 
parity block was computed are called a parity group. Any block 
in a parity group can be computed from the other blocks of 
that parity group. In "A Case for Redundant Arrays of Inexpensive Disks (RAID)," 
Proc. of ACM SIGMOD International Conference on Management of 
Data, pp. 109-116, 1988, D. A. Patterson, G. Gibson and R. H.  
 
Katz describe five types of disk arrays called RAID level 1 
through 5. Of particular interest are disk arrays with an 
organization of RAID level 5, because the parity blocks in this 
RAID type are distributed evenly across all disks and therefore 
cause no bottleneck problems. Fig. 2 shows a data mapping for a 
RAID level 5 system, where Di represents data block i and P i 
represents parity block i. In Fig. 2, P0 contains the parity or 
XOR (âŠ•) of data blocks D0, D1, D2 and D3; parity blocks P0, P1, 
P2, P3 and P4 are stored on different 
disks. In a RAID environment, unfortunately a disk write operation is 
far more expensive than on a traditional disk system because it 
consists of four disk access operations as compared with two 
disk access operations on a traditional disk system. Whenever 
the disk controller in a RAID organization receives a request 
to write a
</DESCRIPTION>
<CLAIMS>
An improved digital information storage disk array system 
of the type wherein data blocks (Di) are stored on a 

plurality of disks (40-43) by a controller (30) and parity 
blocks (100-105) are derived from said data blocks and 

stored for use in recovering lost data blocks in the event 
of a disk failure, said improvement comprising: 

means for dividing said data blocks into a group of 
high-activity data blocks and a group of low-activity data 

blocks based upon anticipated write activity to each of 
said data blocks; 

means for defining high-activity parity groups for said 
high-activity data blocks and for defining low-activity 

parity groups for said low-activity data blocks; 
a high-activity parity block being derived for each said 

high-activity parity group from said high-activity data 
blocks in said each high-activity parity group; 

a low-activity parity block being derived for each said 
low-activity parity group from said low-activity data 

blocks in said each low-activity parity group; and 
means for storing said high-activity parity blocks in said 

controller and for storing said low-activity parity blocks 
on said disks, 

whereby updates to said high-activity parity blocks are 
made by said controller without accessing said disks, 

thereby reducing disk access activity. 
An improved digital information storage disk array system 
as defined in Claim 1 wherein said storage disk array 

system is a RAID system. 
An improved digital information storage disk array system 
as defined in Claim 1 wherein said low-activity data 

blocks and said low-activity parity block of any said 
low-activity parity group are each stored on separate ones 

of said disks. 
An improved digital information storage disk array system 
as defined in Claim 3 wherein said low-activity parity 

blocks are stored on said disks in a distributed fashion. 
An improved digital information storage disk array system 
as defined in Claim 1 wherein said high-activity data 

blocks of any said high-activity parity group are each 
stored on separate ones of said disks. 
An improved digital information storage disk array system 
as defined in Claim 1 wherein said means for dividing 

comprises means for determining an updating rate for each 
of said data blocks. 
An improved digital informatin storage disk array system 
as defined in Claim 1 wherein said means for defining 

comprises means for provisionally assigning each of said 
data blocks to one of a plurality of individual default 

parity groups. 
An improved digital information storage disk array system 
as defined in Claim 7 wherein said means for defining 

low-activity parity groups comprises means for removing 
high-activity data blocks from said default parity groups. 
An improved digital information storage disk array system 
as defined in Claim 8 wherein said means for defining 

high-activity parity groups comprises means for adding 
each one of said removed high-activity data blocks to one 

of a plurality of high-activity parity groups. 
An improved digital information storage disk array system 
as defined in Claim 9 wherein said means for dividing 

further comprises means for removing high-activity data 
blocks which no longer have a high rate of update activity 

from said high-activity parity groups and returning each 
of said removed high-activity data blocks to its 

provisionally assigned default parity group. 
An improved controller for reducing write activity to disk 
for a digital information storage disk array, said array 

being of the type wherein at least a portion of each disk 
in said array is partitioned into equally sized storage 

blocks and parity groups of said storage blocks are 
defined and maintained by said controller, each said 

parity group comprising a storage block from each one of a 
multiplicity of said disks, said storage blocks in each 

said parity group comprising a plurality of data blocks 
and a single parity block, said parity block in any one of 

said parity groups storing information derived from said 
data blocks in said any one parity group and being usable 

to recover data blocks of said any one parity group in the 
event of disk failures, said improvement comprising: 

means for identifying a subset of all of said data blocks, 
said data blocks in said subset being anticipated to have 

a higher likelihood of being modified than said data 
blocks not in said subset; 

means for defining special parity groups for said subset 
of data blocks, each one of said special parity groups 

comprising: 
a plurality of data blocks from said subset, each said 

data block in said one special parity group being stored 
on a separate one of said disks; and 

a special parity block derived from said data blocks in 
said one special parity group;

 
means for removing any said data blocks which are part of 

any said special parity group from any said parity group 
which is not one of said special parity groups and for 

updating any said parity block of any said parity group 
from which one of said data blocks has been removed; and 

means for storing said special parity blocks in said 
controller rather than on said disks, 

whereby updates to said special parity blocks are made by 
said controller without writing to said disks, thereby 

reducing write activity to said disks. 
An improved method for storing digital information on a 
disk array of the type wherein data blocks are stored on a 

plurality of disks (40-43) by a controller (30) and parity 
blocks (100-105) are derived from said data blocks and 

stored for use in recovering lost data blocks in the event 
of a disk failure, said improved method comprising the 

steps of: 
dividing said data blocks into a group of high-activity 

data blocks and a group of low-activity data blocks based 
upon anticipated write activity to each of said data 

blocks; 
defining high-activity parity groups for said 

high-activity data blocks; 
defining low-activity parity groups for said low-activity 

data blocks; 
deriving a high-activity parity block for each said 

high-activity parity group from said high-activity data 
blocks in said each high-activity parity group; 

deriving a low-activity parity block for each said 
low-activity parity group from said low-activity data 

blocks in said each low-activity parity group;
 

storing said high-activity parity blocks in said 
controller; and 

storing said low-activity parity blocks on said disks, 
whereby updates to said high-activity parity blocks are 

made by said controller without accessing said disks, 
thereby reducing disk access activity. 
</CLAIMS>
</TEXT>
</DOC>
