<DOC>
<DOCNO>EP-0652520</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Cache control system for managing validity status of data stored in a cache memory.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1208	G06F1208	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F12	G06F12	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method and system in a data processing system are disclosed for 
efficiently managing validity status of data stored in a cache memory 

array. The cache memory array includes a plurality of rows and columns, 
wherein each row includes a tag portion, a status portion, and a data 

portion. A tag register is established and a selected search tag is 
stored within the tag register. The selected search tag is indicative of 

the validity status of the data portion stored within each row of the 
cache memory array. A column of tag data is then read from the tag 

portion of each row of the cache memory array. The column of tag data is 
then logically combined with the selected search tag to form a column of 

status data indicative of the validity status of the data portion of each 
row. Finally, the column of status data is written to a column within 

the status portion of each row in the cache memory array, thereafter 
indicating the validity status of the data portion within each row 

utilizing a single write to the status portion of the cache memory array. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BRETERNITZ MAURICIO DR JNR
</INVENTOR-NAME>
<INVENTOR-NAME>
BRETERNITZ, MAURICIO, DR. JNR.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates in general to the management of cache 
memory and more particularly to invalidating selected memory locations 
within a cache memory system. In an attempt to reach the long-standing goal of increasing central 
processing unit (CPU) performance, data processing system designers have 
made use of various cache memory configurations to substantially reduce 
CPU "wait states." A wait state occurs when the CPU idly waits for 
other components, such as a main memory operating at a slower speed, to 
provide instructions and/or data requested by the CPU. During such a 
wait state, CPU activity is suspended for one or more clock cycles. The 
introduction of wait states can severely reduce the performance of even 
the fastest CPU integrated circuits. One known method of reducing the introduction of wait states is to 
utilize faster random access memory or "RAM" integrated circuits in the 
main memory of the data processing system. However, such faster RAM is 
very expensive and considerably raises the cost of a data processing 
system. Another known method of reducing the introduction of wait states 
is to utilize sophisticated memory management techniques such as "memory 
caching." In memory caching, only a small portion of the data processing 
system's memory is made up of very fast, expensive memory integrated 
circuits. A cache memory is an auxiliary memory that provides a buffering 
capability by which the relatively slow and increasingly large main 
memory may interface with the CPU at the processor cycle time in order to 
optimize CPU performance by improving effective data transfer rates. 
Cache memory comprises a small, relatively fast access memory which is 
interposed between a larger, relatively slow main system memory. In many 
applications, the existence of cache memory is essentially hidden or 
"transparent" to both the CPU and the data processing system user. Typically, cache memory is managed by control logic which is 
designed to load the cache memory with information which is most 
frequently accessed by the CPU as directed by a computer application 
program. The cache memory control logic must also make space available 
for new information or clear out old information which is no longer 
needed by the application program. Therefore, cache management  
 
procedures necessarily include selectively invalidating rows of data in 
the cache memory. This process of making new memory space available and clearing out 
old information by selectively invalidating rows of
</DESCRIPTION>
<CLAIMS>
A cache control system for managing validity status of data stored 
in a cache memory array (68), said cache memory array (63) having a 

plurality of rows and columns, each of said rows having a tag portion 
(80), a status portion (82), and a data portion (84), said system 

comprising: 
   a tag register (90); 

   means for storing a selected search tag within said tag register 
(90), said selected search tag indicative of a validity status of 

said data portion (84) of each row; 
   means for reading a column of tag data from said tag portion of 

each row of said cache memory array; 
   means for logically combining said column of tag data with said 

selected search tag to form a column of status data indicative of a 
validity status of said data portion of each 
row in said cache 
memory array; and 

   means for writing said column of status data to a column within 
said status portion of each row of said cache memory array, whereby 

said validity status of each data portion within each row of said 
cache memory array may be indicated by a single write to said cache 

memory array. 
A cache control system as claimed in Claim 1 wherein said means for 
logically combining said column of tag data with said selected search tag 

to form a column of status data indicative of validity status of said 
data portion of each row in said cache memory array further comprises: 

   a match register for storing a selected number of bits; 
   means for initially setting each of said selected number of bits to 

a logical one; 
   means (94) for performing an EXCLUSIVE-OR operation with said 

column of tag data and said tag register to produce a result of 
said EXCLUSIVE-OR operation; and

 
   means (96) for performing an AND operation with said result of said 

EXCLUSIVE-OR operation and said match register contents to produce 
said column of status data indicative of validity status of said 

data portion of each row in said cache memory array. 
A cache control system as claimed in Claim 1 or Claim 2 wherein 
said tag portion of each row of said cache memory array and said tag 

register each include three bits. 
A cache control system as claimed in any preceding claim wherein 
said data portion of each row in said cache memory array includes 32 

bits. 
A cache control system as claimed in any preceding claim wherein 
said status portion of each row in said cache memory array includes two 

bits. 
A cache control system as claimed in any preceding claim wherein 
said means for writing said column of status data to a column within said 

status portion of each row of said cache memory array further comprises 
means for writing said column of status data to a selected column within 

said status portion of each row of said cache memory array. 
A cache memory system comprising a cache control system (66) as 
claimed in any preceding claim and a cache memory array (68). 
A method in a data processing system for managing validity status 
of data stored in a cache memory array (68), said cache memory array 

having a plurality of rows and columns, each of said rows having a tag 
portion (80), a status portion (82), and a data portion (84), said method 

comprising the following steps: 

(a) storing a selected search tag within a tag register (90), said 
selected search tag indicative of a validity status of said data portion 

of each row; 
(b) reading a column of tag data from said tag portion of each row of 
said cache memory array; 
(c) logically combining said column of tag data with said selected search 
tag to form a column of status data indicative of a validity status of 

said data portion of each row in said cache memory array; and 
(d) writing said column of status data to a column within said status 
portion of each row of said cache memory array, wherein said validity 

status of each data portion within each row of said cache memory array 
may be indicated by a single write to said cache memory array. 
A method as claimed in claim 8 wherein the step of logically 
combining said column of tag data with said selected search tag to form a 

column of status data indicative of validity status of said data portion 
of each row in said cache memory array further comprises the steps of: 


(c1) establishing a match register for storing a selected number of bits; 
(c2) initially setting each of said selected number of bits to a logical 
one; 
(c3) performing an EXCLUSIVE-OR operation with said column of tag data 
and said tag register to produce a result of said EXCLUSIVE-OR operation; 

and 
(c4) performing an AND operation with said result of said EXCLUSIVE-OR 
operation and said match register contents to produce said column of 

status data indicative of validity status of said data portion of each 
row in said cache memory array. 
A method as claimed in claim 8 or claim wherein said tag portion of 
each row of said cache memory array and said tag register each include 

three bits. 
</CLAIMS>
</TEXT>
</DOC>
