<DOC>
<DOCNO>EP-0626631</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Clock generator.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F108	G06F108	G06F1342	G06F1342	H03K504	H03K504	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	H03K	H03K	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F1	G06F1	G06F13	G06F13	H03K5	H03K5	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The time a microprocessor CPU must wait for memory 
access is controlled to be one of two values by stretching 

the CPU clock signal either a first time duration or a 
second time duration, depending on the expected delay 

caused by the memory access. The clock stretching is in 
increments of one quarter of the CPU clock period and is 

done with both the leading and trailing edges of the clock 
pulse. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
PICOPOWER TECH INC
</APPLICANT-NAME>
<APPLICANT-NAME>
CIRRUS LOGIC, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
KENNY JOHN D
</INVENTOR-NAME>
<INVENTOR-NAME>
LEE ROBERT H J
</INVENTOR-NAME>
<INVENTOR-NAME>
KENNY, JOHN D.
</INVENTOR-NAME>
<INVENTOR-NAME>
LEE, ROBERT H.J.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to a circuit for improving the 
performance and power consumption of CPUs and in 
particular to a circuit and a method for reducing the time 
a CPU must wait for slower device's access by selectively 
stretching the CPU clock signal. In many high performance microprocessor systems, the 
system clock speed is faster than the memory or I/O access 
time. The conventional way to solve this problem is to 
have the CPU (central processing unit) wait for the memory 
access by waiting an incremental number of CPU clock 
cycles, such as 1 clock cycle (which is commonly known as 
"1 wait state") or 2 clock cycles ("2 wait states"). 
This, however, has the undesirable effect of slowing the 
system's processing speed. For example, for a 33 MHz 
80386 CPU, the full CPU clock cycle is 30 nanoseconds and 
the CPU requires a minimum of just two CPU clock cycles 
per CPU bus cycle, which results in a minimum CPU bus 
cycle time of 60 nanoseconds. If the memory access time 
were 65 nanoseconds, for instance, this would require that 
1 wait state be inserted which would produce a 90 
nanosecond CPU bus cycle. The problem with wait stating  
 
the CPU in full CPU clock cycle increments is that in a 
case such as that just mentioned, while the CPU only needs 
to be slowed down by 5 nanoseconds it traditionally is 
slowed down by a full 30 nanoseconds due to the limited 
resolution available for wait stating the CPU. Previously disclosed circuits have used clock 
stretching techniques to delay CPU cycles (see U.S. Patent 
No. 5,045,715 issued Sept. 3, 1991, to Fitch), but these 
have only been able to stretch the clock pulse by 
increments of the 2X clock period (which is one half the 
period of the CPU clock for full in-phase clock stretching 
with one edge). This is particularly significant in that 
the period of the 2X clock is typically set to the maximum 
feasible speed for prevailing microprocessor technology 
(50-80MHz), such that a finer resolution could not be 
achieved by simply increasing the clock speed. In 
addition, previous clock stretching circuits have 
attempted to directly stretch both the 1X and 2X clocks. Figures 1 and 2 are the same as Figures 1 and 3 of 
U.S. Patent No. 5,045,715. The circuit of Figure 1 is a 
clock circuit for generating two clock signals, one (CLK) 
having stretched clock phases on a cycle by cycle basis, 
and the second (2X CLK) being a clock signal having a 
frequency twice the frequency of the first clock signal 
which is phase and edge coherent with the
</DESCRIPTION>
<CLAIMS>
Structure for reducing the time a CPU must wait 
for memory access, wherein the CPU is driven by a CPU 

clock signal derived from an input clock signal, which 
comprises: 

   first means for stretching the CPU clock signal 
by a time equal to one-half the period of the CPU 

clock signal; 
   second means for stretching the CPU clock signal 

by a time equal to one-quarter the period of the CPU 
clock signal; and 

   means for selecting said first means for 
stretching or said second means for stretching to 

thereby delay the CPU operation by a time selected as 
a function of the memory access time. 
Structure as in Claim 1 wherein said first means 
for stretching comprises means for delaying the input 

clock signal so that the time between two consecutive 
pulses of the CPU clock signal is extended by a time equal 

to one period of the input clock signal. 
Structure as in Claim 1 wherein said first means 
for stretching comprises means for delaying the input 

 
clock signal so that the time between two consecutive 

pulses of the CPU clock signal is extended by a time equal 
to one-half a period of the input clock signal. 
Structure as in Claim 2 wherein said means for 
delaying comprises means for preventing the passage of one 

pulse of said input clock signal such that said CPU clock 
signal has the same frequency as said input clock signal, 

but wherein the time between two consecutive pulses in 
said CPU clock signal is increased by one period of said 

input clock signal. 
Structure as in Claim 3 wherein said means for 
delaying comprises means for inverting the phase of a 

signal derived from said input clock signal, thereby to 
generate said CPU clock signal with the same frequency as 

said input clock signal, but wherein the time between two 
consecutive pulses of said CPU clock signal is extended by 

a time equal to one-half the period of said input clock 
signal. 
Structure for controlling the time a CPU must 
wait to receive appropriate instructions or data, wherein 

the CPU is driven by a CPU clock signal derived from an 
input clock signal, which comprises:

 
   first means for stretching the CPU clock signal 

by a first selected time; 
   second means for stretching the CPU clock signal 

by a second selected time different than the first 
selected time; and 

   means for selecting said first means for 
stretching or said second means for stretching to 

thereby delay the CPU operation by said first 
selected time or said second selected time. 
A method of controlling the time a CPU must wait 
to receive appropriate instructions or data, wherein the 

CPU is driven by a CPU clock signal derived from an input 
clock signal, which comprises the steps of: 

   stretching the CPU clock signal by either a 
first selected time or a second selected time; and 

   selecting either the first selected time or the 
second selected time in response to one or more input 

control signals. 
</CLAIMS>
</TEXT>
</DOC>
