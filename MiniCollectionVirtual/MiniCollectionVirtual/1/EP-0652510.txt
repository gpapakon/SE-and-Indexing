<DOC>
<DOCNO>EP-0652510</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Software scheduled superscalar computer architecture
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F938	G06F938	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A computing system is described in which groups of 
individual instructions are executable in parallel by 

processing pipelines, and instructions to be executed in 
parallel by different pipelines are supplied to the 

pipelines simultaneously. During compilation of the 
instructions those which can be executed in parallel are 

identified. The system includes a register for storing an 
arbitrary number of the instructions to be executed. The 

instructions to be executed are tagged with pipeline 
identification tags and group identification tags indicative 

of the pipeline to which they should be dispatched, and the 
group of instructions which may be dispatched during the 

same operation. The pipeline and group identification tags 
are used to dispatch the appropriate groups of instructions 

simultaneously to the differing pipelines. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
INTERGRAPH CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERGRAPH CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
ARYA SIAMAK
</INVENTOR-NAME>
<INVENTOR-NAME>
SACHS HOWARD G
</INVENTOR-NAME>
<INVENTOR-NAME>
ARYA, SIAMAK
</INVENTOR-NAME>
<INVENTOR-NAME>
SACHS, HOWARD G.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to a computing system for executing groups of
individual instructions in parallel by processing pipelines, the system composing
storage means for holding at least one group of instructions to be executed in
parallel, each instruction in the group having associated therewith a pipeline
identifier indicative of the pipeline for executing that instruction and a group
identifier indicative of a group of instructions to be executed in parallel; means
responsive to the group identifier for causing all instructions having the same
group identifier to be executed at the same time; and means responsive to the
pipeline identifier of the individual instructions in the group to supply each
instruction in the group to be executed in parallel to an appropriate pipeline.This invention further relates to a method for executing groups of
individual instructions in parallel by processing pipelines.A common goal in the design of computer
architectures is to increase the speed of execution of a
given set of instructions. Many solutions have been
proposed for this problem, and these solutions generally can
be divided into two groups.According to a first approach, the speed of
execution of individual instructions is increased by using
techniques directed to decreasing the time required to
execute a group of instructions serially. Such techniques
include employing simple fixed-width instructions, pipelined
execution units, separate instruction and data caches,
increasing the clock rate of the instruction processor,
employing a reduced set of instructions, using branch
prediction techniques, and the like. As a result it is now
possible to reduce the number of clocks to execute an
instruction to approximately one. Thus, in these
approaches, the instruction execution rate is limited to the
clock speed for the system.To push the limits of instruction execution to
higher levels, a second approach is to issue more than one
instruction per clock cycle, in other words, to issue
instructions in parallel. This allows the instruction
execution rate to exceed the clock rate. There are two
classical approaches to parallel execution of instructions.Computing systems that fetch and examine several
instructions simultaneously to find parallelism in existing
instruction streams to determine if any can be issued 
together are known as superscalar computing systems. In a
conventional superscalar system, a small number of
independent instructions are issued in each clock cycle.
Techniques are provided, however, to prevent
</DESCRIPTION>
<CLAIMS>
A computing system for executing groups of individual instructions in
parallel by processing pipelines (0, ..., 7), the system comprising:


storage means (70) for holding at least one group of instructions to be
executed in parallel, the at least one group being determined at compile time,
characterized by
each instruction in the at least one group having associated therewith a
pipeline identifier which is held in the storage means (70) and indicative of the

pipeline (0, ..., 7) for executing that instruction and a group identifer which is held
in the storage means (70) and indicative of a group of instructions to be executed

in parallel;
means (100) responsive to the group identifier for causing all
instructions having the same group identifier to be executed at the same time; and
means (100) responsive to the pipeline identifier of the individual
instructions in the group to supply each instruction in the group to be executed in

parallel to an appropriate pipeline (0, ..., 7).
The system of claim 1, wherein each instruction in the at least one
group of instructions has associated therewith a different pipeline identifier.
The system of claim 1 or 2, wherein the storage means holds at least
two groups of instructions, and all of the instructions in each group having

associated therewith a common group identifier are placed adjacent to each other
in the storage means.
The system of claim 3, wherein the storage means comprises a line in
a cache memory (70) having a fixed number of storage locations; the group of

instructions to be executed first is placed at one end of the line in the cache
memory (70), and the instructions in the group to be executed last is placed at 

the other end of the line in the cache memory (70).
The system of any one of the claims 1 to 4, wherein a crossbar (100)
having a first set of connectors (73) coupled to the storage means for receiving

instructions therefrom and a second set of connectors (110, ..., 117) coupled to
the processing pipelines (0, ..., 7) is provided.
The system of claim 5, wherein the first and the second set of
connectors (73; 110, ..., 117), respectively, consist of a set of communication

buses, one for each instruction in the storage means and one for each pipeline
(0, ..., 7), respectively, and wherein a set of decoders (170, ..., 178) coupled to

the storage means to receive as first input signals the pipeline identifiers and in
response thereto supply as output signals a switch control signal and a set of

switches (213, 234, 265), coupled to the decoders (170, ..., 178) with one switch
at the intersection of each of the first set of connectors (73), are provided, the

switches (213, 234, 265) providing connections in response to receiving the
switch control signal to thereby supply each instruction in the group to be

executed in parallel to the appropriate pipeline (0, ..., 7).
The system of claim 6, further comprising detection means coupled to
receive the group identifier of each construction in the storage means and

connected to receive information regarding the group identifier of the next group
of instructions to be supplied to the pipelines (0, ..., 7), and in response thereto

supply a group control signal, and wherein the set of decoders (170, ..., 177)
coupled to the storage means are also coupled to the detection means to receive

the group control signal and in response thereto supplies a switch control signal
for only those instructions in the group to be supplied to the pipelines (0, ..., 7).
The system of claim 7, wherein the detection means comprises a
multiplexer (120) coupled to receive each of the group of identifiers of instructions

in the storage means and compare them to the information regarding the group 
identifier of the next group of instructions to be supplied to the pipelines (0, ..., 7).
The system of claim 8, wherein the multiplexer (120) supplies an output
signal to the decoders (170, ..., 177) to indicate the group identifier of the next

group of instructions to be supplied to the pipelines (0, ..., 7).
The system of any one of the claims 1 to 9, wherein the group of
instructions is an instruction frame.
The system of claim 10, further comprising selection means connected
to receive the group identifier of each instruction in the instruction frame and

connected to receive information about the group identifier of those instructions
to be next executed in parallel for supplying in response thereto an output signal

indicative of the next set of instructions to be executed in parallel, and decoder
means coupled to receive the output signal and each of the pipeline identifiers of

the instructions in the storage for selectively connecting ones of the first set of
connectors to thereby supply each instruction in the group to be executed in

parallel at the appropriate pipeline. 
A method of executing groups of individual instructions in parallel by
processing pipelines (0, ..., 7), the method comprising


storing in storage means (70) for holding at least one group of
instructions to be executed in parallel, the at least one group being determined at

compile time, 
characterized by
each instruction in the group having associated therewith a pipeline
identifier which is held in the storage means (70) and indicative of the pipeline (0,

..., 7) for executing that instruction and a group identifier which is held in the
storage means (70) and indicative of a group of instructions to be executed in

parallel;
comparing the group identifier of each instruction in the group of
instructions and a group identifier of those instructions to be next executed in

parallel;
and using the pipeline identifier of those instructions to be next
executed in parallel to control an execution unit to execute all of the instructions in

the group in separate pipelines (0, ..., 7).
The method of claim 12, further comprising transferring each
instruction in a group to be executed through a crossbar (100) having a first set

of connectors (73) coupled to the storage means for receiving instructions
therefrom and a second set of connectors (110, ..., 117) coupled to the

processing pipelines (0, ..., 7) and using the pipeline identifiers of the individual
instructions in the at least one group of instructions which are to executed next to

control switches between the first set of connectors (73) and the second set of
connectors (110, ..., 117) to thereby supply each instruction in the group to be

executed in parallel to the appropriate pipeline (0, ..., 7).
The method of claim 13, wherein the step of using comprises supplying
the pipeline identifiers of the individual instructions in the at least one group of

instructions to a corresponding number of decoders (170, ..., 177), each of which
provides an output signal indicative of the pipeline identifiers; and using the

decoder output signals to control the switches between the first set of connectors
(73) and the second set of connectors (110, ..., 117).
</CLAIMS>
</TEXT>
</DOC>
