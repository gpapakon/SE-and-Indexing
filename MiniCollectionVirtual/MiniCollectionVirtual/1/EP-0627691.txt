<DOC>
<DOCNO>EP-0627691</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method and system for searching a database utilizing a graphical user interface
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3048	G06F1730	G06F3048	G06F314	G06F1730	G06F314	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F17	G06F3	G06F3	G06F17	G06F3	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A search facility having a user interface (100) including 
three windows: a query window (101), a graph window (102) and 

a history window (103), presented simultaneously in the 
graphical user interface (100). The query window (101) displays 

the text of the most recently input query statement (104) which 
is searched in a database stored in a computer system. The 

graph window (102) graphically displays the current results 
(105) of the most recent query statement (104). The history 

window (103) presents the query statements and their results 
during the current query session. In one preferred embodiment, 

the query statements and their results are graphically presented 
as a tree (108), wherein the query statements and query results 

are nodes (106,107) and each query statement result (107) is a 
child of the query statement (106) which was run to create it. 

Input to any of the windows will change the presentation of data 
within the other two windows. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
ALLAN TATE BRUCE
</INVENTOR-NAME>
<INVENTOR-NAME>
SHIH-GONG LI
</INVENTOR-NAME>
<INVENTOR-NAME>
ALLAN, TATE BRUCE
</INVENTOR-NAME>
<INVENTOR-NAME>
SHIH-GONG, LI
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to computer stored
databases. More particularly, it relates to a system and method
for searching a database utilizing a graphical user interface.Computer stored databases have attracted an increasing
amount of interest, not only because of the rapid expansion in
the data stored and retrieved by these databases, but also as a
result of the data relationships which can be established during
the storage or retrieval processes. With the growing prevalence
of relational databases, the training and experience of a
typical end user has decreased as the available resources have
increased. Users of databases have been particularly desirous
of improvements in the graphical user interfaces to control the
database applications to make them understandable by the novice
user.One of the more difficult elements of problem solving when
using a database is often the identification of the sources that
cause a particular problem. Search statements or queries are
usually used for searching information stored in a database in
an organized fashion to help problem solving. When users have
few clear ideas about how to construct the proper query for
solving a problem, a common approach is to start by examining an
initial query report resulting from an initial query for more
information. Based on this information, the user then decides
how to narrow the search, or "drill down" further within the
database. If these narrowed searches do not produce the desired
result, then the user must back up to a previous search
statement and try again.Current search techniques are cumbersome, inhibiting
efficient query formulation. Most existing systems do not
provide a query history. These systems make iterative problem
solving difficult by forcing the user to 1) remember all 
previous results, or 2) manual result. This is cumbersome.Proceedings of the 12th annual International ACMSIGIR Conference on
research a development in information retrieval, 28 June 1989, Cambridge
MA, US pages 32-29 R. Gpdin Et A1. "Design of a browsing interface for
information retrieval" describes the design of a user interface which
permits gradual enlargement or refinement of the user's query by browsing
through a graph of term and document subsets. However there are cumbersome
details in the interface and ways to further limit the complexity of the
structure would be advantageous.Those systems that do provide a history usually provide some sort of
linear log. Many commercially available databases have a history command
which allows
</DESCRIPTION>
<CLAIMS>
A method of searching a database stored on a computer system
comprising the steps of:


displaying a first query statement in a query window (101) on a
display (100);
displaying a first set of results from a database search of the first
query statement in a graph window (102) on the display 100); and
displaying at least a first symbol representative of the
first query statement and the first set of results in a history window

(103) on the display (100);
so that the query, graph and history windows (101, 102, 103) are
presented concurrently on the display (100);

   
characterised in that

   the at least first symbol is presented as two nodes in a tree
structure (108) and the first set of results is a child node of the first

query statement node.
The method as recited in claim 1 further comprising the steps of:

displaying a second query statement which is a modification of the
first query statement;
displaying a second set of results in the graph window
(102); and
displaying at least a second symbol representative of the
second query statement and the second set of results in the

history window (103), wherein the at least second symbol is presented as
two nodes in a tree structure and the second query statement is a child

node of the first query statement node and the second set of results is a
child node of the second query statement node.
The method as recited in either claim 1 or 2 which further comprises
the steps of:


selecting a node in the tree structure (108) in response to user
input;
presenting a query statement which is represented by the
selected node in the query window (101); and
displaying a set of results from searching the query
statement represented by the selected node in the graph window

(102).
The method as recited in either claim 1 or claim 2 which further
comprises the steps of: 


selecting a node in the tree structure (108) in response to user
input;
presenting a set of results which is represented by the
selected node in the graph window (102); and
displaying the query statement from which the set of
results represented by the selected node is derived in the query window

(101).
The method as recited in claim 3 which further comprises the steps
of:


modifying the query statement represented by the selected
node in response to user input to create a third query

statement;
presenting the third query statement in the query window
(101);
displaying a third set of results in a graphical format in the
graph window (102); and
displaying at least a third symbol representative of the
third query statement and the third set of results in the

history window (103).
The method as recited in any claim from 1 to 5 wherein the
results are displayed in a multimedia format.
A system for searching a computer stored database,
comprising:


means for displaying a first query statement in a query
window (101) on a display (100);
means for displaying a first set of results from a
database search of the first query statement in a graph window

(102) on the display (100); and
means for displaying at least a first symbol representative of the
first query statement and the first set of results in a history window

(103) on the display (100);
so that the query, graph and history windows (101, 102, 103) are
presented concurrently on the display (100);

   
characterised in that

   the at least first symbol is presented as two nodes in a tree
structure (108) and the first set of results is a child node of the first

query statement node.
The system as recited in claim 7 further comprising:

means for displaying a second query statement which is a modification
of the first query statement; 
means for displaying a second set of results in the graph
window (102); and
means for displaying at least a second symbol
representative of the second query statement and the second set of results

in the history window (103), wherein the at least second symbol is
presented as two nodes in a tree structure and the second query statement

is a child node of the first query statement node and the second set of
results is a child node of the second query statement node.
The system as recited in either claim 7 or 8 which further comprises:

means for selecting a node in the tree structure (108) in
response to user input;
means for presenting a query statement which is represented by the
selected node in the query window (101); and
means for displaying a set of results from searching the query
statement represented by the selected node in the graph window (102).
The system as recited in either claim 7 or claim 8 which further
comprises:


means for selecting a node in the tree structure (108) in
response to user input;
means for presenting a set of results which is represented by the
selected node in the graph window (102); and
means for displaying the query statement from which the set of
results represented by the selected node is derived in the query
 window
(101).
The system as recited in claim 9 which further comprises:

means for modifying the query statement represented by the selected
node in response to user input to create a third query statement;
means for presenting the third query statement in the query window
(101);
means for searching the database according to the third query
statement and displaying a third set of results in a graphical format in

the graph window (102); and
means for creating a third and a fourth symbol respectively
representative of the third query statement and the third set of results in

the history window (103).
The system as recited in any claim from 7 to 11 wherein the results
are displayed in a multimedia format.
</CLAIMS>
</TEXT>
</DOC>
