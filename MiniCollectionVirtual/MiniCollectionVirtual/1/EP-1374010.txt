<DOC>
<DOCNO>EP-1374010</DOCNO> 
<TEXT>
<INVENTION-TITLE>
SECURITY MONITOR OF SYSTEM RUNNING SOFTWARE SIMULATOR IN PARALLEL
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1130	G06F1130	G06F2100	G06F2100	G06F2120	G06F2120	H04L2906	H04L2906	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	H04L	H04L	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F11	G06F11	G06F21	G06F21	G06F21	G06F21	H04L29	H04L29	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A monitoring system monitors a system that has multiple devices that perform respective primary tasks. For the purpose of the monitoring, each device has a finite state machine (FSM) with stochastic non-periodic behavior. The monitoring system simulates in software the behavior of the FSM's. A discrepancy between the states assumed by the FSM's after each time step and the states assumed in the simulation in each time step indicates a failure or a breach of the network's integrity. Hacking such as primary system is practically impossible without being detected. Each device comprises computational resources. In order to reduce the computational environment available to a virus, the idle time of the resources is absorbed by dynamically increasing the complexity of the FSM's.
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
KONINKL PHILIPS ELECTRONICS NV
</APPLICANT-NAME>
<APPLICANT-NAME>
KONINKLIJKE PHILIPS ELECTRONICS N.V.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
PISARSKY VLADIMIR R
</INVENTOR-NAME>
<INVENTOR-NAME>
PISARSKY, VLADIMIR, R.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
Security monitor of system runs software simulator in parallelThe invention relates to security measures against viruses and hackers attempting to attack an electronic system with distributed functionalities. The invention relates in particular, but not exclusively, to a home network environment.Security of computer systems and networks is being challenged by hackers and by computer viruses.The term "hacking" is colloquially being used to refer to attempting to gain unauthorized access to another party's computer system or network. Although not all hackers have malicious purposes, such security breaches can have serious consequences if it leads to stealing or corrupting electronic information or to crashing the system.A virus is a piece of code that gets loaded onto the computer system and executed without the user knowing about it. A typical example of a virus is a program that replicates itself. A possible hazard of such a virus is that it quickly occupies all available memory, thus bringing the system to a halt. If the virus is capable of transmitting itself across networks and bypasses security systems it can spread the disaster.With the advent of home networks and home gateways, security against hackers and viruses is also becoming a concern to consumers in a domestic environment. A home network couples apparatus in a control network and/or communication network. These networks often also provide Internet access and cover mobile users via wireless modems, thus exposing the home to unauthorized electronic access from outside.The invention provides, among other things, a solution to this security problem. More particularly, the invention considers a distributed information processing system that comprises a cluster of interacting devices or appliances forming, e.g., a home network. The devices or appliances have finite state machines (FSM's) onboard for the 

purpose of monitoring the cluster's integrity. The system has a control server running a simulator of the cluster's FSM's. Each respective device's FSM calculates per time step a respective numerical value that depends on the values of the other devices' FSM's in the previous step, on the respective device's internal state(e.g., based on the device's memory's and I/O message buffers' content), and on a history of the previous values. This mathematical relationship is chosen such that it causes the collection of FSM's to behave as if they formed a dynamic non-periodic stochastic process. The simulator does the same on the server. The results of
</DESCRIPTION>
<CLAIMS>
CLAIMS:
1. A monitoring system (100) comprising:
- a primary system (102) with multiple devices (104, 106, 108); and
- a simulator (118) for simulating behavior of the primary system; wherein:
- the monitoring system evaluates a result supplied by the primary system with respect to an outcome calculated by the simulator in order to monitor the primary system.
2. The system of claim 1 , wherein:
- each respective one of the devices comprises a respective finite state machine (110, 112, 114); - the respective state machine (with index "k") calculates per time step a value of a quantity (X
k
(t)) according to a respective mathematical function (fig. 2);
- the respective mathematical function has as arguments:
- the value of the quantity calculated at a preceding time step by at least another one of the state machines (X of all DEVICES 104-108 taken at the previous time step);
- a respective history of values assumed by the quantity calculated by the respective state machine (X
k
(t-1), Xk(t-2), ..., X
k
(t-N));
- a respective control code ("S
k
" is the DSI of DEVICE (k))determined by content present in a memory of the respective device at the time step; - the respective mathematical function is such that the quantity assumes a stochastic behavior.
3. The system of claim 1 , wherein:
- each respective device has a respective computational resource; - each respective one of the devices performs a respective primary task using the respective resource; and
- depending on the respective primary task, each respective device performs a respective secondary task for reducing availability of the respective computational resource. 

4. The system of claim 2, wherein
- each respective device has a respective computational resource;
- each respective one of the devices performs a respective primary task using the respective resource;
- depending on usage of the resource for the respective primary task, each respective device performs a respective secondary task for reducing availability of the respective computational resource; and
- the respective secondary task comprises calculating the quantity using adapting a length of the respective history.
5. A method of enabling to protect a primary system (100) that has multiple devices (104, 106, 108, the method comprising:
- simulating (118) a behavior of the primary system; and
- evaluating (120) a result supplied by the primary system with respect to an outcome calculated by the simulator.
6. The method of claim 5 , wherein:
- each respective one of the devices comprises a respective finite state machine (110, 112, 114); - the respective state machine calculates per time step a value of a quantity
(X
k
(t)) according to a respective mathematical function (fig. 2);
- the respective mathematical function has as arguments:
- the value of the quantity calculated at a preceding time step by at least another one of the state machines (X of all DEVICES 104-108 taken at the previous time step);
- a respective history of values (Xk(t-1), Xk(t-2), ..., Xk(t-N)) assumed by the quantity calculated by the respective state machine; and
- a respective control code ("S
k
" is the DSI of DEVICE (k)) determined by content present in a memory of the respective device at the time step; and - the respective mathematical function is such that the quantity assumes a stochastic behavior.
7. The method of claim 5, wherein:
- each respective device has a respective computational resource; 


 - each respective one of the devices performs a respective primary task using the respective resource; and
- the method comprises enabling each respective device to perform a respective secondary task, depending on the respective primary task, for reducing availability of the respective computational resource.
8. The method of claim 6, wherein
- each respective device has a respective computational resource;
- each respective one of the devices performs a respective primary task using the respective resource;
- the method comprises enabling each respective device to perform a respective secondary task, depending on the respective primary task, for reducing availability of the respective computational resource; and
- the respective secondary task comprises calculating the quantity using adapting a length of the respective history.
9. A device (104) having a computational resource for performing a primary task, and comprising an FSM (112), independent of performing the primary task, for enabling to monitor an integrity of the resource. 

</CLAIMS>
</TEXT>
</DOC>
