<DOC>
<DOCNO>EP-0628230</DOCNO> 
<TEXT>
<INVENTION-TITLE>
SYSTEM AND METHOD FOR MULTIPLEXING DATA TRANSMISSIONS
</INVENTION-TITLE>
<CLASSIFICATIONS>H04L2908	H04L2908	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04L	H04L	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04L29	H04L29	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The present invention is directed to a system for multiplexing data transmissions exchanged between a host computer system (12) and a user workstation (18) connected by a communications link (16, 20). One or more host application programs (24) reside upon and are executed by the host computer system (12) while a terminal emulation program (19) having the capability of simultaneously displaying one or more host application program screens resides upon and is executed by the user workstation (18). The data transmission multiplexing system comprises a session manager program (22) residing upon and executed by the host computer system (12) for establishing one or more program sessions with the host application programs (24), each of the program sessions generating its own individual datastreams, and a single program session with the terminal emulation program (19) utilizing a single connection between the host computer system (12) and the user workstation (18). The terminal emulation program (19) simultaneously displace the hostapplication program screen for each of the sessions established between the session manager program (22) and the host application programs (24). The multiplexing system includes a multiplexing program (25) for performing the following functions: (1) building inner data packets (64) from the individual datastreams generated by each program session; (2) inserting the inner data packets (64) into one or more data transmission packets (42) for transmission between the host computer system (12) and the user workstation (18) over the single connection; and (3) removing the inner data packets (64) from the one or more data transmission packets (42) for recreating the individual datastreams therefrom.
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
LEGENT CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
LEGENT CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CONNELL DAVID J
</INVENTOR-NAME>
<INVENTOR-NAME>
LEDERER JEFFREY H
</INVENTOR-NAME>
<INVENTOR-NAME>
PAGANO PATRICK V
</INVENTOR-NAME>
<INVENTOR-NAME>
CONNELL, DAVID, J.
</INVENTOR-NAME>
<INVENTOR-NAME>
LEDERER, JEFFREY, H.
</INVENTOR-NAME>
<INVENTOR-NAME>
PAGANO, PATRICK, V.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention is directed generally to a
system and method for multiplexing data transmissions
and, more specifically, to a system and method for
multiplexing data transmissions exchanged between a
timesharing computer system and a user workstation.A timesharing computer system may be accessed by a
user through a video display terminal connected to the
timesharing computer by means of a data communications
system. The user may gain access to the timesharing
computer system by establishing a program session with
an application program executing on the timesharing
computer. The user can interact with the application
program by utilizing a keyboard attached to the video
display terminal and see the results of the application
on the video display terminal's screen.Advanced video display terminals, such as
distributed function terminals ("DFTs"), enable a user
to initiate multiple program sessions with a
timesharing computer system by establishing multiple
connections between the DFT and the timesharing
computer. One connection is established for each
program session. The DFT utilizes windowing software
to allow the user to view the multiple programs
sessions simultaneously. A selection methodology
permits a user to direct the keyboard input to any
particular program session. A significant drawback to the technique utilized
in DFTs is that one connection must be dedicated to
each program session. The number of connections on
each communications pathway to the timesharing computer
is usually limited and must be shared by all DFTs
utilizing that communications pathway.A type of application program called a "session
manager", designed to execute on a timesharing computer
system, has the capability of establishing and
maintaining multiple program sessions simultaneously
for a user utilizing a single video display terminal.
The video display terminal maintains a single
connection with the timesharing computer and
establishes a single program session with the session
manager program. The session manager program, in turn,
maintains multiple program sessions with application
programs executing on the timesharing computer system.
The user can view and interact with only one program
session at any given time. Using a keyboard sequence,
generally known as a "hot key" sequence, the user can
select from among the program sessions for viewing and
keyboard input.The disadvantage to session manager programs is
that only a single application program can be viewed
and interacted with at any one time. Thus, the need
exi
</DESCRIPTION>
<CLAIMS>
A system for multiplexing data transmissions
exchanged between a host computer system (12) and a user

workstation (18) wherein the host computer system and the
user workstation are connected by a communications link (16,20)

and wherein one or more host application programs (24)
reside upon and are executed by the host computer

system, while a terminal emulation program (19) having the
capability of simultaneously displaying one or more

host application program screens resides upon and is
executed by the user workstation, said system for

multiplexing data transmissions comprising:

a session manager program (22) residing upon and
executed by the host computer system for establishing

one or more program sessions with the host application
programs, each of said program sessions generating its

own individual datastreams, and for establishing a
single program session with the terminal emulation

program utilizing a single connection between the host
computer system and the user workstation, and wherein

the terminal emulation program (19) simultaneously displays
the host application program screen for each of said

program sessions established between said session
manager program and the host application programs;
first means (25) residing in the host computer system
and in the user workstation for intercepting said

individual datastreams before said individual
datastreams are transmitted to the user workstation or

to the host computer system;
second means (25) residing in the host computer system
and in the user workstation for building inner data 

packets (64) from said individual datastreams generated by
each of said program sessions;
third means (25) residing in the host computer system
and in the user workstation for inserting said inner

data packets into a data transmission packet (42) for
transmission between the host computer system and the

user workstation over said single connection;
fourth means (25) residing in the host computer system
and in the user workstation for intercepting said data

transmission packet received by the host computer
system and the user workstation before said data

transmission packet is processed by either said session
manager program or the terminal emulation program,

respectively; and
fifth means (25) presiding in the host computer system
and in the user workstation for removing said inner

data packets from said data transmission packet and for
recreating said individual datastreams therefrom.
The multiplexing system of claim 1 wherein
said data transmission packet includes appropriate

protocol commands compatible with the host computer
system and the user workstation to permit free-form

formatting of data in said data transmission packet.
The multiplexing system of claim 2 wherein
said inner data packets are stored in a queue on the

host computer system and a queue on the user
workstation until said inner data packets are inserted

into said-data transmission packet.
The multiplexing system of claim 3 wherein
said data transmission packet further includes control

commands stored in said inner data packets. 
The multiplexing system of claim 4 wherein
said inner data packet includes a spanning flag to

permit the segmentation of said inner data packets
between more than one of said data transmission

packets.
The multiplexing system of claim 5 wherein
said inner data packets further include a function code

and a function data field and wherein said function
code indicates whether said function data field

includes one of said individual datastreams or one of
said control commands.
The multiplexing system of claim 1 further
including means for controlling the flow of said

individual datastreams transmitted between the host
application programs and the terminal emulation program

through said session manager program over said single
connection independently of the flow of said data

transmission packet between the host computer system
and the user workstation over said single connection.
A method for multiplexing data transmissions
exchanged between a host computer system and a user

workstation wherein the host computer system and the
user workstation are connected by a communications link

and wherein one or more host application programs
reside upon and are executed by the host computer

system while a terminal emulation program having the
capability of simultaneously displaying one or more

host application program screens resides upon and is
executed by the user workstation, said method

comprising the steps of: 

establishing one or more program sessions with the
host application programs, each of said program

sessions generating its own individual datastreams;
establishing a single program session with the
terminal emulation program utilizing a single

connection between the host computer system and the
user workstation, wherein the terminal emulation

program simultaneously displays the host application
program screen for each of said program sessions

established with the host application programs;
intercepting said individual datastreams before
said individual datastreams are transmitted to the user

workstation or to the host computer system;
building inner data packets from said individual
datastreams generated by each of said program sessions;
inserting said inner data packets into a data
transmission packet for transmission between the host

computer system and the user workstation over said
single connection;
intercepting said data transmission packet
received by the host computer system and the user

workstation before said data transmission packet is
processed by either the host application programs or

the terminal emulation program, respectively; and
removing said inner data packets from said data
transmission packet and for recreating said individual

datastreams therefrom.
The multiplexing method of claim 8
additionally comprising the step of storing said inner

data packets in a queue on the host computer system and

in a queue on the user workstation until said step of 
inserting said inner data packets into said data

transmission packet is performed.
The multiplexing method of claim 9
additionally comprising the step of controlling the

flow of said individual datastreams transmitted between
the host application programs and the terminal

emulation program over said single connection
independently of the flow of said data transmission

packet between the host computer system and the user
workstation over said single logical connection.
</CLAIMS>
</TEXT>
</DOC>
