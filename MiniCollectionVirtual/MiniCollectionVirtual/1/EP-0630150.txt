<DOC>
<DOCNO>EP-0630150</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Neural network for color translations
</INVENTION-TITLE>
<CLASSIFICATIONS>H04N146	G09G502	G06F1518	G06T140	G06T120	H04N160	G06F1518	G09G502	H04N160	G06N300	H04N146	G06N300	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04N	G09G	G06F	G06T	G06T	H04N	G06F	G09G	H04N	G06N	H04N	G06N	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04N1	G09G5	G06F15	G06T1	G06T1	H04N1	G06F15	G09G5	H04N1	G06N3	H04N1	G06N3	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A neural network[42,10,250,500] for converting pixels represented in one 

color representation[41] to pixels of a second color representation[43]
. The 
preferred embodiment of the neural network[42,10,250,500]
 utilizes an input layer 
that includes either a summing node or a product generating node. The neural 

network [42,10,250,500] may be implemented in analog circuitry[100]
 or as a 
simulation on a general purpose data processor[256]
. The analog circuit 
implementation requires a relatively small number of 

nodes[13,15,100,512,514,518,520] and is less expensive than implementations 

based on general purpose data processors[256]. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
HEWLETT PACKARD CO
</APPLICANT-NAME>
<APPLICANT-NAME>
HEWLETT-PACKARD COMPANY
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CURRY BO U
</INVENTOR-NAME>
<INVENTOR-NAME>
SMITH DAVID R
</INVENTOR-NAME>
<INVENTOR-NAME>
CURRY, BO U.
</INVENTOR-NAME>
<INVENTOR-NAME>
SMITH, DAVID R.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to devices for displaying or scanning color
images, and more particularly, to an improved processor for translating colors
between different representational schemes.Color images are typically represented by specifying three values for each
pixel in the image. For example, the values in question may be the intensity of the
primary colors needed to generate the desired color. A number of alternative
representations are also known to the art. For the purposes of this discussion,
these various representations will be referred to as spectral representations. Given
the three values in any one of these spectral representations, the corresponding
three values in any other representation may be obtained from an appropriate
transformation that can be written in closed form.Not all display devices work from spectral representations. Consider a
color printer which operates by mixing three colors of ink to generate the pixels of
an image on the paper. The printer "knows" how to generate a pixel given three
ink intensity values, I1, I2, and I3. The device using the printer typically stores its
color as (R,G,B) values. The transformation from (R,G,B) representation of a
pixel to the corresponding (I1, I2, I3) value cannot, in general, be written in closed
form. In such cases, the transformation must be determined experimentally. This
is accomplished by printing samples of the colors obtained by mixing known
quantities of each ink and then measuring the (R,G,B) values of the sample using
a spectrometer. The measured values represent the transformation from the printer
color representation (I1, I2, I3) to a (R,G,B) value. The inverse of this
transformation may be stored in a look-up table which is used by the printer or a
device using the printer to generate the correct ink intensity values for a given
(R,G,B) value.The look-up table approach can require a significant amount of memory
and/or processor capacity. In a full color display system, there are typically 256 
possible values for each intensity value for each of the primary colors in the
possible values for each intensity value for each of the primary colors in the
representation. Hence, the corresponding look-up table would require in excess of
16 megabytes of memory. This memory requirement is unacceptable for many
applications. To reduce the memory, a smaller table can be used with tri-linear
interpolation. However, the system now requires a processor capable of
performing the interpolation. Such a processor can represent a
</DESCRIPTION>
<CLAIMS>
A processor (42,10,250,500) for converting pixels of an image in a first
colour representation (41) in which colours are represented by a first set of signal

values (i
1
,i
2
,...i
M
) to a second colour representation (43) in which colours are
represented by a second set of signal values (O
1
,O
2
,...O
M'
), said processor (42,10,
250,500) comprising:


means for receiving signals from said first set of signal values (11);
an ordered array of layers of nodes (12,14,502,506,508,510) including an
input layer of nodes (12,502), an output layer of nodes (14,510) and one or more

intermediate layers of nodes (506,508), each said node having a plurality of inputs
(102), an output (17), and means for storing a plurality of weights (106,260), there

being one said weight corresponding to each said input, each said node generating
an output signal on said output that depends on the inputs to said node and said

weights stored in said node, wherein
said input layer of nodes (12,502) comprises a plurality of M-input nodes,
said inputs of each said node in said input layer (12,502) being connected to said

signal receiving means (11) such that the first input to each said node receives i
1
, the
second output of each said node receives i
2
, and the M
th
 input of each said node
receives i
M
,
said output layer of nodes (14,510) comprises M' nodes, said second set of
signals. (O
1
,O
2
,...O
M'
), corresponding to said outputs of said output layer of nodes;

   wherein each said input of said nodes in said intermediate layers (506,508)
and output layer (14,510) is connected either to an output of a node in a previous

layer or to said receiving means (11), characterized in that

   the relationship between the output signal generated by at least one
of said nodes (13,514) in said input layer (12,502) and said inputs to said node is

given by


where O is said output signal, I
i
 is the i
th
 input to said node, and w
i
 is the weight
corresponding to the i
th
 said input of said node. 
A processor (42,10,250,500) for converting pixels of an image in a first
colour representation (41) in which colours are represented by a first set of signal

values (i
1
,i
2
,..i
M
) to a second colour representation (43) in which colours are
represented by a second set of signal values (O
1
,O
2
,...O
M'
), said processor (42,10,
250,500) comprising:


means for receiving signals from said first set of signal values (11);
an ordered array of layers of nodes (12,14,502,506,508,510) including an
input layer of nodes (12,502), an output layer of nodes (14,510) and one or more

intermediate layers of nodes (506,508), each said node having a plurality of inputs
(102), an output (17), and means for storing a plurality of weights (106,260), there

being one said weight corresponding to each said input, each said node generating
an output signal on said output that depends on the inputs to said node and said

weights stored in said node, wherein
said input layer of nodes (12,502) comprises a plurality of M-input nodes,
said inputs of each said node in said input layer (12,502) being connected to said

signal receiving means (11) such that the first input to each said node receives i
1
, the
second output of each said node receives i
2
, and the M
th
 input of each said node
receives i
M
,
said output layer of nodes (14,510) comprises M' nodes, said second set of
signals, (O
1
,O
2
,...O
M'
), corresponding to said outputs of said output layer of nodes;

   wherein each said input of said nodes in said intermediate layers (506,508)
and output layer (14,510) is connected either to an output of a node in a previous

layer or to said receiving means (11), characterized in that

   the relationship between the output signal generated at least one of
said nodes in said input layer (13,514) and said inputs to said node is given by



where O is said output signal, I
j
 is the j
th
 input to said node, and w
j
 is the weight
corresponding to the j
th
 said input of said node.
A method for operating a data processing system (250) so as to convert
pixels of an image in a first colour representation in which colours are represented 

by a first set of signal values (i
1
,i
2
,...i
M
) to a second colour representation (43) in
which colours are represented by a second set of signal values (O
1
,O
2
,...O
M'
), said
method comprising the steps of:


causing a receiving means (254) to receive said first set of signal values;
simulating an ordered array of layers of nodes including an input layer of
nodes, an output layer of nodes and one or more intermediate layers of nodes, each

said layer comprising a plurality of nodes, each said node having a plurality of
inputs, an output, and means for storing a plurality of weights, there being one said

weight corresponding to each said input, each said node generating an output signal
on said output that depends on the inputs to said node and said weights stored in

said node, wherein
said input layer of nodes comprises a plurality of M-input nodes, said inputs
of each said node in said input layer being connected to said signal receiving means

such that the first input to each said node receives i
1
, the second input of each said
node receives i
2
, and the M
th
 input of each said node receives i
M,
said output layer of nodes comprises M' nodes, said second set of signals,
(O
1
,O
2
,...O
M'
), corresponding to said outputs of said output layer of nodes;

   wherein each said input of said nodes in said intermediate layers and output
layer is connected either to an output of a node in a previous layer or to said

receiving means, characterized in that

   the relationship between the output signal generated by at least one
of said nodes (13,514) in said input layer (12,502) and said inputs to said node is

given by


where O is said output signal, I
i
 is the i
th
 input to said node, and w
i
 is the weight
corresponding to the i
th
 said input of said node.
A method for operating a data processing system (250) so as to convert
pixels of an image in a first colour representation in which colours are represented

by a first set of signal values (i
1
,i
2
,..i
M
) to a second colour representation (43) in
which colours are represented by a second set of signal values (O
1
,O
2
,...O
M'
), said 
method comprising the steps of:


causing a receiving means (254) to receive said first set of signal values;
simulating an ordered array of layers of nodes including an input layer of
nodes, an output layer of nodes and one or more intermediate layers of nodes, each

said layer comprising a plurality of nodes, each said node having a plurality of
inputs, an output, and means for storing a plurality of weights, there being one said

weight corresponding to each said input, each said node generating an output signal
on said output that depends on the inputs to said node and said weights stored in

said node, wherein
said input layer of nodes comprises a plurality of M-input nodes, said inputs
of each said node in said input layer being connected to said signal receiving means

such that the first input to each said node receives i
1
, the second input of each said
node receives i
2
, and the M
th
 input of each said node receives i
M
,
said output layer of nodes comprises M' nodes, said second set of signals,
(O
1
,O
2
,...O
M'
), corresponding to said outputs of said output layer of nodes;

   wherein each said input of said nodes in said intermediate layers and output
layer is connected either to an output of a node in a previous layer or to said

receiving means, characterized in that

   the relationship between the output signal generated at least one of
said nodes in said input layer (13,514) and said inputs to said node is given by



where O is said output signal, I
j
 is the j
th
 input to said node, and w
j
 is the weight
corresponding to the j
th
 said input of said node.
</CLAIMS>
</TEXT>
</DOC>
