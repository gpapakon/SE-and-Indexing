<DOC>
<DOCNO>EP-0654741</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Communications interface system
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1516	H04L2906	G06F1300	G06F1300	H04L2906	G06F1516	G06F15177	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	H04L	G06F	G06F	H04L	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F15	H04L29	G06F13	G06F13	H04L29	G06F15	G06F15	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A data processing system is provided for interfacing with a
computing resource coupled to a remotely located network. A multilayer

communication architecture, implemented utilizing a multilayer protocol
stack, is provided for facilitating communication between network

resources and applications running within the data processing system.
Within the multilayer protocol stack, a media access control emulator is

provided for interfacing with an application requesting access to a
computer resource coupled to a remotely located network. The media

access control emulator presents a standard media access control
interface to the requesting application. A connection utility is

provided for managing communication between the media access control
emulator and a dynamic communication channel. In response to receiving

an application or user instigated request to communicate with the
computing resource coupled to the remotely located network, the media

access control emulator automatically suspends access to the remotely
located computer resource by emulating a pre-established operating

condition, such as discarding a packet of data sent by the application
and returning an out of resource indication to the application. During

such automatic suspension of access, the connection utility establishes
communication with the remotely located network via the dynamic

communication channel. Once communication has been established, the
requesting application is allowed access to the computer resource coupled

to the remotely located network via the dynamic communication channel,
wherein the media access control emulator and the connection utility mask

the dynamic nature of the dynamic communication channel from the
requesting application.


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
RICHTER ROGER K
</INVENTOR-NAME>
<INVENTOR-NAME>
STARK DAVID R JR
</INVENTOR-NAME>
<INVENTOR-NAME>
RICHTER, ROGER K.
</INVENTOR-NAME>
<INVENTOR-NAME>
STARK, DAVID R., JR.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to the interfacing of computing
resources with applications running within a data processing system, via
a dynamic communication channel.A computer network, which may also be called a distributed data
processing system, comprises a set of communication channels
interconnecting a set of computing devices or nodes that have the ability
to communicate with one another. The nodes may be data processing
systems, computers, terminals, workstations, communication units such as
modems and bridges, or peripheral devices such as printers, output
devices, or scanners. Such nodes communicate via communication channels,
which may utilize a variety of transmission media. Some examples of
commonly utilized transmission media include optical fibers, co-axial
cable, twisted-pair wires, infrared radiation, or electromagnetic
radiation, as utilized in satellite links and digital microwave radio.
Such nodes may be distributed over a wide area (distances of hundreds or
thousands of kilometres) or over a local area (distances of thirty metres to
several kilometres), in which case the networks are called wide area networks
(WANs) or local area networks (LANs), respectively.For many years, data processing system users have recognized and
enjoyed the benefits of sharing data among data processing systems, and
accessing computer resources connected to the local area network (LAN),
such as other data processing systems, printers, input/output devices,
and communication devices such as modems or bridges. Recently, it has
become necessary to provide a communication channel between such local
area networks and a remote data processing system, such as a portable
computer, via a dynamic communication channel. This dynamic
communication channel may be characterized by its transient nature (i.e.,
the ability to establish and disconnect at will) and the ability to
change physical media or hardware each time such a communication channel
is established.One example of a dynamic communication channel is a public switched
telephone network (PSTN). A data processing system user may establish
and disconnect a communication channel via the public switched telephone
network at any time, and, if multiple communication ports are available
within the user's data processing system, the user may choose through
which communication port the dynamic communication channel is 
established. Furthermore, the user may choose to establish different
communication channels at different times, or establish multiple
communication
</DESCRIPTION>
<CLAIMS>
A communications interface system for interfacing a data processing
system within which an application is running, with a computing resource,

coupled to a network, via a communication channel, said network having a
multilayered communication architecture, implemented utilizing a

multilayered protocol stack, for facilitating communication between network
resources, said communications interface system comprising:


a media access control for controlling access to said network;
a connection utility (150) for managing communication between said
media access control and said communication channel, and arranged to

establish communication with said network via said communication channel;
and
means for allowing said application access to said computer resource
coupled to said network via said communication channel;

   
characterised in that
said network is remotely located and that said communications channel
is dynamic; and that
said media access control comprises a media access control emulator
(142, 144, 146) for presenting a standard media access control interface to

said application running within said data processing system, said media
access control emulator being arranged to suspend access to said remotely

located computing resource by emulating a preestablished operating
condition in response to an application attempt to communicate with said

computing resource; and wherein
said connection utility (150) manages communication between said
media access control emulator and said dynamic communication channel, and

is arranged to establish communication with said remotely located network
via said dynamic communication channel while said media access control

emulator suspends access to said remotely located computing resource,
whereby said media access control emulator and said connection
utility mask the dynamic nature of said dynamic communication channel from

said application.
A communications interface system as claimed in claim 1 further
including means for binding said media access control emulator with said

multilayered protocol stack.
A communications interface system as claimed in claim 1 or claim 2
wherein said connection utility includes: 


means for determining an appropriate protocol for communicating with
said remotely located network; and
means for binding said media access control emulator with a selected
wide area network media access control coupled to a selected medium

attachment unit as determined by said appropriate protocol for
communicating with said remotely located network.
A communications interface system as claimed in any preceding claim
wherein said dynamic communication channel is a public switched telephone

network.
A communications interface system as claimed in any preceding claim
wherein said media access control emulator operative to suspend access to

said remotely located computing resource includes:

means for discarding a packet of data sent to said media access
control emulator by said application; and
means for returning an out of resource indication to said
application.
A communications interface system as claimed in claim 3 wherein said
connection utility further includes means for directing said media access

control emulator to close and unbind said selected wide area network media
access control when access to said computer resource coupled to said

remotely located network is terminated.
A communications interface system as claimed in any preceding claim
wherein said media access control emulator operative to present a standard

media access control interface includes means for presenting a high level
data link control (HDLC) media access control interface to an application

running within said data processing system.
A method in a data processing system within which an application is
running, for interfacing a computing resource, coupled to a network, via a

communication channel, said network having a multilayered communication
architecture, implemented utilizing a multilayered protocol stack, for

facilitating communication between network resources, the data processing
system comprising:


a media access control for controlling access to said network;
a connection utility for managing communication between said media
access control and said communication channel;

   
characterised in that
 
   said network is remotely located and that said communication channel

is dynamic, and that said media access control comprises:

a media access control emulator for interfacing with an application
running within said data processing system and for presenting a standard

media access control interface to said application running within said data
processing system; and wherein
the method comprises, in response to an application attempt to
communicate with said computing resource coupled to said network, the steps

of:

(a) suspending access to said remotely located computer resource by
utilizing said media access control emulator to emulate a preestablished

operating condition;
(b) simultaneously establishing communication with said remotely
located network via said dynamic communication channel utilizing said

connection utility; and

   whereby said media access control emulator and said connection
utility mask the dynamic nature of said dynamic communication channel from

said application.
A method as claimed in claim 8 further including the step of binding
said media access control emulator with said multilayered protocol stack.
A method as claimed in claim 8 or claim 9 wherein the step of
simultaneously establishing communication with said remotely located

network via said dynamic communication channel utilizing said connection
utility includes the steps of:


determining an appropriate protocol for communicating with said
remotely located network; and
binding said media access control emulator with a selected wide area
network media access control coupled to a selected medium attachment unit

as determined by said appropriate protocol for communicating with said
remotely located network.
</CLAIMS>
</TEXT>
</DOC>
