<DOC>
<DOCNO>EP-0651897</DOCNO> 
<TEXT>
<INVENTION-TITLE>
METHOD FOR THE DYNAMIC MANAGEMENT OF A FREE STORE IN A COMPUTER, THE FREE STORE BEING DESIGNED FOR SUBDIVISION INTO AT LEAST TWO LOGIC ZONES WITH DIFFERENT ACCESS CHARACTERISTICS
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1202	G06F1202	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F12	G06F12	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The invention concerns a method of managing a free store in a computer, the free store being designed for subdivision into at least two logic zones with different access characteristics, the subdivision into segments being carried out by buddy algorithm. The method proposed is particularly suitable for time-critical applications with high security requirements. In particular, the method satisfies the requirements for stepwise resettability and for storage protection which is efficient in terms of operating time, as called for by telecommunications equipment.
 
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
SIEMENS AG
</APPLICANT-NAME>
<APPLICANT-NAME>
SIEMENS AKTIENGESELLSCHAFT
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MEHNER THOMAS
</INVENTOR-NAME>
<INVENTOR-NAME>
MEHNER, THOMAS
</INVENTOR-NAME>
</INVENTORS>
<CLAIMS>
Method for the dynamic management of a free store of 
a computer, the free store, for which subdivision into at 

least two logical store areas (A,B) with different access 
characteristics is provided, having the following features: 


a) the free store (S) is subdivided into segments on 
the basis of the buddy algorithm, 
b) a separate list (L1,L2) of the store segments available 
for the respective store area is kept for each 

logical store area (A,B) 
c) the segment size which is assigned to a logical 
store area (A,B) from the free store (S) corresponds 

to the segment size of the maximum size prescribed 
as the maximum in the buddy algorithm, 
d) in the event of a store request to a logical store 
area (A), the latter is assigned a segment from the 

free store (S) if there is no store segment of 
sufficient size available in the respective list 

(L1,L2) of the store segments available for the 
respective logical store area (A,B), 
e) if it is no longer possible to cater for a store 
request from a logical store area (A,B) which 

requires an assignment from the free store (S), 
since the free store (S) has already been completely 

assigned, the lists of the available store segments 
of the respectively other store areas (A,B) are 

checked to ascertain whether there are segments 
there with the maximum size and, if this condition 

is met, such a segment is taken over from there and  
 

assigned to the corresponding list (L1, L2). 
Method according to Claim 1, in which, after removal 
of the address area of a logical store area, the latter 

is retained in its size. 
Method according to one of Claims 1 or 2, in which, 
if the computer provides store segment protection, those 

segments which are assigned to a logical store area are 
provided with protection. 
Method according to Claim 3, in which segment 
protection features of the segments assigned from the 

free store are deposited in store areas provided for the 
purpose. 
Method according to Claim 4, in which the segment 
protection features are the initial address, the segment 

length and the type of access. 
Method according to one of Claims 3 to 5, in which 
the computer is a microprocessor from 80286. 
Method according to one of Claims 1 to 6, in which 
the admissible segment size in the buddy algorithm is 2
k
 
with the following condition for k: 


5 ≤ k ≤ 16. 
</CLAIMS>
</TEXT>
</DOC>
