<DOC>
<DOCNO>EP-0645717</DOCNO> 
<TEXT>
<INVENTION-TITLE>
System for data synchronization and method therefor.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F112	G06F112	G06F1342	G06F1342	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F1	G06F1	G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A data synchronization system (12) for use with a first and 
a second device has control circuitry (34), first circuitry (36, 38, 

40, 42 and 44) and second circuitry (32). The control circuitry 
generates a first and a second control signal. The logic states of 

the two control signals depend upon the ratio of the clock 
frequencies of the two devices. The first circuitry receives a 

first data signal from the first device and generates a first 
output signal for the second device depending upon the logic state 

of the first control signal. Conversely, the second circuitry 
receives a second data signal from the second device and 

generates a second output signal for the first device depending 
upon the logic state of the second control signal. The 

synchronization system may be incorporated into data processing 
systems in which the data processor and bus operate at different 

clock frequencies. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
MOTOROLA INC
</APPLICANT-NAME>
<APPLICANT-NAME>
MOTOROLA, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
SNYDER MICHAEL D
</INVENTOR-NAME>
<INVENTOR-NAME>
SNYDER, MICHAEL D.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention generally relates to data processing 
systems, and more specifically to a data synchronization 
methodology for use with a data processing system. Many data processing systems are designed with subsystems 
that operate at different clock frequencies. This strategy can 
increase overall processing throughput by increasing the operating 
speed of select subsystems relative to the remaining subsystems. 
Typically, the performance of these faster subsystems is either 
critical to the overall performance of the system or relatively 
inexpensive to increase. One example of this design strategy is a 
data processing system with a single VLSI (very large scale 
integrated) data processor operating at a clock frequency some 
multiple times the clock frequency of an associated bus In this 
case, all other subsystems in the data processing system operate 
at the lower bus clock speed. Generally, the ratio of the two clock 
frequencies may be expressed as the ratio of two integers: 2:1, 
3:2, 4:1, etc. The range of these ratios reflects the pragmatic 
requirement that the two clock signals have some frequent phase 
alignment in which to synchronize inter-system communications. 
The more frequent the phase alignment, the greater the number of 
opportunities to transfer data between the fast data processor 
and the slower bus. Data processing systems that have a data processor 
operating at a different clock frequency than an associated bus 
must synchronize data transfer between the data processor and  
 
the bus. For instance, in a 2:1 processor-bus system, it may be 
the case that the data processor does not assert an output signal 
during the correct phase of the bus signal if the data processor 
only asserts the signal for one processor clock cycle. Conversely, 
the bus will assert an input signal to the data processor for two 
processor clock cycles. Both of these scenarios result in 
unreliable data transfers. In the first case, data may not be 
transferred from the data processor to the bus at all. In the 
second case, the bus will transfer the same data twice to the data 
processor. Known synchronization methods have limitations. In 
general, data transfer methods may be described as asynchronous 
or synchronous. Each of these methods has a different 
synchronizing problem. In the asynchronous case, there are no timing requirements 
between two communicating subsystems other than minimum 
signal hold times. In one known solution, a slow output signal is 
sampled by a fast input device
</DESCRIPTION>
<CLAIMS>
A data synchronization system (12) for use with a first and 
a second device, the first device operating at a first 

frequency, the second device operating at a second 
frequency, the first frequency greater than the second 

frequency, a ratio of the first and second frequencies equal 
to a ratio of N:M in simplest form, where N and M are 

integers, the system comprising:
 

   control circuitry (34) for receiving a first clock 
signal, the first clock signal operating at the 

first frequency, the control circuitry generating 
a first control signal and a second control signal, 

the first and second control signals 
characterized by a period, the period equal to a 

quotient of the integer N and the first frequency, 
the first control signal having either a first or a 

second logic state, the first control signal 
corresponding to the first logic state during a 

first fractional portion of the period and to the 
second logic state during a second fractional 

portion of the period, the second fractional 
portion subsequent to the first fractional 

portion, the first fractional portion equal to a 
ratio of (N-1):N, the second portion equal to a 

ratio of 1:N, the second control signal having 
either a third or a fourth logic state, the second 

control signal corresponding to the third logic 
state during a third fractional portion of the 

period and to the fourth logic state during a 
fourth fractional portion of the period, the 

fourth fractional portion subsequent to the third 
fractional portion, the third fractional portion 

equal to a ratio of 1:N, the fourth fractional 
portion equal to a ratio of (N-1):N; 

   first circuitry (36, 38, 40, 42 and 44) coupled to the 
control circuitry, the first circuitry receiving a 

first data signal from the first device and 
generating a first output signal coupled to the 

second device, the first circuitry generating the 
first output signal during the second fractional 

portion of the period; and
 

   second circuitry (32) coupled to the control circuitry, 
the second circuitry receiving a second data 

signal from the second device and generating a 
second output signal coupled to the first device, 

the second circuitry generating the second 
output signal during the third fractional portion 

of the period. 
The data synchronization system of claim 1 wherein the 
first circuitry comprises: 

   latching circuitry (33, 40, 42 and 44) for storing the first 
data signal received during the first fractional portion 

of the period, the latching circuitry generating a 
previously stored first data signal; and 

   forwarding circuitry (36) coupled to the latching circuitry, 
the forwarding circuitry generating the first output 

signal during the second fractional portion of the 
period, the first output signal being a logical OR 

function of the previously stored first control signal 
and the first data signal received during the second 

fractional portion of the period. 
The data synchronization system of claim 2 wherein the 
control circuitry comprises circuitry for generating a 

second control signal, the second control signal 
characterized by the period, the second control signal having 

either a third or a fourth logic state, the second control 
signal corresponding to the third logic state during a fifth 

and a sixth fractional portion of the period and to the fourth 
logic state during a seventh fractional portion of the period 

when the ratio of N:M is a non-integer value, the sixth 
fractional portion subsequent to the seventh fractional 

portion, the seventh fractional portion subsequent to the 
fifth fractional portion, the fifth and sixth fractional 

portions equal to a ratio of 1:N, the sixth fractional portion 
equal to a ratio of (N-2):N. 
The data synchronization system of claim 1 wherein the 
control circuitry comprises circuitry for generating a 

second control signal, the second control signal having 
either a third or a fourth logic state, the second control 

signal corresponding to the third logic state during a fifth 
and a sixth fractional portion of the period and to the fourth 

logic state during a seventh fractional portion of the period 
when the ratio of N:M is a non-integer value, the sixth 

fractional portion subsequent to the seventh fractional 
portion, the seventh fractional portion subsequent to the 

fifth fractional portion, the fifth and sixth fractional 
portions equal to a ratio of 1:N, the sixth fractional portion 

equal to a ratio of (N-2):N. 
A method of synchronizing data transfers between a data 
processor and a bus, the data processor operating at a first 

periodic clock frequency, the bus operating at a second 
periodic clock frequency, the first periodic clock frequency 

greater than the second periodic clock frequency, a ratio of 
the first and second periodic clock frequencies equal to a 

ratio of N:M in simplest form, where N and M are integers, 
the method comprising the steps of: 

   generating a first control signal (LATCH/FORWARD) in 
the data processor, the first control signal 

characterized by a period, the period equal to a 
quotient of the integer N and the first periodic 

clock frequency, the first control signal having 
either a first or a second logic state, the first 

control signal corresponding to the first logic 
state during a first fractional portion of the 

period and to the second logic state during a 
second fractional portion of the period, the 

second fractional portion subsequent to the first 
fractional portion, the first fractional portion 

equal to a ratio of (N-1):N, the second fractional 
portion equal to a ratio of 1:N; 

   generating a second control signal (PASS/MASK) in the 
data processor, the second control signal 

characterized by the period, the second control 
signal having either a third or a fourth logic 

state, the second control signal corresponding to 
the third logic state during a third fractional 

portion of the period and to the fourth logic 
state during a fourth fractional portion of the 

period, the fourth fractional portion subsequent 
to the third fractional portion, the third 

fractional portion equal to a ratio of 1:N, the 
fourth fractional portion equal to a ratio of (N-1):N;

 
   generating a first data signal in the data processor 

(INTERMEDIATE PROCESSOR OUTPUT); 
   outputting the first data signal to the bus during the 

second fractional portion of the period (FINAL 
PROCESSOR OUTPUT); 

   receiving a second data signal in the data processor 
from the bus (INTERMEDIATE BUS INPUT); and 

   inputting the second data signal to the data processor 
during the third fractional portion of the period 

(FINAL BUS INPUT). 
The method of claim 5 wherein the step of outputting the 
first data signal comprises the steps of: 

   latching the first data signal received during the first 
fractional portion of the period, the step of latching 

generating a previously stored first data signal; and 
   forwarding the first data signal during the second fractional 

portion of the period, the first data signal being a 
logical OR function of the previously stored first 

control signal and the first data signal received during 
the second fractional portion of the period. 
The data processor of claim 6 wherein the step of 
generating a second control signal in the data processor 

comprises the step of generating a second control signal, 
the second control signal characterized by the period, the 

second control signal having either a third or a fourth logic 
state, the second control signal corresponding to the third 

logic state during a fifth and a sixth fractional portion of 
the period and to the fourth logic state during a seventh 

fractional portion of the period when the ratio of N:M is a 
non-integer value, the sixth fractional portion subsequent to 

the seventh fractional portion, the seventh fractional 
portion subsequent to the fifth fractional portion, the fifth 

and sixth fractional portions equal to a ratio of 1:N, the 
sixth fractional portion equal to a ratio of (N-2):N. 
The data processor of claim 5 wherein the step of 
generating a second control signal in the data processor 

comprises the step of generating a second control signal, 
the second control signal characterized by 
the period, the 
second control signal having either a third or a fourth logic 

state, the second control signal corresponding to the third 
logic state during a fifth and a sixth fractional portion of 

the period and to the fourth logic state during a seventh 
fractional portion of the period when the ratio of N:M is a 

non-integer value, the sixth fractional portion subsequent to 
the seventh fractional portion, the seventh fractional 

portion subsequent to the fifth fractional portion, the fifth 
and sixth fractional portions equal to a ratio of 1:N, the 

sixth fractional portion equal to a ratio of (N-2):N. 
</CLAIMS>
</TEXT>
</DOC>
