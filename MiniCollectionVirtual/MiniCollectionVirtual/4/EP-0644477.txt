<DOC>
<DOCNO>EP-0644477</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Personal computer with keyboard and auxiliary device emulation
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1314	G06F3023	G06F132	G06F3033	G06F1314	G06F300	G06F3038	G06F9455	G06F300	G06F3033	G06F3023	G06F132	G06F9455	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F13	G06F3	G06F1	G06F3	G06F13	G06F3	G06F3	G06F9	G06F3	G06F3	G06F3	G06F1	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A computer system provides emulation routines that 
cause a keyboard or mouse to appear to be present to the 

system software even when the devices are not physically 
installed. On system start up, this allows installation of 

appropriate device drivers by the operating system. If a 
keyboard or mouse is later installed, the emulation 

responses are discontinued, and a keyboard and mouse 
operate normally. When the system is placed in a standby 

state, the keyboard and mouse connectors are totally 
powered down. Before this power down, the BIOS routines 

save the configuration state of the keyboard and mouse as 
recorded by the emulation routines, which have been 

tracking commands sent to those devices even when those 
devices are operating. When power is re-enabled to the 

keyboard and mouse connectors, the configuration of those 
devices is restored from that saved configuration data. 

Further, the system detects whether a keyboard or mouse is 
installed o
n a particular connector and appropriately maps 
the keyboard and auxiliary ports to correspond to that 

connector. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
COMPAQ COMP CORP BR A DELAWARE
</APPLICANT-NAME>
<APPLICANT-NAME>
COMPAQ COMPUTER CORPORATION
<
BR
>
(A DELAWARE CORPORATION)
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
HESS RANDALL L
</INVENTOR-NAME>
<INVENTOR-NAME>
JOHNSON DREW S
</INVENTOR-NAME>
<INVENTOR-NAME>
HESS, RANDALL L.
</INVENTOR-NAME>
<INVENTOR-NAME>
JOHNSON, DREW S.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention relates to personal computers
with connections for keyboards and auxiliary device,
and more particular to personal computers that
operate in a reduced power mode in which the
keyboard and auxiliary device can be both disabled
and removed from their connections.Personal computers compatible with the
International Business Machines Corp. (IBM) PC/AT
and its progeny have historically provided both
physical and software interfaces for a keyboard and
an auxiliary device. These interfaces are now
standardized, and any IBM compatible machine must
implement such keyboard and auxiliary serial
interfaces using standard I/O ports and providing a
standard command and data interface for those I/O
ports. This software and hardware interface has
historically been provided in IBM PC compatible
systems by an 8042 peripheral controller by Intel
Corp., programmed to direct communication to and
from either a keyboard connector or an auxiliary
connector. This 8042 command structure standard is
well known in the art and is further described in 
the Compaq DeskPro 386S Personal Computer Technical
Reference Guide.Keyboard and auxiliary devices designed to
operate with an IBM compatible personal computer
likewise have standardized communications formats
for both data and commands. The standard data and
command structure for an IBM compatible keyboard can
be found in the Compaq DeskPro 386S Personal
Computer Technical Reference Guide in Chapter 11.
Pointing devices, such as mice and trackballs, are
often used as the auxiliary device of choice. A
standard for a serial mouse typically used as an
auxiliary device is that used by the IBM PS/2 mouse.
The specifications can be found in Appendix A.The standardization of the keyboard and mouse
command sets has allowed third party manufacturers
to design and market keyboards and mice that can be
directly connected to an IBM compatible personal
computer and immediately function properly. The
standardization of the personal computer hardware
and firmware has allowed software developers to
communicate with these devices in a standardized
way, without the need to patch their programs for
different system communications hardware.These standardized interfaces and standardized
devices, however, do include limitations that have
become especially apparent during the current
proliferation of portable, laptop, notebook, and
notepad style computers. The original IBM personal
computer was a desktop-based machine, and the
software and hardware developers could presume any 
keyboard or
</DESCRIPTION>
<CLAIMS>
A method of preventing the loss of device
configuration on standby in a computer system (C) including

a processor (10), a first device port (34,35,36), and
controller circuitry (32) for communicating between the

processor and the first device port and for receiving
device configuration command characters from the processor,

the first device port being capable of being powered down
and for coupling to a physical user input device, the

physical user input device being arranged to be
configurable by the configuration command characters but

unable to provide its configuration state to the controller
circuitry, the method comprising the steps of:


(a) capturing, in the computer system (C),
predetermined device configuration command characters

directed to the first device port (34,35,36) from the
processor (10);
(b) saving, in the computer system, a configuration
state of the physical user input device as indicated by the

device configuration command characters captured in step
(a);
(c) powering down the device port;
(d) powering up the device port; and
(e) resending the device configuration command
characters, responsive to the device configuration state

saved in the computer system at step (b), to the first
device port to restore the device configuration state to

the physical user input device.
The method of claim 1, wherein step (b) includes the
step of sending the device configuration state to the

processor (10). 
The method of claim 2, further comprising the steps
of:

   after step (c), powering down the controller circuitry
(32) and then powering up the controller circuitry.
The method of claim 1, where the computer further
includes a second device port (34,35,36) capable of being

powered down for coupling to a second physical user input
device, further comprising the steps of:

   repeating steps (a) through (e) for the second device
port and the second physical user input device.
The method of any of claims 1 to 4, wherein the first
or second physical user input device is a keyboard.
The method of any of claims 1 to 4, wherein the first
or second physical user input device is a pointing device.
Controller circuitry for capturing device
configuration of a physical user input device in a computer

system (C) having a processor (10) for sending command and
data characters, a bus (14), and a device port (34,35,36)

for connection of the physical user input device and being
capable of powering down, the physical user input device

being arranged to be configurable by the configuration
command characters of the command and data characters but

being unable to provide its configuration state to the
controller circuitry, the controller circuitry comprising:


means (42) for capturing predetermined device
configuration commands directed to the physical user input

device through the device port;
means (12) for saving device configuration data for
the physical user input device responsive to said means for

capturing the device configuration commands; 
means (42) for powering down and powering up the
device port; and
means (42) for restoring the configuration of the
physical user input device on the device port, responsive

to said means for saving device configuration data.
A computer system including controller circuitry
according to claim 7.
A computer system according to claim 8, and a physical
user input device configurable by the configuration command

characters but unable to provide its configuration state to
the controller circuitry.
</CLAIMS>
</TEXT>
</DOC>
