<DOC>
<DOCNO>EP-0637806</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Matchmaker for exchanging data between objects in an object based data processing system
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F946	G06F946	G06F1730	G06F1730	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F17	G06F17	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A matchmaker facility (810) permits two processes that are to 

cooperate in a data interchange operation identify each other 
and to identify data formats they have in common. A facility 

(222) is provided for managing shared data "resources". 
Customized versions of resources can be created and co-exist 

with standard resources. A resource retrieval function 
determines whether a customized or a standard resource is to be 

returned in response to each request for a resource. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
KODAK LTD
</APPLICANT-NAME>
<APPLICANT-NAME>
KODAK LIMITED
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
KHOYI DANA
</INVENTOR-NAME>
<INVENTOR-NAME>
PHAM LY-HUONG THI
</INVENTOR-NAME>
<INVENTOR-NAME>
SOUCIE MARC SAN
</INVENTOR-NAME>
<INVENTOR-NAME>
STERN LAURA O
</INVENTOR-NAME>
<INVENTOR-NAME>
SURPRENANT CAROLYN E
</INVENTOR-NAME>
<INVENTOR-NAME>
KHOYI, DANA
</INVENTOR-NAME>
<INVENTOR-NAME>
PHAM, LY-HUONG THI
</INVENTOR-NAME>
<INVENTOR-NAME>
SOUCIE, MARC SAN
</INVENTOR-NAME>
<INVENTOR-NAME>
STERN, LAURA O.
</INVENTOR-NAME>
<INVENTOR-NAME>
SURPRENANT, CAROLYN E.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a matchmaker for exchanging data between
two objects in an object based data processing system and, in particular, to
apparatus and methods for managing and integrating objects and programs for
operating on objects.There are a number of major, general problem areas which recur in data
processing systems and these problem areas are growing increasingly demanding
in contemporary systems as the range of types of data and information
processing applications and numbers and types of users grow. These areas
include, in particular, the integration of applications and data in a uniform
system and environment, the ability to add new applications and data types to
an existing system in a manner to integrate the new applications and data
types with existing applications and data types; the ability to update
applications and, in particular, the ability to translate programs and data
from one language to another as business interests and data applications
become international in scope; the ability of different users to share data,
and in particular data in a timely form so that each user has the most recent
version of a particular body of data; and the ability to transfer or exchange
data from one form or data structure to another.A user may want to include a graph in a document. One existing way to
provide the ability for the user to edit the graph from within the context of
the document is to augment a document editor with graph editing capabilities.
This approach has the disadvantage that in order to integrate a further new
type of data (e.g., a voice annotation) into documents, it is necessary to
again modify the document editor. In fact, each editor must be separately
extended to handle each new type of data.While certain systems of the prior art have attempted to solve these
problems, for example, by constructing object based systems wherein all data
types reside in standardized data structures referred to as "objects", the
systems of the prior art have generally failed to adequately solve these
problems. In particular, the systems of the prior art have generally fallen
into one of two classes. In the first and older class of system, there has
been little constraint upon data types and applications programs with the 
result that, while it is easy to add new applications and date types, it is
difficult to provide an integrated system and user environment and very
difficult to communicate data between users and data types. In the second and
more recent class of system, such as
</DESCRIPTION>
<CLAIMS>
An object based data processing system including a memory (112)
for storing data in typed objects (400,404,232), each

object being of a type defined by the type of data stored
in the object, a processor (116) for performing

operations with respect to the typed objects, and at
least one object manager (196,240,) for each type of

object in the system for controlling the operations of
the processor with respect to the objects of the

corresponding type wherein a first object manager (240-s)
is responsive to user inputs for selecting in an object

(232-s)of a corresponding type a portion of the data
therein (800) to be provided to a second object (232-d)

and the object manager (240-d) corresponding to the
second object is responsive to user inputs for indicating

a location in the second object at which the selected
data is to appear, the object based processing system being characterized by

a matchmaker for assisting in the providing of the selected
data from the first object to the second object, comprising:


a first data format memory (804-s,806-s) responsive
to the first object manager for providing indications of

data representations in which the first
object manager will provide data;
a first data transfer controller (808-s,804-s)
responsive to the first object manager for providing as

an output the selected data in one of the
data representations indicated by the first data format

means;
a second data format memory (806-d,804-d) responsive
to the second object manager for providing indications of

data representations in which the second
object manager will accept data;
a second data transfer controller (808-d,804-d) for 
accepting as an input the selected data in one of the

data representations indicated by the second
object manager data format memory;
a format matcher (810) responsive to

the indications of the data representations in
which the first object manager will provide data, and
the indications of the data representations in
which the second object manager will accept data, for
indicating a data representation common to both
the first object manager and the second object manager,

         wherein the first and second data transfer
controllers are responsive to the indication of a common

data representation for respectively providing and
accepting the selected data in the indicated common data

representation; and

a data exchange memory (812) for accepting the
selected data from the first data transfer controller in

the indicated common data representation and providing
the selected data to the second data transfer controller

in the indicated common data representation, the second
data transfer controller accepting the selected data in

the indicated common data representation and providing
the selected data in the indicated common data

representation to the second object manager.
The matchmaker of claim 1 further comprising:

a data conversion converter (808,804) associated
with at least one of the first and second data transfer

controllers for converting the data of the corresponding
type of object from the data representation for that type

of object into at least one other data representation;
wherein
the associated data format memory provides at least
data representation indications for


the data representation for the corresponding
type of object, and 
the at least one other data representation;
wherein
the data converter is responsive to the indicated
common data representation to


accept the data from an object manager in the
data representation for the corresponding object type and

provide the selected data to the data exchange memory in
the indicated common data representation, and to
accept the selected data from the data exchange
memory in the indicated common data representation and

convert the data into a data representation which will be
accepted by the object manager.
The matchmaker of claim 1 further comprising:

a data converter associated with the first data
transfer controller for converting the data

representation for the corresponding type of object into
at least one other data representation; wherein
the first data format memory provides at least data
representation indications for


the data representation of the corresponding
type of object, and
the at least one other data representation
which will be provided by the first data converter; and
the format matcher is responsive to

the indications of the data representations in
which the first data transfer controller will provide

data, for
indicating a data representation common to both
the first object manager and the second object manager;

wherein

the first data converter is responsive to
the indicated common data representation for providing

the selected data to the data exchange memory in the
indicated common data representation, and 
the data exchange memory accepts the
selected data from the first data transfer controller in

the indicated common data representation and provides the
selected data to the second object manager in the

indicated common representation.
The matchmaker of claim 1 further comprising:

a first data converter associated with the first
data transfer controller for converting the data of the

corresponding type of object into at least one other data
representation; wherein
the first data format memory provides at least data
format indications representing


the data representation of the corresponding
type of object, and
the at least one other data representation
which will be provided by the first data conversion

means;
a second data converter associated with the second
data transfer means for converting the data of the

corresponding type of object into at least one other data
representation; wherein
the second data format memory provides at least data
format indications representing


the data representation for the corresponding
type of object, and
the at least one other data representation
which will be provided by the second data converter;

wherein
the format matcher is responsive to

the indications of the data representations in
which the first data transfer controller will provide

data, and
the indications of the data representations in
which the second data transfer controller will accept

data, for 
indicating a data representation common to both
the first and second data transfer controllers; wherein


the first data transfer controller is
responsive to the indicated common data representation

for providing the selected data to the data exchange
memory in the indicated common data representation, and
the second data transfer controller is
responsive to the indicated common data representation

for accepting the selected data in the indicated common
data representation and providing the selected data into

a data representation which may be accepted by the second

object manager; and wherein
the data exchange memory accepts the
selected data from the first data transfer means in the

indicated common data representation and provides the
selected data to the second data transfer controller in

the indicated common data representation.
The matchmaker of claim 4, wherein the data exchange
memory further comprises:


a data exchange format converter (812) for
converting the selected data provided by the first data

transfer controller in the at least one first data
representation into at least one second data

representation; and
the format matcher is responsive to

the indications of the data representations in
which the first data transfer controller will provide

data,
the indications of the data representations in
which the second data transfer controller will accept

data, and
the first and second data representations of
the data exchange format converters


for selecting and indicating

a first common data representation which 
is common to both the first data transfer converter and

the data exchange format converter,
a second common data representation which
is common to both the second data transfer converter and

the data exchange format converter; wherein
the first data transfer controller is responsive to
the indicated first common data representation for

providing the selected data to the data exchange memory
in the first common data representation;
the data exchange format converter is responsive to
the indicated first and second common data

representations for converting the selected data received
from the first data transfer converter in the first

common data representation into the second common data
representation and providing the selected data to the

second data transfer controller in the second common data
representation, and
the second data transfer controller is responsive to
the indicated second common data representation for

accepting the selected data from the data exchange memory
in the second common data representation and converting

it into a data format which will be accepted by the
second object manager.
The matchmaker of claim 1, wherein the at least one
data representation in which the first object manager

will provide data includes:

the data format of the object type of the first
object;
a reduced version of the data format of the object
type of the first object; and,
a basic data format.
The matchmaker of claim 1 wherein the common data
representation indicated by the matchmaker from the

data representations provided by the first data
transfer controller is the common data representation

most similar to the native data representation of the object
type of the first object.
The matchmaker of claim 1, wherein the data
processing system further includes a link mechanism for

linking data from a first object and into a second
object, comprising:


a link marker (420) stored in the second
object, wherein


the link marker indicates the location in
the second object of a link of data (800) from the first

object, and
the link marker includes a link
identification identifying the link within the second

object;
a link memory (252,262,266) for storing

an object identification relating the link
identification to an identification of the first object,
a data identification identifying the
linked data in the first object, and
a copy of the data linked from the first
object; and
a link controller (218) for accessing the link
memory, wherein
the second object manager is responsive to the
link marker for providing the link identification to the

link controller and
the link controller is responsive to the link
identification for


reading the object identification and
the data identification and providing the linked data so 

that the linked data appears to reside in the second
object,
and wherein one of the at least on data
representations in which the first data transfer

controller will provide the selected data is a linked
data representation wherein the linked data

representation includes

a copy of the selected data,
the object identification, and
the data identification.

The new method claims corresponding to original claims 22
through 27 and directed to the matchmaker invention are:
A method for providing selected data from a first object
to a second object, in an object based data processing system including a

memory (112) for storing data in typed objects (400,404,232),
each object being of a type defined by the type of data stored

in the object, a processor (116) for performing
operations with respect to the typed objects, and at

least one object manager (196,240,) for each type of
object in the system for controlling the operations of

the processor with respect to the objects of the
corresponding type wherein a first object manager (240-s)

is responsive to user inputs for selecting in an object
(232-s)of a corresponding type a portion of the data

therein (800) to be provided to a second object (232-d)
and the object manager (240-d) corresponding to the

second object is responsive to user inputs for indicating
a location in the second object at which the selected

data is to appear, characterized by the steps of:

by operation of a first data format memory (804-s,806-s)
and responsive to the first object manager,

providing indications of the data representations
in which the first object manager will provide data; 
by operation of a first data transfer controller
(808-s,804-s) and responsive to the first object manager,

providing as an output the selected data in one of the
data representations indicated by the first data

format means;
by operation of a second data format memory (806-d,804-d)
and responsive to the second object manager,

providing indications of the data representations
in which the second object manager will accept data;
in a second data transfer controller (808-d,804-d),
accepting as an input the selected data in one of the

data representations indicated by the second
object manager data format memory;
by operation of a format matcher (810) responsive to

the indications of the data representations in
which the first object manager will provide data and to

the indications of the data representations in which the
second object manager will accept data,


indicating a data representation common to
both the first object manager and the second object

manager,
wherein the first and second data transfer
controllers are responsive to the indication of a common

data representation for respectively providing and
accepting the selected data in the indicated common data

representation; and
in a data exchange memory (812), accepting the
selected data f
rom the first data transfer controller in
the indicated common data representation and providing

the selected data to the second data transfer controller
in the indicated common data representation, the second

data transfer controller accepting the selected data in
the indicated common data representation and providing

the selected data in the indicated common data
representation to the second object manager.
The method of claim 9, wherein the system further
includes a data conversion converter (808,804) associated

with at least one of the first and second data transfer
controllers for converting the data of the corresponding

type of object from the data representation for that type
of object into at least one other data representation,

further comprising the steps of:

by operation of the associated data format memory,
providing at least data representation indications for


the data representation for the corresponding
type of object, and
the at least one other data representation;
wherein
the data converter is responsive to the indicated
common data representation to


accept the data from an object manager in the
data representation for the corresponding object type and

provide the selected data to the data exchange memory in
the indicated common data representation, and to
accept the selected data from the data exchange
memory in the indicated common data representation and

convert the data into a data representation which will be
accepted by the object manager.
The method of claim 9, wherein the system further
includes a data converter associated with the first data

transfer controller for converting the data
representation for the corresponding type of object into

at least one other data representation, further
comprising the steps of:


by operation of the first data format memory,
providing at least data representation indications for


the data representation of the corresponding
type of object, and
the at least one other data representation
which will be provided by the first data converter;
 
wherein


the format matcher is responsive to the indications
of the data representations in which the first data

transfer controller will provide data for indicating a
data representation common to both the first object

manager and the second object manager; wherein
the first data converter is responsive to the
indicated common data representation for providing the

selected data to the data exchange memory in the
indicated common data representation, and wherein


the data exchange memory accepts the
selected data from the first data transfer controller in

the indicated common data representation and provides the
selected data to the second object manager in the

indicated common representation.
The method of claim 9, wherein the system further
includes a first data converter associated with the first

data transfer controller for converting the data of the
corresponding type of object into at least one other data

representation and a second data converter associated
with the second data transfer means for converting the

data of the corresponding type of object into at least
one other data representation;, further comprising the

steps of:

by operation of the first data format memory,
providing at least data format indications representing


the data representation of the corresponding
type of object, and
the at least one other data representation
which will be provided by the first data conversion

means;
by operation of the second data format memory,
providing at least data format indications representing


the data representation for the corresponding
type of object, and 
the at least one other data representation
which will be provided by the second data converter;

wherein
the format matcher is responsive to

the indications of the data representations in
which the first data transfer controller will provide

data and to the indications of the data representations
in which the second data transfer controller will accept

data, for

indicating a data representation common to
both the first and second data transfer controllers;

wherein
the first data transfer controller is
responsive to the indicated common data representation

for providing the selected data to the data exchange
memory in the indicated common data representation, and
the second data transfer controller is
responsive to the indicated common data representation

for accepting the selected data in the indicated common
data representation and providing the selected data into

a data representation which may be accepted by the second
object manager; and wherein
the data exchange memory accepts the
selected data from the first data transfer means in the

indicated common data representation and provides the
selected data to the second data transfer controller in

the indicated common data representation.
The method of claim 12, wherein the data exchange
memory further includes a data exchange format converter

(812) for converting the selected data provided by the
first data transfer controller in the at least one first

data representation into at least one second data
representation, further comprising the steps of:


by operation of the format matcher responsive to the
indications of the data representations in which the 

first data transfer controller will provide data, the
indications of the data representations in which the

second data transfer controller will accept data, and the
first and second data representations of the data

exchange format converters,

selecting and indicating

a first common data representation which
is common to both the first data transfer converter and

the data exchange format converter, and
a second common data representation which
is common to both the second data transfer converter and

the data exchange format converter; wherein
the first data transfer controller is responsive to
the indicated first common data representation for

providing the selected data to the data exchange memory
in the first common data representation;
the data exchange format converter is responsive to
the indicated first and second common data

representations for converting the selected data received
from the first data transfer converter in the first

common data representation into the second common data
representation and providing the selected data to the

second data transfer controller in the second common data
representation, and
the second data transfer controller is responsive to
the indicated second common data representation for

accepting the selected data from the data exchange memory
in the second common data representation and converting

it into a data format which will be accepted by the
second object manager.
The method of claim 9, wherein the at least one data
representation in which the first object manager wi
ll
provide data includes:


the data format of the object type of the first
object;
a reduced version of the data format of the object
type of the first object; and,
a basic data format.
The method of claim 9 wherein the common data
representation indicated by the matchmaker from

the data representations provided by the first data
transfer controller is the common data representation

most similar to the native data representation of the object
type of the first object.
The method of claim 9, wherein the data processing
system further includes a link mechanism for linking

data from a first object and into a second object,
further comprising the steps of:


storing a link marker (420) in the second
object, wherein


the link marker indicates the location in
the second object of a link of data (800) from the first

object, and
the link marker includes a link
identification identifying the link within the second

object;
storing in a link memory (252,262,266)

an object identification relating the link
identification to an identification of the first object,
a data identification identifying the
linked data in the first object, and
a copy of the data linked from the first
object, and
accessing the link memory, whereby the second
object manager is responsive to the link marker for

providing the link identification to the link controller
and the link controller is responsive to the link

identification for

reading the object identification and
the data identification and providing the linked data so

that the linked data appears to reside in the second
object, and
wherein one of the at least one data
representations in which the first data transfer

controller will provide the selected data is a linked
data representation wherein the linked data

representation includes

a copy of the selected data,
the object identification, and
the data identification.
</CLAIMS>
</TEXT>
</DOC>
