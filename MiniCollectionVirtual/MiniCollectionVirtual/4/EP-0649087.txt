<DOC>
<DOCNO>EP-0649087</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Computer system.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F906	G06F906	G06F944	G06F944	G06F946	G06F946	G06N500	G06N504	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06N	G06N	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F9	G06F9	G06F9	G06F9	G06N5	G06N5	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
With the purpose of automatically and efficiently 
finding and selecting a collection of software functions 

truly useful for a user from a collection of software 
functions and of adequately and easily judging whether the 

software function selected by the user should be adopted 
or not, the computer system according to the present 

invention comprises task description holding means for 
holding a collection of task descriptions formally 

describing individual utilization patterns of various types 
of software functions, and filtering means for finding and 

selecting a task description describing a utilization 
pattern, not tried by the user in the past and regarded as 

useful for the user, from a collection of task descriptions 
held by said task description holding means and for 

disclosing it to the user. By adding the task description 
selected by the filtering means to a task model, said task 

model can be changed during task execution. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
INST PERSONALIZED INFORMATION
</APPLICANT-NAME>
<APPLICANT-NAME>
INSTITUTE FOR PERSONALIZED INFORMATION ENVIRONMENT
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
UYAMA MASASHI
</INVENTOR-NAME>
<INVENTOR-NAME>
UYAMA, MASASHI
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a computer system 
having a filtering mechanism for finding and selecting only 
a collection of software functions useful for a user from a 
collection of physically available software functions 
provided by a number of software developers. In the computer-oriented society of today, new 
software functions are increasingly developed, and versions 
of conventional software are updated day by day. Here, 
software function does not mean software package or 
software product itself provided by the developers, but it 
means individual function provided in form of software. 
For example, in a software product in a front-end processor, 
which works for conversion of kana (Japanese vernaculars) 
and Kanji (Chinese characters), a software function called 
"kana and kanji conversion" is prepared. In a newspaper 
metaphor environment, which presents data obtained from 
retrieval of data base to a user in form of newspaper 
articles, at least the following three functions are 
contained: a function to present the data obtained by 
retrieval of data base to a user in form of a newspaper 
article, a function to turn pages of the newspaper, and a 
function to magnify and display content of the article. 
That is, the developers are offering a single software 
function alone or a plurality of software functions as  
 
software package or software product. The newly designed software function has many 
possibilities in the sense that it offers chances to 
overcome old practices and to increase competitive force 
for the users. On the other hand, it is very difficult to 
find and select software functions useful for the user 
while evaluating the software functions because there are 
enormous numbers of new software functions. It is needless 
to say that such situations occur in a stand-alone computer 
system, while it is more remarkably found in the so-called 
open network environment, in which the user can have access 
to software functions of the other computer systems via 
computer network. Under such circumstances, there are strong demands on 
a filtering mechanism, which serves as a "screen (sieve)" 
for finding and selecting a collection of software truly 
useful for the user from a collection of physically 
available software functions provided by a number of 
software developers. The concept of the filtering mechanism can be explained 
as described below in connection with Fig. 10. A software 
developer 13' develops new software functions and releases 
new versions of conventional
</DESCRIPTION>
<CLAIMS>
A computer system, comprising: 
   task model holding means for holding a task model, 

which is a collection of knowledge, modeled after task 
execution pattern of a user; 

   context information holding means for holding context 
information, which is a knowledge to represent a context of 

task execution of the user, sequentially calculated and 
updated based on input information from task model and 

operation series of the user; 
   task execution means for making access to software 

functions necessary to task execution wanted by the user 
referring to the task model and the context information 

based on input operation by the user and for converting the 
results of execution of the software functions to adequate 

expression to present to the user, referring to the task 
model and context information; 

   whereby there are further provided: 
   task description holding means for holding a collection 

of task descriptions formally describing individual 
utilization patterns of the software functions; and 

   filtering means for finding and selecting a task 
description describing utilization pattern, not tried by 

the user in the past and regarded as useful to the user, 
from a collection of task descriptions held by the task 

description holding means, and for disclosing it to the 
user. 
A computer system according to Claim 1 , wherein 
 

said filtering means is provided with: 
   context-sensitive selection mechanism for selecting 

a task description suitable for context of the current task 
execution using said context information; and 

   context-sensitive disclosure mechanism for offering 
a chance for the user to try to use a utilization pattern 

of a task description selected by said context-sensitive 
selection mechanism in the context of actual task execution. 
A computer system according to Claim 1 or 2, 
wherein said filtering means is provided with: 

   a selection mechanism based on reliability for 
selecting a task description prepared or recommended by a 

reliable person, selected according to reliability 
evaluation values set explicitly by the user from a 

collection of task descriptions not tried by the user in 
the past; 

   a context-sensitive selection mechanism for selecting 
a task description suitable for a context of the current 

task execution using said context information; and 
   context-sensitive disclosure mechanism for offering 

a chance to try to use a utilization pattern of task 
description selected by the selection mechanism based on 

reliability and the context-sensitive selection mechanism 
in the context of actual task execution. 
</CLAIMS>
</TEXT>
</DOC>
