<DOC>
<DOCNO>EP-0645707</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Shared memory with benign failure modes.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1116	G06F1116	G06F1216	G06F1216	G11C2900	G11C2900	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G11C	G11C	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F11	G06F11	G06F12	G06F12	G11C29	G11C29	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Memories which have new benign failure modes. The new failure modes are the 
omission-crash mode and the eventual-crash mode. Memories having either of these 

modes fail more benignly than memories having the omission failure mode, but 
unlike memories having the crash failure mode, memories with the novel failure 

modes may be used to construct gracefully-degrading fault tolerant objects. 
Implementations of memories with the new failure modes are disclosed, along with 

implementations of fault-tolerant objects made from memories with the new failure 
modes. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
AT 
&
 T CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
AT
&
T CORP.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
AFEK YEHUDA
</INVENTOR-NAME>
<INVENTOR-NAME>
MERRITT MICHAEL JOHN
</INVENTOR-NAME>
<INVENTOR-NAME>
TAUBENFELD GADI
</INVENTOR-NAME>
<INVENTOR-NAME>
AFEK, YEHUDA
</INVENTOR-NAME>
<INVENTOR-NAME>
MERRITT, MICHAEL JOHN
</INVENTOR-NAME>
<INVENTOR-NAME>
TAUBENFELD, GADI
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention concerns memory for computer systems generally and more 
specifically concerns memory which is shared among processes which have 
concurrent access to the memory. Increasingly, systems which are themselves implemented by means of computer 
systems are designed as systems in which a number of processes performing 
various system functions share memory. In such shared memory 
systems, the memory is concurrently accessed by the processes, and the processes 
communicate with one another by setting and reading values in the 
shared memory. A major goal in the design of modern computer-implemented systems is 
fault tolerance, that is, the ability of the system to keep on functioning in 
the presence of the failure of some of its components. An important part 
of fault tolerance is benign failure modes: when a component of a system  
 
finally does fail, the failure should be such that the rest of the system can 
easily deal with it. An example of a benign failure mode for a processor is 
the stop failure mode: when the processor fails, it simply stops, rather than 
continuing to operate in an erroneous fashion. In shared memory systems, it is of course crucial that the shared memory 
be fault tolerant, and it is desirable that it have a benign failure mode. Recent 
research has demonstrated that it is possible to build a fault-tolerant shared 
memory from potentially faulty components, as long as the number of faulty 
components does not exceed a threshold value. See Yehuda Afek, David 
Greenberg, Michael Merritt, and Gadi Taubenfeld, "Computing with faulty 
shared memory", in Proceedings of the 11th ACM Symposium on Principlesof Distributed Computing, August, 1992. Two types of benign failure of shared memories have also been investigated: 
the crash mode and the omission mode. See P. Jayanti, T. Chandra, 
and S. Toueg, "Fault-tolerant wait-free shared objects", in 33rd Annual Symposium 
on the Foundations of Computer Science, IEEE Computer Society 
Press, October, 1992. The crash mode is like the stop mode for processes: 
the failure of the memory appears to the processes which are sharing it to 
be complete and instantaneous; memory operations performed by a process 
preceding the failure behave correctly; memory operations performed after 
the failure return a special value which indicates that the operation was not 
performed. The special value is represented in the following by the * symbol. 
In the omission mode, memory operations performed on the shared memory 
by a process during and
</DESCRIPTION>
<CLAIMS>
Memory apparatus for concurrently performing first memory 
operations for a plurality of processes, the memory apparatus comprising: 

   potentially faulty memory means for performing second memory 
operations; and 

   memory interface means which is concurrently accessible to the 
processes for responding to first memory operations specified by the processes by 

specifying second memory operations as required to perform the specified first 
memory operations, the memory interface means including 

   means for detecting a fault in the memory means and responding thereto 
by returning a first special value in those of the first memory operations which were 

being concurrently performed when the fault was detected, the first special value 
indicating only termination of the memory operation, and a second special value in 

those of the first memory operations which were performed subsequent to the 
detection of the fault, the second special value indicating that the memory apparatus 

has crashed. 
In memory apparatus which performs memory operations concurrently 
for a plurality of processes and which includes potentially faulty memory means, the 

improvement comprising: 
   means for detecting a fault in the memory means and responding thereto 

by returning a first special value indicating that a failure is imminent in memory 
operations which were begun prior to the detection of the fault and returning a 

second special value indicating that the memory apparatus has crashed in those 
memory operations which are begun subsequent to detection of the fault. 
The memory apparatus set forth in claim 2 wherein: 
   the means for detecting the fault returns the first special value only in 

memory operations which were not yet complete when the fault was detected. 
</CLAIMS>
</TEXT>
</DOC>
