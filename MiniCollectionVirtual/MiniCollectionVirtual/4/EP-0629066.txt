<DOC>
<DOCNO>EP-0629066</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Checksum arrangement
</INVENTION-TITLE>
<CLASSIFICATIONS>H03M714	G06F1110	H04L2549	H03M1300	G06F1300	H04L2906	H04L100	H04L2906	H04L100	G06F1110	H03M1300	G06F1300	H03M714	H04L2549	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H03M	G06F	H04L	H03M	G06F	H04L	H04L	H04L	H04L	G06F	H03M	G06F	H03M	H04L	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H03M7	G06F11	H04L25	H03M13	G06F13	H04L29	H04L1	H04L29	H04L1	G06F11	H03M13	G06F13	H03M7	H04L25	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A coding scheme for transmitting messages particularly between 
computers is described. Messages are transmitted in packets 

which include at least a data portion and a terminator. Out 
of a predetermined set of symbols, sixteen data symbols and at 

least one control symbol is selected. The terminator token is 
generated to constitute the control symbol and a six-bit 

symbol representing checking bits. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
SGS THOMSON MICROELECTRONICS
</APPLICANT-NAME>
<APPLICANT-NAME>
STMICROELECTRONICS LIMITED
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
WALKER CHRISTOPHER PAUL HULME
</INVENTOR-NAME>
<INVENTOR-NAME>
WALKER, CHRISTOPHER PAUL HULME
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to the transmission of messages
and particularly but not exclusively to the transmission of
messages over optical fibre or a.c. coupled copper cable
links. The invention relates particularly to an efficient way
of transmitting checking data.This application is particularly concerned with the
transmission of messages between computers, each computer
having a link interface which receives messages from its
associated computer and encodes these for transmission to a
link interface associated with a remote computer. One known
format for provision of the messages by the computer is a
so-called data/strobe format (DS format) where two wires are
provided, one for data and one for strobe signals. This
message format is described in our European Patent EP 0 458 648.Each message comprises a plurality of packets. Each packet
comprises a header or address portion, a data portion
(normally but not always) and a terminator as an end of packet
indicator. Where the packet is the last packet in a message,
the end of packet indicator is replaced by an end of message
indicator as the terminator. The data portion can be made up
of data tokens. Data tokens each comprise a flag bit, a
parity bit and eight bits representing data to be transmitted
(herein data bits). A terminator token comprises a flag bit,
a parity bit and two control bits identifying the type of
terminator token. In each case the flag bit identifies
whether the token is a data token or a terminator token.Existing coding schemes for encoding messages of this type can
have the effect that a single bit error in data received by
the remote computer from the transmitting computer can
generate a multiple bit error when decoded. In order to avoid
this, existing decoding schemes use cyclic redundancy checks 
(CRCs) which involve the transmission of asset of checking
bits for each transmitted packet transmitted at the end of the
packet. For long packets, this can be relatively efficient,
for example four bytes of checking data for a packet having a
length of four kilobytes. However, for small packets this is
much less efficient and could in some circumstances double the
length of a packet. The present invention is concerned
particularly with the transmission of short packets.The present invention utilises a d.c. balanced coding system
wherein each group of four data bits sent by the computer to
its associated link interface is converted into a six-bit
symbol having three ones and three zeros. Each byte of data
is thus encoded into two
</DESCRIPTION>
<CLAIMS>
A method of encoding message packets including at least a
data portion and a terminator, the data portion comprising a

plurality of four bit values (TD0-3,TD4-7) defining data to be
transmitted, the method comprising:


selecting out of twenty available six-bit symbols having
three ones and three zeros sixteen data symbols and at least

one control symbol (CONTROL SYMBOL); and
converting each of the four bit values into a respective
one of said six-bit data symbols;

   
characterised by
:

generating from the four bit values a set of four
checking bits (88,89,90,91) for that message packet, wherein

the checking bits are longitudinal parity bits generated by
taking the longitudinal parity over the four bit values;
converting the four checking bits into a six-bit data
symbol (DATA [CHECKSUM]
 SYMBOL) selected from said sixteen
data symbols; and
generating a terminator token (EOP,EOM) comprising said
six-bit symbol representing said four checking bits and said

control symbol.
A method according to claim 1, wherein the checking bits
are longitudinal parity bits generated by taking the

longitudinal parity over the four bit values of the data
portion.
A method according to claim 1, wherein the message packet
also includes an address portion (HEADER) comprising a

plurality of four bit values, and wherein the checking bits
are longitudinal parity bits generated by taking the

longitudinal parity over the four bit values of the address
portion and the data portion together.
A method according to any of claims 1 to 3, wherein the
control symbol (CONTROL) is 010101 or 101010. 
A method according to any preceding claim, wherein the
terminator is an end of packet token (EOP) and comprises

the control symbol followed by the six-bit symbol representing
said four checking bits.
A method according to any of claims 1 to 4, wherein the
message comprises a plurality of packets, and the terminator

is an end of message token (EOM) comprising the six-bit
symbol representing said four checking bits followed by the

control symbol.
Apparatus for encoding message packets including a data
portion and a terminator, the data portion comprising a

plurality of four bit values (TD0-3,TD4-7) defining data to be
transmitted, the apparatus comprising:


logic circuitry (101,102) for converting each of the four
bit values into respective six-bit data symbols (141,142), the

six-bit data symbols being selected out of a predefined set of
sixteen six-bit symbols of twenty available six-bit symbols

each having three ones and three zeros; and

   
characterised by
:

checking bit generating circuitry (80) for generating
from the four bit values a set of four checking bits

(88,89,90,91) for that message packet, wherein said checking
bit generating circuitry (80) comprises summing circuits

(150,151,152,153) for taking the logical sum of bits having a
place of the same significance in each of the four bit values

to produce a set of checksum bits (88,89,90,91);
said logic circuitry (125,100) being operable to convert
the four checking bits into a six-bit data symbol (DATA

[CHECKSUM] SYMBOL) selected from said sixteen data symbols;

and
token generating circuitry (81) for generating a
terminator token (EOP,EOM) comprising said six-bit symbols

representing said four checking bits and a control symbol
(CONTROL SYMBOL) which is selected from the four remaining

available six-bit symbols having three ones and three zeros.
Apparatus according to claim 7, wherein the token
generating circuitry (81) is arranged to generate as said

control symbol (CONTROL) the symbol 010101 or 101010.
Apparatus according to claim 7 or 8, which includes
circuitry (118,119) for distinguishing between an end of

packet indicator (EOP) and an end of message indicator (EOM),
the token generating circuitry (81) being operable to produce

as an end of packet token (EOP) the control symbol (CONTROL
SYMBOL) followed by the symbol representing the checking bits

(DATA [CHECKSUM] SYMBOL) and as an end of message token

(EOM) the symbol representing the checking bits followed by the
control symbol.
Decoding circuitry comprising:


input circuitry (192) arranged to receive a sequence of
six-bit symbols (59,60) representing a message packet;
logic circuitry (300,301,303,304,305) arranged to convert
each six-bit symbol into a four bit value (214,219); and

   
characterised by
:

control symbol detection circuitry (306,307,308,309,310,
311) for recognising certain of said six-bit symbols as

control symbols and operable to generate different outputs
(202,203,204,205)depending on the detected control symbol; and
control symbol sequence detection circuitry (194) for
receiving said outputs and for generating different signals

(RXEOP,EXEOM) depending on the type and position of the
detected control symbols thereby to distinguish between an end

of packet token (EOP) which comprises a control symbol
(CONTROL SYMBOL) followed by a six-bit symbol representing a

set of longitudinal parity checking bits (DATA [CHECKSUM]
SYMBOL) and an end of message token (EOM) which comprises a

six-bit symbol representing a set of longitudinal parity
checking bits followed by a control symbol; and
checking circuitry (193) arranged to check the checking
bits transmitted in the end of packet or end of message token

to identify any errors in transmission.
</CLAIMS>
</TEXT>
</DOC>
