<DOC>
<DOCNO>EP-0649106</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Compactly stored word groups
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1727	G06F1727	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F17	G06F17	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Compactly stored word group data can be used to rapidly obtain information about 
groups of words, such as synonyms. A product that includes the word group data on a storage 

medium can, for example, be used in an electronic thesaurus or other word associating device. 
The word group data includes a sequence of word identifiers and grouping data indicating 

group information about groups of identifiers in the sequence. If an identifier is found that 
matches a word's identifier, the matching identifier's position and the grouping data can be 

used to obtain data indicating a feature of a group that includes the word. For example, the 
groups of identifiers can be ordered by length, and the grouping data can indicate the number 

of groups of each length; in this case, the matching identifier's position and the grouping data 
can be used to obtain positions of identifiers in the group so that they can be retrieved. The 

groups of identifiers can also be ordered by part of speech, and the grouping data can indicate 
positions of first and last identifiers of each part of speech; in this case, the matching 

identifier's position and the grouping data can be used to obtain part of speech of identifiers in 
the group. The identifiers can be numbers in a dense set, and the product can also include 

mapping data on the storage medium for mapping a word to its identifier or a group of 

identifiers to words. The identifiers can be stored in parts, with the byte length an integer 
multiple of each part's length for single cycle comparison. Each group of identifiers can be 

sorted numerically and the groups of each length can be sorted numerically by first identifier to 
permit skipping during search. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
XEROX CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
XEROX CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
KAPLAN RONALD M
</INVENTOR-NAME>
<INVENTOR-NAME>
KAY MARTIN
</INVENTOR-NAME>
<INVENTOR-NAME>
KAPLAN, RONALD M.
</INVENTOR-NAME>
<INVENTOR-NAME>
KAY, MARTIN
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a product, an apparatus and a method of using word group data.Lucchesi, C.L. and Kowaltowski, T., "Applications of Finite Automata Representing
Large Vocabularies," Software--Practice and Experience, Vol. 23(1), January 1993, pp. 15-30,
describe techniques for compressing a very large vocabulary of words into a minimal acyclic
deterministic finite automaton, motivated by the problem of implementing an efficient
spelling checker. Fig. 4 shows such an automaton for all forms of certain English verbs. Pages
26-27 describe minimal perfect hashing in relation to Figs. 8-10. The automaton includes, for
each state, an integer that gives the number of words that would be accepted by the
automaton starting from that state, and two simple functions implement a one-to-one
correspondence between the integers 1 to L, where L is the number of words accepted by the
automaton, and the words themselves. Pages 28-29 describe a thesaurus implemented with a
numbered automaton with multiple initial states, each initial state corresponding to one
grammatical category. Additional data structures represent the lists of words as sequences of
numbers. IBM TDB, Volume 35, No. 4B, September 1992, pages 81 to 82 discloses algorithms for
disambiguating word-senses in thesauri. Dictionary-thesauri are described as consisting
of alphabetically arranged discrete entries. Each entry consists of a headword,
separated into senses, and each sense is followed by a list of its synonyms. Examples
are given in which a headword W has senses W1 through Wn and a headword A has
senses A1 through Am.It is the object of the invention to provide a product, an apparatus and a method of using
word group data capable of efficiently obtaining data indicating related words such as
synonyms.This object is solved by the subject matters of claims 1, 8 and 14.Preferred embodiments are defined by the dependent claims. The invention is based on the discovery of techniques that provide compact word
group data with information about groups of words. Related words can be rapidly obtained
using the word group data.The invention is based on the recognition that the
information necessary for storage and retrieval of synonyms or the like includes two
distinguishable parts and that distinguishing these parts can improve efficiency. One part,
referred to herein as relating information, is information that relates each word to other
words. The other part, referred to as identifying information, identifies each word; each word
may have a
</DESCRIPTION>
<CLAIMS>
A product (10; 350) comprising:

a storage medium (360) for storing data in machine-accessible form; and
word group data (44; 372) stored by the storage medium; the word group
data indicating a plurality of groups of related words;
characterized in that
 the word group data comprises:

a plurality of identifier data items, each identifier data item identifying a word;
the identifier data items being ordered into a sequence;
grouping data indicating group information about groups of identifier data
items in the sequence, each group of identifier data items identifying a

group of words; an identifier data item's position and the grouping data
together indicating at least one of:


number of members of a group of words that includes the identifier data
item's word;
position of identifiers of members of the group of words that includes the
identifier data item's word; and
part of speech of members of a group of words that includes the identifier
data item's word.
The product according to claim 1, 
characterized in that
 the groups of
identifier data items are ordered in the sequence by group length; the

grouping data indicating the number of groups of each length. 
The product according to claim 2, 
characterized in that
 each of the
identifier data items is a number; the identifier data items in each group

being ordered numerically and the groups of each length being ordered
numerically according to the first identifier data in each group.
The product according to claim 1, 
characterized in that
 each group of
words includes words of one part of speech and the groups of identifier data

items are ordered in the sequence by part of speech; the grouping data
indicating positions of first and last identifier data items of each part of

speech.
The product according to one of claims 1 to 4, further 
characterized by

mapping data (36; 370) stored by the storage medium (360); the mapping
data being accessible to map between a word and the word's identifier data

item.
The product according to claim 5, 
characterized in that
 the mapping data
maps between the words and identifier data items that together form a

dense set of numbers of fixed length.
The product according to one of claims 1 to 6, 
characterized in that
 each
identifier data item includes a plurality of parts, at least one part of each

identifier data item having a length less than a full byte length; the full byte
length being an integral multiple of each part's length so that a comparison

with any of the parts can be made in a single machine cycle.
A method of using word group data (44; 372); the word group data
indicating a plurality of groups of related words;
characterized in that
 the word group data including:

a plurality of identifier data items, each identifier data item identifying a word;
the identifier data items being ordered into a sequence; 
grouping data indicating group information about groups of identifier data
items in the sequence, each group of identifier data items identifying a

group of words; an identifier data item's position and the grouping data
together indicating a feature of a group of w
ords that includes the identifier
data item's word;
the method comprising:

searching the sequence of identifier data items to find an identifier data item
that matches a word's identifier; and
upon finding an identifier data item that matches, using the position of the
matching identifier data item and the grouping data to obtain data relating to

a group that includes the word.
The method according to claim 8, 
characterized in that
 the step of
searching the sequence comprises:


obtaining the word;
using the word to obtain data indicating the word's identifier.
The method according to claim 8 or 9, 
characterized in that
 the data
relating to a group that includes the word indicate a position of identifier

data items in a group; the method further comprising:

using the data relating to the group to access the identifier data items in the
group.
The method according to one of claims 8 to 10, 
characterized in that
 each
identifier data item includes a plurality of parts, at least one part of each

identifier data item having a length less than a full byte length; the full byte
length being an integral multiple of each part's length so that a comparison 

with any of the parts can be made in a single machine cycle; the step of
searching the sequence comprising:

comparing a first part of the word's identifier with a first part of an identifier
data item in the sequence and, if equal, comparing a second part of the

word's identifier with a second part of the identifier data items.
The method according to one of claims 8 to 10, 
characterized in that
 each
identifier data item is one of a dense set of numbers; the identifier data

items in each group being sorted numerically; the step of searching the
sequence comprising:


comparing the word's identifier with an identifier data item in a group in the
sequence; and
using the result of comparing to determine whether to skip following
identifier data items in the group.
The method according to claim 12, 
characterized in that
 the groups of
identifier data items in the sequence are sorted numerically by each group's

first identifier; the step of searching the sequence further comprising:

comparing the word's identifier with the first identifier data item in a group in
the sequence; and
using the result of comparing to determine whether to skip following groups
in the sequence.
Apparatus comprising means for carrying out a method according to one of
claims 8 to 13.
</CLAIMS>
</TEXT>
</DOC>
