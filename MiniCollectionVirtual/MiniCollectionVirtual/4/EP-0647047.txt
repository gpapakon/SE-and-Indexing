<DOC>
<DOCNO>EP-0647047</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Client/server computer system.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F946	G06F946	G06F1300	G06F1300	G06F1500	G06F1500	G06F1516	G06F1516	G06F15163	G06F15177	G06T1740	G06T1740	H04L2906	H04L2906	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06T	G06T	H04L	H04L	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F13	G06F13	G06F15	G06F15	G06F15	G06F15	G06F15	G06F15	G06T17	G06T17	H04L29	H04L29	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A system and method for virtually reducing interprocess 
communication packet size by dynamically redispatching packets for 

execution. A subcommand dispatching process (230) dispatches individual 
subcommands and accumulates the resources used by each. The accumulated 

resource value is tested against a threshold. If the threshold is 
exceeded, the next subcommand position is recorded and control returned 

to the interprocess communication packet dispatcher for later dispatch. 
The virtual reduction of the packet size to conform to resource limits 

processor commitment to a single packet. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
NARAYANASWAMI CHANDRASEKHAR
</INVENTOR-NAME>
<INVENTOR-NAME>
NARAYANASWAMI, CHANDRASEKHAR
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention is directed to a client/server computer 
system. High function graphics processing systems have traditionally been 
implemented using special purpose graphics adapter hardware. This 
special purpose hardware was optimized for graphics processing and 
integrated into the host computer systems so that the overall system 
efficiency was high. The processing power of general purpose workstations, particularly 
those based on RISC technology has enable these workstations to be 
employed for increasingly complex graphics tasks. Interactive system 
performance has, however, become an issue in these systems. In 
particular, the rendering of complex three dimensional images may consume 
so much of the processor resource that the workstation ceases to respond 
to interactive user requests. Workstation software is often implemented using a client/server 
model where an application is a client that requests services from a 
server. A graphics server manages a display device or display surface 
and controls the rendering and drawing to that surface. Division of 
process tasks into client and server function supports an environment 
where several applications (clients) can operate writing to a single 
display device divided, perhaps, into a plurality of windows. Server 
software is exemplified by The X Windows System from the Massachusetts 
Institute of Technology. Client/Server environments rely on interprocess communication to 
send the service requests between the client and server process. The 
communication can be between two processes on a single computer system 
via shared memory or can be across a network. Communication efficiency 
is improved by transmitting large packets of information through the 
interprocess mechanism. Small packets reduce efficiency due to an 
inability to spread the interprocess communication overhead over 
sufficient message content. Large communication packets received by the server result in large 
processing resources committed to processing that packet and to the  
 
reduced interactive response problems mentioned above. Existing systems 
typically schedule at the packet level so that once a packet begins 
processing nothing may interrupt that processing. Thus, a technical problem exists to find a system and method for 
achieving interprocess communication efficiency without sacrificing 
interactive response time. The invention is defined in the appended claims. The present invention employs virtual packet length reduction to 
implement dynamic scheduling.
</DESCRIPTION>
<CLAIMS>
A method for virtually reducing interprocess communication packet 
size in a client/server system having a server process receiving 

interprocess communication packets of a first size, the interprocess 
communication packets containing a sequential plurality of subcommands 

for processing by the server process, the server having a means for 
storing a plurality of interprocess communication packets for processing 

and a means for dispatching one of said interprocess communication 
packets for processing, the method comprising the steps of: 

   dispatching a next sequential one of said plurality of subcommands 
in said dispatched interprocess communication packet for 

processing; 
   accumulating an indicia of resources committed to said processing; 

   testing said accumulated indicia against a threshold; and 
   repeating said dispatching, accumulating and testing steps for a 

next sequential command if said indicia is less than said 
threshold, or signalling said server to redispatch said dispatched 

interprocess communication packet and terminating processing of 
said dispatched interprocess communication packet if said indicia 

exceed the threshold. 
A system for dynamically redispatching an interprocess 
communication packet having a plurality of processing subcommands, the 

system comprising: 
   means for dispatching individual subcommands for processing; 

   means for accumulating an indicia of resources used by said 
dispatched subcommands; 

   means for testing said accumulated indicia and requesting 
redispatch of said communication packet if said indicia exceeds a 

threshold. 
The system of claim 2, wherein said indicia of resources is a 
weighted value assigned to each command type. 
The system of claim 2, wherein said indicia of resources is elapsed 
time. 
</CLAIMS>
</TEXT>
</DOC>
