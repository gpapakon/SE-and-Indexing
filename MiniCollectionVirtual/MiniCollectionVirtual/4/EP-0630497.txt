<DOC>
<DOCNO>EP-0630497</DOCNO> 
<TEXT>
<INVENTION-TITLE>
METHOD AND COMPUTER SYSTEM FOR INCREASING THE FUNCTIONALITY OF A COMPUTER PROGRAM
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F9445	G06F944	G06F944	G06F9445	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
In a method for increasing the functionality of a computer program, use is made of a computer system comprising a user/terminal (1) which via driver modules (2-3) is connectible to a computer program (5). When the user/terminal requests execution of the computer program, the user/terminal is connected initially to a wrapper program (6) via an additional driver module (4). After data exchange between the wrapper program and the user/terminal, the computer program is started from the wrapper program. Finally, the wrapper program is disconnected, and the computer program is connected to the user/terminal.
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
ICL SYSTEMS AB
</APPLICANT-NAME>
<APPLICANT-NAME>
ICL SYSTEMS AKTIEBOLAG
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
ALFREDSSON CHRISTER
</INVENTOR-NAME>
<INVENTOR-NAME>
ALFREDSSON, CHRISTER
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a method for increasing
the functionality of a computer program, and
a computer system for carrying out this method.The invention relates more specifically to a method
for increasing the functionality of a computer program
which in a computer system is requested to be executed by
a user via a driver, the user being interfaced to a wrapper
program via the driver when the user requests execution
of the computer program, for data exhange between the user
and the wrapper program.The invention is specifically directed to computer
systems using a UNIX-type operative system. In such a
system, the drivers are divided into different levels
or modularised.An example of increased functionality is improved
security in respect of unauthorised utilisation of the
computer system.According to the invention, an increased functionality
is achieved by the method being characterised by the
steps of effecting a supplementary driver, starting the
computer program by means of the wrapper program via the
supplementary driver, partially executing the computer
program by means of the wrapper program on the basis at
least partly of data supplied to the wrapper program
during the data exchange with the user, and subsequently
initiating disconnection of the wrapper program from and
connection of the user to the computer program, by means
of the wrapper program via the supplementary driver.A computer system for carrying out this method as claimed in claim 1 comprises
a user terminal, a computer program and driver modules via
which the user is interfaced to the computer program,
and is characterised in that an additional driver module
is arranged adjacent to the computer program, that a wrapper
program is arranged to be connected, by means of the additional 
driver module, to the user when the user requests
execution of the computer program, and that the additional
driver module is adapted to connect, after connection of
the wrapper program and data exchange with the user, the
computer program to the wrapper program for start and partial
execution of the computer program, and subsequently
to disconnect the wrapper program and to connect the user
to the computer program.Thus, the computer program is started and executed
to a desired step from the wrapper program on the basis
at least partly of data supplied to the wrapper program
from the user.The supplementing of the driver which the additional
driver module constitutes preferably comprises a switching
function in the driver part adjacent to the
</DESCRIPTION>
<CLAIMS>
Method for increasing the functionality of a
computer program which in a computer system is requested

to be executed by a user (1) via a driver (2, 3), the user being
logically connected to a wrapper program (6) via the driver, when the

user requests execution of the computer program, for
data exchange between the user and the wrapper program,
characterised
 by the steps of

effecting a supplementary driver (4),
starting the computer program (5) by means of the wrapper
program via the supplementary driver (4),
partially executing the computer program by means of
the wrapper program on the basis at least partly of data

supplied to the wrapper program during the data exchange
with the user, and
subsequently initiating, by means of the wrapper program
via the supplementary driver, disconnection of the

wrapper program from and connection of the user to the
computer program.
Method as claimed in claim 1, 
characterised

in that the computer program (5), during start and
partial execution thereof, is connected to the wrapper

program only (6).
Method as claimed in claim 1 or 2,

characterised
 in that the driver, as a supplement, is
supplied with a switching function in its part (4) adjacent to

the computer program (5) and the wrapper program (6).
Method as claimed in any one of claims 1-3,

characterised
 in that the disconnection of
the wrapper program (6) is carried out by the supplementing

driver (4), requested from the wrapper program, and that the
connection of the computer program (5) to the user (1) is then

effected with such a delay as to avoid any loss of data. 
Computer system comprising a user terminal (1), a computer
program (5) and driver modules (2-3) via which a user is

interfaced to the computer system,

characterised
 in that

an additional driver module (4) is arranged adjacent to
the computer program (5),
that a wrapper program (6) is arranged to be connected,
by means of the additional driver module, to the user

(1), when the user requests execution of the computer program,
and
that the additional driver module is adapted to connect,
after connection of the wrapper program and data

exchange with the user, the computer program to the wrapper
program for start and partial execution of the computer

program, and subsequently to disconnect the wrapper
program and to connect the user to the computer program.
Computer system as claimed in claim 5,

characterised
 in that it is a UNIX-based system.
Computer system as claimed in claim 5 or 6,

characterised
 in that the wrapper program (6)
and the computer program (5) are log-on programs, and that

the wrapper program has extended security functions in
relation to the computer program.
Computer system as claimed in any one of claims
5-7, 
characterised
 in that the wrapper program
(6) and the computer program (5) have the same file

descriptors.
</CLAIMS>
</TEXT>
</DOC>
