<DOC>
<DOCNO>EP-0981083</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Data processing
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F900	G06F900	G06F9445	G06F9445	G06F946	G06F946	G06F952	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F9	G06F9	G06F9	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Data processing apparatus is disclosed in which a core program object interacts
with and controls operation of a plurality of plug-in program objects operable to carry out

data processing tasks, the apparatus providing for communication between the core
program object and each such data processing task:


(i) a synchronous interface to allow interaction between the core program object
and a plug-in program object operable to carry out that task; and
(ii) an asynchronous interface to allow interaction between the core program
object and a hardware device operable to carry out that task.
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
SONY UK LTD
</APPLICANT-NAME>
<APPLICANT-NAME>
SONY UNITED KINGDOM LIMITED
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
GOULD ANTONY JAMES
</INVENTOR-NAME>
<INVENTOR-NAME>
GOULD, ANTONY JAMES
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to data processing methods and apparatus.Some computer-based data processing systems make use of a "core" computer
program and a number of possible program modules or "plug-ins" which can be loaded
when required.Using terminology from the various Microsoft WindowsÂ® operating systems, the
program modules or plug-ins may be provided as "dynamic load libraries" or "DLLs".
DLLs are generally large files which can contain program code, data and subroutine
libraries. They are loaded into memory when needed for the execution of a current
program.One example of a data processing system in which this type of structure can be
useful is a computer-based video special effects system. In such a system, the user can
generally set up a composite special effect to be applied to a video sequence by selecting
a succession of effects modules from a large number of available modules. For example,
a sequence of effects set up by a user might comprise:
(i) image loader(ii) motion tracker(iii) lighting effect linked to motion tracking(iv) image realignment linked to motion trackingEach of these effects can be implemented as a program module or plug-in, with
data being routed between the modules under the overall control of a core program. The
interface between the core program object and the plug-in objects is a synchronous one,
so that program control (in fact, in a multi-tasking environment, a so-called "thread") is
passed to a plug-in which then carries out its processing task. Control is only then
returned to the core program to resume other processing using that thread.This invention provides data processing apparatus in which a core program object
interacts with and controls operation of a plurality of plug-in program objects operable to
carry out data processing tasks, the apparatus providing for communication between the
core program object and each such data processing task: (i) a synchronous interface to allow interaction between the core program object
and a plug-in program object operable to carry out that task; and(ii) an asynchronous interface to allow interaction between the core program
object and a hardware device operable to carry out that task.The invention recognises and addresses the potential conflict between, on the one
hand, providing a data processing system allowing synchronous interface with software
plug-ins and, on the other hand, allowing the possibility of a future upgrade to the use of
dedicated hardware units to replace some of those plug-ins. Dedicated hardware units

</DESCRIPTION>
<CLAIMS>
Data processing apparatus in which a core program object interacts with and
controls operation of a plurality of plug-in program objects operable to carry out data

processing tasks, the apparatus providing for communication between the core program
object and each such data processing task:


(i) a synchronous interface to allow interaction between the core program object
and a plug-in program object operable to carry out that task; and
(ii) an asynchronous interface to allow interaction between the core program
object and a hardware device operable to carry out that task.
Apparatus according to claim 1, comprising a synchronous/asynchronous
converter associated with the core object.
Apparatus according to claim 1, in which one or more plug-in objects have
respective associated synchronous/asynchronous converters.
</CLAIMS>
</TEXT>
</DOC>
