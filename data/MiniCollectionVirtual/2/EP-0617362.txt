<DOC>
<DOCNO>EP-0617362</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Data back-up in data processing system
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1300	G06F1120	G06F1200	G06F1120	G06F1200	G11C2900	G11C2900	G06F1300	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G11C	G11C	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F13	G06F11	G06F12	G06F11	G06F12	G11C29	G11C29	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method and means for asynchronous remote data duplexing at a 
distant location from copies based at a primary site storage subsystem, 

which copying is non-disruptive to executing applications, and further in 
which any data loss occasioned by losses in flight or updates never 

received at the time of any interruption between the primary and remote 
sites are accounted for at the remote site. The method assigns a token 

and unique sequence number responsive to each write operation at the 
primary site, and sends the tokens + numbers and data updates to the 

remote site. The method relies upon the sequence number to establish a 
sequence and define gaps therein to ascertain missing updates. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MCILVAIN JAMES E
</INVENTOR-NAME>
<INVENTOR-NAME>
SHOMLER ROBERT WESLEY
</INVENTOR-NAME>
<INVENTOR-NAME>
MCILVAIN, JAMES E.
</INVENTOR-NAME>
<INVENTOR-NAME>
SHOMLER, ROBERT WESLEY
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to the back-up of data in a data processing
system, and more particularly, to the updating of back-up copies stored
at a remote site from copies based in storage at a primary site.Data copying is one form of data preservation in an information
handling or computer system. However, data preservation via data copying
must take many factors into account. This is of special significance
where it is anticipated that data copied and stored at a remote site
would be the repository for any continued interaction with the data
should the work and data of a primary site become unavailable. The
factors of interest in copying include the protection domain (system
and/or environmental failure or device and/or media failure), data loss
(no loss/partial loss), time where copying occurs as related to the
occurrence of other data and processes (point in time/real time), the
degree of disruption to applications executing on said computer, and
whether the copy is application or storage subsystem based. With regard
to the last factor, application based copying involves log files, data
files, program routines while storage based copying involves an
understanding of DASD addresses and data set identifiers.As set forth below, the prior art is replete with methods and means
for backing up and/or duplexing data for recovery and archiving purposes.
While some inconsistency between an original and copied data set might be
tolerable, it is the ignorance of the occurrence of missing data that
makes such fuzziness unacceptable. That is, fuzziness of a copy set means
that a recovery process cannot determine the state of the data copy.One prior art method for generating consistent backup data
(lossless copying) involves copying a portion of DASD stored data onto
magnetic tape once a day (point in time copying) and transporting the
tape media to a distant location via truck. Thus, truck transport of
tape copied data (assume each tape reel storing 200 megabytes of data, if
moved by a truck carrying 200 such tape reels to a remote site 50 miles
away from the primary in say one hour) would be communicating at an
average rate of 40000MB/3600sec or 4,444 megabytes per sec. Such data
duplexing practice circa the 1950's was totally application disruptive.
Furthermore, it offered at best inconvenience and a day's worth of
difference in data state between the primary and remote sites. Still another method involves use of telecommunications (such as T1
lines) for moving the backup copy. More time-current, even
</DESCRIPTION>
<CLAIMS>
In a data processing system comprising at a primary site a processor executing applications, an operating system resident at said processor and a primary storage (5), said system further comprising a remote storage site (9,19) connected to the primary site via a communication path, a method for propagating dual copies of update data to a remote storage site asynchronously to application execution
(9, 19) in response to write update operations to primary storage (5) through calls to said operating system and,

generated by applications executing on a processor at a primary site (1),
the method comprising the steps of:


responsive to a write update operation at the primary site,
generating a write token for said operation including a unique sequence

number and a primary storage address;
sending messages from the primary to the remote storage site, each
message selectively including a list of recently generated write tokens

plus update data corresponding to listed tokens sent in the same message
or in previous messages;
maintaining at the remote storage site a pending write queue and
responsive to each received message from the primary site, matching

update data with tokens; and
scheduling and writing matched updates at the remote storage site
in sequence number order.
A method as claimed in claim 1, wherein said method further
comprises the steps of:


responsive to the interruption of at least some portion of the
sequence of updates, scanning the maintained pending write queue at the

remote storage site and interpreting the sequenced tokens and updates
received at the site so as to present a consistent-in-time image of data

manifest by the sequence of write update operations as it was at the
primary site.
A method as claimed in to claim 1 or claim 2, wherein the step of
sending messages further includes the steps of:


sending messages between the primary site and a plurality of remote
sites including either sending at least one message to a first site,

sending at least another message to a second site, or sending at least
one message to both said first and second sites.
A data processing system comprising a processor; an operating
system resident at said processor; primary storage (5), means (3)

responsive to applications executing on said processor for writing
updates to the primary storage through calls to said operating system,

and means (11, 13) for propagating dual copies of said updates to a
storage site (9, 19) remote from the primary storage and asynchronous to

application execution, said propagating means including means for
asynchronously writing said dual copies of said updates at said remote

storage site, wherein said dual copy means comprises:

means (13) responsive to a write update operation at the primary
storage for forming a write token including a unique update sequence

number and a primary storage address;
means (11) for sending messages over a communications path between
the primary storage and the remote storage site, each message selectively

including a list of recently generated write tokens and
counterpart update data of listed tokens sent in the same message or in

previous messages; and
means (15, 17) at the remote storage site responsive to each
received message for maintaining a pending write queue to match update data with

tokens, for scheduling and writing the update data at the remote storage
site only when matched with the counterpart token and in sequence number

order.
</CLAIMS>
</TEXT>
</DOC>
