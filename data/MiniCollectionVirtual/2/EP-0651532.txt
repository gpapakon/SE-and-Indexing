<DOC>
<DOCNO>EP-0651532</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method for sequential encryption/decryption of externally stored computer object code.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F100	G06F100	G06F1214	G06F1214	G06F2100	G06F2100	G06F2122	G06F2122	G06F2124	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F1	G06F1	G06F12	G06F12	G06F21	G06F21	G06F21	G06F21	G06F21	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
In order to transform enciphered instructions stored
in an external memory into the original ones while a

microcomputer executes the same, the instructions have
been enciphered and stored in the memory such as to be

logically partitioned into a plurality of groups. The
enciphered instructions are read out of the memory for

decipherment. A first instruction located at an initial
storage address of a group is initially deciphered using

a first value. Thereafter, the following instructions in
the group are sequentially deciphered using a second

value which is determined by transforming an immediately
preceding instruction. If the microcomputer executes a

branch instruction, the execution control is transferred
to a branched address. Subsequently, a first instruction

located at the group, which includes the branched
address, is deciphered using the first value.


Thereafter, the instruction(s) following the first
instruction are deciphered, using the second value, until

deciphering an instruction stored at the branched
address.


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
NIPPON ELECTRIC CO
</APPLICANT-NAME>
<APPLICANT-NAME>
NEC CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
OGURA NAOYUKI
</INVENTOR-NAME>
<INVENTOR-NAME>
OGURA, NAOYUKI
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to a method 
for rendering it difficult to break a computer object 
code which has been enciphered and stored in an external 
memory, and more specifically to such a method for 
transforming the enciphered computer object code into the 
original one while executing the same. In digital data processing systems, it is a common 
practice to utilize cryptographic techniques in order to 
prevent an unauthorized access to proprietary secret 
data. Data to be protected is transformed into the 
corresponding ciphertext. The ciphertext, when it is to 
be used, is subject to the reverse process via which the 
ciphertext is transformed into the original data (viz., 
plaintext). A cipher is a secret method of writing whereby 
plaintext (or cleartext) is transformed into the 
corresponding ciphertext (sometimes called a cryptogram). 
The process is called encipherment or encryption, while 
the reverse process of transforming ciphertext into the 
corresponding plaintext is called decipherment or 
decryption. Before turning to the present invention it is deemed 
preferable to discuss, with reference to Figs. 1-6, a 
cryptographic technique relevant to the present 
invention. Fig. 1 is a block diagram schematically showing a 
data transmission system wherein data to be transmitted 
is subject to encipherment and the data received is 
transformed into the original data.  The system shown in Fig. 1 generally includes two 
transceivers 10a and 10b which are interconnected via a 
transmission channel 12. It is to be noted that the 
transceivers 10a and 10b are not shown in a complete 
manner for the sake of simplifying the disclosure. The 
transceiver 10a includes an encipherment circuit 14a, a 
decipherment circuit 16a, and a duplexer 18a. Similarly, 
the transceiver 10b includes an encipherment circuit 14b, 
a decipherment circuit 16b, and a duplexer 18b. The encipherment circuit 14a transforms the data to 
be transmitted into the corresponding ciphertext. The 
enciphered data is then forwarded to the transceiver 10b 
whereat the transmitted data is reverse processed for 
obtaining the corresponding plaintext at the decipherment 
circuit 16b. Similarly, the encipherment circuit 14b enciphers 
the data to be transmitted. The enciphered data is sent 
to the transceiver 10a wherein the transmitted data is 
subject to decipherment and thus transformed into the 
corresponding plaintext at the decipherment circuit 16a. Fig. 2 is a block diagram schematically showing one 
example of the
</DESCRIPTION>
<CLAIMS>
A method of sequentially enciphering a plurality 
of instructions of a computer object code, the enciphered 

instructions being stored in a memory, said method 
comprising the steps of: 

   enciphering, using a first value, each of first 
instructions if the first instruction is supplied for 

encipherment, said plurality of first instructions being 
separately located, in said computer object code, away 

from an adjacent first instruction by a predetermined 
number of instructions; and 

   enciphering, using a second value, each of a 
plurality of instructions other than said first 

instructions, said second value being determined by 
transforming an immediately preceding instruction. 
A method as claimed in claim 1, wherein locations 
of said first instructions are defined by storage 

addresses having a predetermined number of lower bits. 
A method as claimed in claim 1 or 2, wherein said 
first value has a predetermined bit length and varies 

depending on part of a storage address which indicates a 
memory location to which an enciphered first instruction 

is to be stored. 
A method as claimed in claim 1 or 2, wherein said 
first value has a predetermined bit length and varies 

depending on an entire storage address which indicates a 
memory location to w
hich an enciphered first instruction 
is to be stored. 
A method of deciphering a plurality of 
instructions stored in an external memory after being 

 
enciphered, said plurality of instructions having being 

logically partitioned into a plurality of groups in said 
external memory, deciphered instructions being applied to 

a microcomputer and executed therein, said method 
comprising the steps of: 

   reading one by one said plurality of instructions 
from said external memory; 

   deciphering, using a first value, a first 
instruction located at an initial storage address of a 

group; 
   deciphering, using a second value, each of a 

plurality of instructions other than said first 
instruction, said second value being determined by 

transforming an immediately preceding instruction; 
   branching to a storage address defined by a branch 

instruction when said microcomputer has executed said 
branch instruction; 

   deciphering, using said first value, a first 
instruction located at an initial storage address of a 

particular group which includes the branched storage 
address; and 

   deciphering, using said second value, one or more 
than one instructions until deciphering an instruction 

stored at the branched storage address. 
A method us claimed in claim 4, wherein the 
initial addresses of said groups are defined by storage 

addresses having a predetermined value of lower bits. 
A method as claimed in claim 5 or 6, wherein said 
first value has a predetermined bit length and varies 

depending on part of a storage address which indicates a 
memory location to which an enciphered first instruction 

is to be stored. 
A method as claimed in claim 5 or 6, wherein said 
first value has a predetermined bit length and varies 

depending on an entire storage address which indicates a 
memory location to which an enciphered first instruction 

is to be stored. 
</CLAIMS>
</TEXT>
</DOC>
