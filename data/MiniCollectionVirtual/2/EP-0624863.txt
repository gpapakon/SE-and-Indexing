<DOC>
<DOCNO>EP-0624863</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Scalable three-dimensional window borders
</INVENTION-TITLE>
<CLASSIFICATIONS>G06T1500	G06F3153	G06T1500	G09G514	G06T1120	G09G514	G06T1120	G06F3153	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06T	G06F	G06T	G09G	G06T	G09G	G06T	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06T15	G06F3	G06T15	G09G5	G06T11	G09G5	G06T11	G06F3	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Scalable three-dimensional borders are provided in 
the user interface of an operating system. The borders are 

scalable in several respects. First, the dimensions of the 
borders are scalable relative to the resolution of a video 

display upon which the borders will be drawn. Second, the 
colors used in the borders are scalable based upon the range 

of luminances available on the video display. The borders are 
colored to provide the visual illusion of depth such that the 

borders appear to be three-dimensional. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
MICROSOFT CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
MICROSOFT CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BUTLER LAURA J
</INVENTOR-NAME>
<INVENTOR-NAME>
GRAUMAN JOYCE A
</INVENTOR-NAME>
<INVENTOR-NAME>
BUTLER, LAURA J.
</INVENTOR-NAME>
<INVENTOR-NAME>
GRAUMAN, JOYCE A.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention pertains to a method of drawing a border on an output device
of a data processing system.EP 352 741 A2 teaches a three-dimensional
graphical interface that presents a cohesive three-dimensional visual
metaphor to a computer user. This result is achieved by using three different shades
of a color to present highlighting and shading along opposite edges of a component.
One shade of the color represents the planar or flat surface of a component; the
other shades are located along the highlighted and shaded edges of the component.Many operating systems provide user interfaces
that are well adapted for display on video displays of a
given type but are not well adapted for display on video
displays of other types. For instance, the borders of
items in a user interface may not be clearly legible on
video displays with high resolution, In addition, the
colors of borders in the user interface may also not be
well suited for given types of video displays.The borders that are provided in user interfaces
are typically two dimensional borders that provide no
sense of depth. As a result, the user interfaces do not
provide visual cues to users regarding the nature of items
(like buttons) which are presumed to be three dimensional.
Three dimensional borders have been used in certain user
interfaces, but have generally been unsatisfactory. It is the object of the present invention to improve the three-dimensional impression
of borders.This object is achieved by the method of claim 1.Preferred embodiments of the invention are the subject matter of the dependent
claims. The memory means of the data processing system
may hold system metrics, including the minimum border
height and the minimum border width. In addition, other
system metrics may be scaled to have values that are
proportional to the minimum border height or the minimum
border width. These other system metrics are stored in
the memory means as well.The minimum border width may be calculated as an
integer portion of the sum of the number of horizontal
dots per inch on the output device and seventy-one,
divided by seventy-two. Likewise, the minimum border
height may be calculated as an integer portion of (the sum
of the number of vertical dots per inch on the output
device and 71) divided by 72. The borders may be drawn as
three-dimensional borders. The range of logical depths may include at least
two raised logical depths and at least two sunken logical
depths. The colors may be assigned to the border edges by
first determining where a logical
</DESCRIPTION>
<CLAIMS>
A method of drawing a border (50, 52, 54, 56, 58) on an output
device (22, 23) of a

data processing system (10) having a processor (12) and a video display (22),
the border (50, 52, 54, 56, 58) including an inner

border (41, 41', 47, 47') having border edges (40a, 40b) and an outer border (43, 43',
45, 45') having border edges (42a, 42b), comprising the steps of:


(a) providing a range of logical depths relative to a zero level
logical depth on the output device that the inner border (41, 41', 47, 47') and the outer

border (43, 43', 45, 45') may assume, wherein the range includes at least one sunken
logical depth and at least one raised logical depth;
(b) predetermining colors, for the border edges (40a, 40b, 42a,
42b) of the inner border (41, 41', 47, 47') and the outer border (43, 43', 45, 45') for each

logical depth to produce a visual effect of the logical depth when the borders are
output on the output device (22, 23); and
(c) outputting the border (50, 52, 54, 56, 58) on the output device
by drawing the outer border (43, 43', 45, 45') to have a first logical depth in the range

of logical depths and drawing the inner border (41, 41', 47, 47') to have a second
logical depth in the range of logical depths, wherein the outer border (43, 43', 45, 45')

has border edges (42a, 42b) with the colors that are assigned to the border edges for
the first logical depth and the inner border (41, 41', 47, 47') has border edges (40a,

40b) with the colors that are assigned to the border edges for the second logical
depth.
The method as recited in Claim 1 wherein the step of providing a
range of logical depths further comprises the step of providing at least two raised

logical depths and at least two sunken logical depths relative to the zero level logical
depth on the output device (22, 23).
The method as recited in Claim 1 wherein the step of assigning colors
to the border edges (40a, 40b, 42a, 42b) further comprises the steps of:


determining where a logical light source is located on the zero level logical
depth relative to the border (50, 52, 54, 56, 58);
for each logical depth, given the logical light source location, determining
which of the border edges (40a, 40b, 42a, 42b) of the inner border (41, 41', 47, 47') or

the outer border (43, 43', 45, 45') are in shadow and which of the border edges (40a,
40b, 42a, 42b) are in glare; and 
assigning a first color to the border edges (40a, 40b, 42a, 42b) that are in
glare a first color, and assigning a second color to the border edges (40a, 40b, 42a,

42b) that are in shadow.
The method as recited in Claim 3 wherein the step of determining
where the logical light source is located further comprises the step of determining

that the logical light source is in the top left corner of the zero level logical depth and
the inner border (41, 41', 47, 47') and the outer border (43, 43', 45, 45') each include

top, left, right, and bottom border edges.
The method as recited in Claim 4 wherein, for each of the raised
logical depths, the step of determining which of the border edges (40a, 40b, 42a, 42b)

are in shadow and which of the border edges (40a, 40b, 42a, 42b) are in glare further
comprises the step of determining that the top and the left border edges (40a, 42a) are

in glare and the bottom and the right border edges (40b, 42b) are in shadow.
The method as recited in Claim 4 wherein, for each of the sunken
logical depths, the step of determining which of the border edges (40a, 40b, 42a, 42b)

are in shadow further comprises the step of determining that the top and the left
border edges (40a, 42a) are in shadow and the bottom and
 the right border
edges (40b, 42b) are in glare.
The method as recited in Claim 1 wherein the first logical depth is one
of the sunken logical depths and the second logical depth is one of the sunken logical

depths.
The method as recited in Claim 1 wherein the first logical depth is one
of the sunken logical depths and the second logical depth is one of the raised logical

depths.
The method as recited in Claim 1 wherein the first logical depth is one
of the raised logical depths and the second logical depth is one of the raised logical

depths.
</CLAIMS>
</TEXT>
</DOC>
