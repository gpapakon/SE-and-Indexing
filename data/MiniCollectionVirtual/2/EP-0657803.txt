<DOC>
<DOCNO>EP-0657803</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Three input arithmetic logic unit
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F7575	G06F748	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F7	G06F7	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A three input arithmetic logic unit (230) forms a mixed 
arithmetic and Boolean combination of three multibit input 

signals. The arithmetic logic unit (230) first forms a 
Boolean combination and then forms an arithmetic combination. 

The current instruction drives an instruction decoder (250, 
245) that generates the functions signals F0-F7 which control 

the combination formed. The three input arithmetic logic unit 
(230) preferably employs a set of bit circuits (400), each 

forming carry propagate, generate and kill signals. These 
signals may employed with a multilevel logic tree circuit and 

a carry input to produce a bit resultant and a carry output to 
the next bit circuit. This structure permits formation of 

selected arithmetic, Boolean or mixed arithmetic and Boolean 
function of the three input signals based upon the current 

instruction. Selection of the function signals enables the 
combination to be insensitive to one of the input signals, 

thus performs a two input function of remaining input signals. 
The instruction itself may include the function signals and 

function modification bits, or the function signals and 
function modification signals may be stored in a special data 

register. Function modification signals cause modification of 
the function signals prior to use. The three input arithmetic 

logic unit (230) includes a least significant bit carry-in 
generator (246) supplying a carry input to the least 

significant bit. This carry input is determined by the 
combination being formed, and generally is "1" only during 

subtraction. The carry input may be specified in the special 
purpose data register (D0) for certain instructions. The 

combination formed is optionally modified dependent upon the 
sign bit of one of the inputs. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
TEXAS INSTRUMENTS INC
</APPLICANT-NAME>
<APPLICANT-NAME>
TEXAS INSTRUMENTS INCORPORATED
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
GUTTAG KARL M
</INVENTOR-NAME>
<INVENTOR-NAME>
SIMPSON RICHARD
</INVENTOR-NAME>
<INVENTOR-NAME>
WALSH BRENDAN
</INVENTOR-NAME>
<INVENTOR-NAME>
GUTTAG, KARL M.
</INVENTOR-NAME>
<INVENTOR-NAME>
SIMPSON, RICHARD
</INVENTOR-NAME>
<INVENTOR-NAME>
WALSH, BRENDAN
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This application relates to improvements in the
inventions disclosed in the following copending U.S. patent
applications, all of which are assigned to Texas Instruments:
U.S. Patent Application Serial No. 07/437,858 filed
November 17, 1989, now U.S. Patent No. 5,212,777 issued May
18, 1993 and entitled "MULTI-PROCESSOR RECONFIGURABLE IN
SINGLE INSTRUCTION MULTIPLE DATA (SIMD) AND MULTIPLE
INSTRUCTION MULTIPLE DATA (MIMD) MODES AND METHOD OF
OPERATION".U.S. Patent Application Serial No. 07/437,946 filed
November 17, 1989, now U.S. Patent No. 5,197,140 issued March
23, 1993 and entitled "SLICED ADDRESSING MULTI-PROCESSOR AND
METHOD OF OPERATION".U.S. Patent Application Serial No. 07/437,857 filed
November 17, 1989, now U.S. Patent No. 5,339,447 issued
August 16, 1994 and entitled "ONES COUNTING CIRCUIT,
UTILIZING A MATRIX OF INTERCONNECTED HALF-ADDERS, FOR
COUNTING THE NUMBERS OF ONES IN A BINARY STRING OF IMAGE
DATA".U.S. Patent Application Serial No. 07/437, 851 filed
November 17, 1989, now U.S. Patent No. 5,239,654 issued
August 24, 1993 and entitled "DUAL MODE SIMD/MIMD PROCESSOR
PROVIDING REUSE OF MIMD INSTRUCTION MEMORIES AS DATA MEMORIES
WHEN OPERATING IN SIMD MODE".U.S. Patent Application Serial No. 07/437,875 filed
November 17, 1989, now U.S. Patent No. 5,226,125 issued July
6, 1993 and entitled "SWITCH MATRIX HAVING INTEGRATED 
CROSSPOINT LOGIC AND METHOD OF OPERATION".The technical field of this invention is the field of
digital data processing and more particularly microprocessor
circuits, architectures and methods for digital processing
especially digital image/graphics processing. This invention relates to the field of computer graphics
and in particular to bit mapped graphics. In bit mapped
graphics computer memory stores data for each individual
picture element or pixel of an image at memory locations that
correspond to the location of that pixel within the image.
This image may be an image to be displayed or a captured image
to be manipulated, stored, displayed or retransmitted. The
field of bit mapped computer graphics has benefited greatly
from the lowered cost and increased capacity of dynamic random
access memory (DRAM) and the lowered cost and increased
processing power of microprocessors. These advantageous
changes in the cost and performance of component parts enable
larger and more complex computer image systems to be
economically feasible.The field of bit mapped graphics has undergone several
stages in evolution of the types of processing used for image
data manipulation.
</DESCRIPTION>
<CLAIMS>
A data processing apparatus comprising:

an instruction decoder (250) independently generating a
first set of functions signals and a second set of

function signals corresponding to a current instruction;

and
a three input arithmetic logic unit (230) including:

an AND gate (492) having a first input receiving a
first multibit input signal (A), a second input and

an output forming a bit wise AND of signals
received at said first and second inputs;
a first two input Boolean function generator (493)
connected to said instruction decoder having a

first input receiving a second multibit input
signal B, a second input receiving a third multibit

input signal C and an output connected to said
second input of said AND gate, said output forming

a first Boolean combination of signals received at
said first and second inputs F1(B,C) corresponding

to said first set of function signals and selected
from among the following set of two input Boolean

combinations:

(1) all 0's independent of B and C,
(2) all 1's independent of B and C,
(3) B,
(4) -B-1,
(5) C,
(6) -C-1,
(7) B AND C, 
(8) - (B AND C)-1,
(9) B OR C,
(10) - (B OR C)-1,
(11) B AND NOT C,
(12) - (B AND NOT C)-1,
(13) B OR NOT C,
(14) - (B OR NOT C)-1
(15) (B AND NOT C) OR ((-B-1) AND C), and
(16) (B AND C) OR ((-B-1) AND NOT C);
a second two input Boolean function generator (494)
connected to said instructions decoder having a

first input receiving the second multibit input
signal, a second input receiving the third multibit

input signal and an output forming a second Boolean
combination of signals received at said first and

second inputs F2(B,C) corresponding to said second
set of function signals and selected from among

said above set of two input Boolean combinations;
and
an adder (491) having a first input connected to
said output of said AND gate (492), a second input

connected to said output of said second two input
Boolean function generator (494) and an output (S)

forming the addition of signals received at said
first and second inputs.
A data processing apparatus as claimed in claim 1 and
further comprising a least significant bit carry-in generator

(246) connected to said adder supplying a carry input to a
least significant bit of said adder. 
A data processing apparatus as claimed in claim 2,
wherein said carry input generated by said least significant

bit carry-in generator (246) has a first state for a first
predetermined subset of said second Boolean combination

F2(B,C) and a second state opposite to said first state for a
second predetermined subset of said second Boolean

combination F2(B,C).
A data processing apparatus as claimed in claim 3,
wherein:


said second predetermined subset of said second Boolean
combination F2(B,C) includes:


(4) -B-1,
(6) -C-1,
(8) -(B AND C)-1,
(10) - (B OR C)-1,
(12) - (B AND NOT C)-1,
(14) -(B OR NOT C)-1; and
said least significant bit carry-in generator (246)
forms a carry input of "0" for said first predetermined

subset of said second Boolean combination F2(B,C) and a
carry input of "1" for said second predetermined subset

of said second Boolean combination F2(B,C).
</CLAIMS>
</TEXT>
</DOC>
