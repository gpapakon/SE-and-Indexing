<DOC>
<DOCNO>EP-0646802</DOCNO> 
<TEXT>
<INVENTION-TITLE>
High-throughput testing apparatus
</INVENTION-TITLE>
<CLASSIFICATIONS>G01R3100	G01R31319	G01R3128	G01R3128	G01R3100	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G01R	G01R	G01R	G01R	G01R	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G01R31	G01R31	G01R31	G01R31	G01R31	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A testing apparatus for testing a multiplicity of electronic devices, in particular 
integrated circuits, comprises means for two-fold processing of symbolic test data. In 

one mode, a fast pass/fail test may be executed by once transforming the pass/fail test-related 
symbolic data into executable data (39) and downloading (40) them a test data 

memory. Repeated pass/fail tests may then be executed very quickly. In the second 
mode, the symbolic test data are transformed (46) and downloaded (47) every time the 

test is performed, which makes execution slower, but allows easy modification and 
value tests. Both modes are always equivalent to each other. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
HEWLETT PACKARD GMBH
</APPLICANT-NAME>
<APPLICANT-NAME>
HEWLETT-PACKARD GMBH
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BIWER ALFRED
</INVENTOR-NAME>
<INVENTOR-NAME>
LANDGRAF-HIRSCHKA PIA
</INVENTOR-NAME>
<INVENTOR-NAME>
LANGHOF MARCO
</INVENTOR-NAME>
<INVENTOR-NAME>
BIWER, ALFRED
</INVENTOR-NAME>
<INVENTOR-NAME>
LANDGRAF-HIRSCHKA, PIA
</INVENTOR-NAME>
<INVENTOR-NAME>
LANGHOF, MARCO
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to a testing apparatus and a method for testing a multiplicity
of electronic devices conveniently and at high speed. More specifically, the invention relates
to a tester for integrated circuits, although it may also prove useful in related fields such as
board testers, wafer testers etc.Electronic testing equipment, such as integrated circuit or board testers, has become
more and more complex over the last decades. This is particularly due to the increased
functionality of the circuitry to be tested - e.g., latest microprocessors, RISC CPU's,
combined logic/memory IC's -, which calls for complex test procedures and high-sophisticated
tester equipment.There is also another aspect which has become important. Conventional technology
provided two basically different groups of testers:
1. Research-oriented testing equipment, i.e., testers which allow easy modification
of the test procedure for the purpose of testing individual devices at
various different parameters - maximum test speed or throughput is not a
concern for this kind of devices, and the focus is rather flexibility and easy
access of the parameters to be tested; and2. Production-oriented testing equipment which is designed for maximum throughput,
i.e., for a maximum number of devices to be tested in a given time frame (the time
for testing should not exceed several seconds per device). Easy modification of test
procedures was not a design goal for such kind of testing equipment.However, there is also another difference between research-oriented and production-oriented
testers which is of some importance for the present invention. This is the
different manner in which the test is performed. Production-oriented testers are
commonly designed to perform a test which is called "pass/fail test" (p/f test, sometimes 
also called "go/nogo test"). That is, a certain specification of the device is tested (say,
it is operated at a supply voltage which is 20% lower than the nominal supply voltage),
and this test is either passed or fails (it is understood that a multiplicity of similar tests
are performed to test proper operation of a device; however, the lower limit of the
supply voltage is only tested once, namely at nominal minus 20% voltage).In contrast, in a research environment, the operator might not only want to know
whether the device is operative at said lower limit, but the exact value at which the
device fails. That is, in the above example, he would e.g. like to reduce the supply
voltage in steps of 1% thereof, and
</DESCRIPTION>
<CLAIMS>
Testing apparatus for testing electronic devices, said testing apparatus
comprising a program control device (1) and at least one test data

memory (16,17), said testing apparatus further comprising:

(1.1) an input device (4) for entering test data in at least partially
symbolic form, said symbolic test data describing a value test, as

well as a pass/fail test,
(1.2) a transformation processor (24) for transforming said symbolic
test data into executable test data, and
(1.3) a test execution processor (26) for performing tests using
executable test data stored in said test data memory (16,17),

characterized in that

(1.4) said transformation processor (24) transforms the part of said
symbolic test data which relates to the pass/fail test into executable

pass/fail test data before a test is started,
(1.5) said testing apparatus retains the executable pass/fail test data
generated by the transformation processor (24) according to

feature (1.4), as well as the original symbolic test data, and
(1.6) said test execution processor (26) causes, in response to user
instructions or command file inputs, either


(1.6.1) execution of the executable pass/fail test data
generated by the transformation processor (24)

according to feature (1.4), or
(1.6.2) transformation and execution of said original symbolic
test data during the test.
Testing apparatus according to claim 1 including a download processor
(25) for downloading the executa
ble test data into said test data
memory (16,17).
Testing apparatus according to claim 2, wherein said download
processor (25) downloads said executable pass/fail test data into said

test data memory (16,17) after their generation by the transformation
processor (24).
Testing apparatus according to claim 2, wherein said download
processor (25) downloads said executable pass/fail test data into said

test data memory (16,17) only when option (1.6.1) has been selected. 
Testing apparatus according to claim 1, wherein said symbolic test
data includes test instructions in symbolic form.
Testing apparatus according to claim 1, wherein said
transformation processor (24) is set up to execute feature (1.4) at

load-time.
Testing apparatus according to claim 1, wherein said test
execution processor (26) is set up to perform feature (1.6) at run-time.
Testing apparatus according to claim 1, wherein said test
execution processor (26) includes a repeat controller (43, 54) set

up to repeat features (1.6.1) or (1.6.2), respectively, provided
further electronic devices to be tested are available.
Testing apparatus according to claim 1 including at least one
parameter set (14) of executable test data which is at least partially

loaded into said test data memory (16,17) prior to any test, and
wherein essentially all of the executable test data generated

according to features (1.2), (1.4) and (1.6.2) represent a
modification of said parameter set.
Testing apparatus according to claim 9, wherein said parameter
set (14) of executable test data is stored in one memory area (20a-20c;

21a-21c) of said test data memory (16,17), and the executable
test data generated according to features (1.2), (1.4) and (1.6.2) are

stored in another area (24a-24c; 25a-25c) of said test data memory
(16,17).
Testing apparatus according to claim 1, wherein said input device
(4) includes a graphical interactive editor.
Testing apparatus according to claim 1, wherein said testing
apparatus is an integrated circuit tester.
Method for testing electronic devices by means of a testing
apparatus including the steps of:


(13.1) entering (36) test data in at least partially symbolic form,
wherein said symbolic test data describe a value test, as

well as a pass/fail test, and 
(13.2) transforming (39) the part of said symbolic test data which
relates to the pass/fail test into executable pass/fail test

data,

characterized by the steps of

(13.3) retaining the executable pass/fail test data generated in
step (13.2), as well as the original symbolic test data,
(13.4) effecting, in response to user instructions or command file
inputs, either


(13.4.1) execution (41) of the executable pass/fail test data
generated in step (13.2), or
(13.4.2) transformation (46) and execution (48) of said
original symbolic test data during the test,

whereby step (13.2) is executed before a test is
started.
Method according to claim 13, including the step of downloading
(40,47) executable test data into a test data memory (16,17).
Method according to claim 13, wherein step (13.2) includes the
step of compiling (39) said part of the symbolic test data which

relates to the pass/fail test from a high-level description into
executable pass/fail test data.
</CLAIMS>
</TEXT>
</DOC>
