<DOC>
<DOCNO>EP-0651332</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Linearly addressable microprocessor cache
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1210	G06F1210	G06F1208	G06F1208	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F12	G06F12	G06F12	G06F12	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A microprocessor conforming to the X86 architecture 
is disclosed which includes a linearly addressable 

cache, thus allowing the cache to be quickly accessed by 
an external bus while allowing fast translation to a 

logical address for operation with functional units of 
microprocessor. Also disclosed is a microprocessor 

which includes linear tag array and a physical tag array 
corresponding to the linear tag array, thus allowing the 

contents of a microprocessor cache to be advantageously 
monitored from an external bus without slowing the main 

instruction and data access processing paths. 
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
ADVANCED MICRO DEVICES INC
</APPLICANT-NAME>
<APPLICANT-NAME>
ADVANCED MICRO DEVICES INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
WITT DAVID B
</INVENTOR-NAME>
<INVENTOR-NAME>
WITT, DAVID B.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to microprocessors,
and, more particularly, to providing microprocessors
with high performance caches.Microprocessors have attained wide-spread use
throughout many industries. A goal of any
microprocessor is to process information quickly. One
technique which is used to increase the speed with which
the microprocessor processes information is to provide
the microprocessor with an architecture which includes a
fast local memory called a cache.A cache is used by the microprocessor to
temporarily store instructions and data. A cache which
stores both instructions and data is referred to as a
unified cache; a cache which stores only instructions is
an instruction cache and a cache which stores only data
is a data cache. Providing a microprocessor
architecture with either a unified cache or an
instruction cache and a data cache is a matter of design
choice.One microprocessor architecture that has gained
wide-spread acceptance is the X86 architecture. This
architecture, first introduced in the i386™
microprocessor, is also the basic architecture of both
the i486™ microprocessor and the Pentium™
microprocessor, all available from the Intel corporation
of Santa Clara, California. The X86 architecture
provides for three distinct types of addresses, a 
logical (i.e., virtual) address, a linear address and a
physical address.The logical address represents an offset from a
segment base address. The segment base address is
accessed via a selector. More specifically, the
selector, which is stored in a segment register, is an
index which points to a location in a global descriptor
table (GDT). The GDT location stores the linear address
corresponding to the segment base address.The translation between logical and linear
addresses depends on whether the microprocessor is in
Real Mode or Protected Mode. When the microprocessor is
in Real Mode, then a segmentation unit shifts the
selector left four bits and adds the result to the
offset to form the linear address. When the
microprocessor is in Protected Mode, then the
segmentation unit adds the linear base address pointed
to by the selector to the offset to provide the linear
address.The physical address is the address which appears
on the address pins of the microprocessor and is used to
physically address external memory. The physical
address does not necessarily correspond to the linear
address. If paging is not enabled then the 32-bit
linear address corresponds to the physical address. If
paging is enabled, then the linear address must

</DESCRIPTION>
<CLAIMS>
A processor (100) for processing information, the processor interacting with a
device (101) external to the processor using physical addresses, the processor

comprising:

a plurality of functional units (131-136),
said functional units being addressed using

logical addresses; and
a cache (104, 150) for temporarily storing information for use
by said plurality of functional units,

characterised in that the cache (104, 150) is addressed using linear addresses
and the device (101) external to the processor communicates with the cache

through a first translation circuit (164) translating physical addresses to linear
addresses and linear addresses to physical addresses, and the functional units

(131-136) communicate with the cache through a second translation circuit
(134, 135, 172) translating linear addresses to logical addresses and logical

addresses to linear addresses.
A processor as claimed in claim 1 wherein:

the cache includes an instruction cache (104) for temporarily storing
instructions for use by the functional units and a data cache (150) for

temporarily storing data for use by the functional units.
A processor as claimed in claim 2 further comprising:

an instruction physical tag array (390) having a plurality of instruction physical
address tag locations 
(400-403) for storing a corresponding
plurality of instruction physical address tags, said plurality of instruction

physical address tag locations corresponding to a plurality of lines of 
said instruction cache, each instruction physical address tag location

storing an instruction physical address tag indicating the physical
address of the information stored in a corresponding line of said

instruction cache; and
a data physical tag array (392) having a plurality of data physical address tag
locations (408-411) for storing a corresponding plurality of data

physical address tags, said plurality of data physical address tag
locations corresponding to a plurality of lines of said data cache,

each data physical address tag location storing a data physical address
tag indicating the physical address of the information stored in a

corresponding line of said data cache.
A processor as claimed in claim 3 wherein the first translation circuit
comprises:

a translation lookaside buffer (420) having a plurality of linear tag value
locations and a corresponding plurality of physical address locations,

each of said plurality of linear tag value locations storing a linear tag
value indicating a linear address and each of said corresponding

plurality of physical address locations storing a corresponding physical
address, said corresponding physical address being a translation of said

linear address, said translation lookaside buffer being accessed by both
said instruction cache and said data cache.
A processor according to claim 1 or claim 2 wherein the cache comprises:

a store array (180, 312) having a plurality of lines (200-203, 350-353) for
temporarily storing information; and
a linear tag array (182, 310) having a plurality of linear address tag locations 
(210-213, 370-373) for storing a corresponding plurality of linear

address tags, said plurality of linear address tag locations corresponding
to said plurality of lines of said store array, each linear address tag

location storing a linear address tag indicating the linear address of the
information stored in a corresponding line of said store array.
A processor according to claim 5 further comprising:

a valid information array having a plurality of valid information signal locations
for storing a corresponding plurality of valid information signals, said

plurality of valid information signal locations corresponding to said
plurality of lines of said store array, each said valid information signal

indicating whether valid information is stored in a corresponding line of
said store array.
A processor according to claim 6 wherein said linear tag array includes said
valid information array.
A processor according to claim 5 further comprising:

a physical tag array (390, 392) having a plurality of physical address tag
locations (400-403, 408-411) for storing a corresponding plurality of

physical address tags, said plurality of physical address tag locations
corresponding to said plurality of lines of said store array, each physical

address tag location storing a physical address tag indicating the
physical address of the information stored in a corresponding line of

said store array.
A processor according to claim 8 further comprising:

a physical tag valid information array having a plurality of physical tag valid 
information signal locations for storing a corresponding plurality of

physical tag valid information signals, said plurality of physical tag valid
information signal locations corresponding to said plurality of lines of

said store array, each said physical tag valid information signal
indicating whether a valid physical tag is stored in a corresponding line

of said physical tag array.
A processor according to claim 9 wherein said physical tag array includes said
physical tag valid information array.
A processor according to claim 5 further comprising:

a valid physical translation information array having a plurality of valid physical
translation information signal locations for storing a corresponding

plurality of valid physical translation information signals, said plurality
of valid physical translation information signal locations corresponding

to said plurality of lines of said store array, each said valid physical
translation information signal indicating whether information stored in a

corresponding line of said store array provides a successful physical tag
hit.
A processor according to claim 11 wherein said linear tag array includes said
valid physical translation information array.
A processor according to claim 5 wherein:

said cache includes a plurality of columns; and
each of said plurality of columns includes a respective
store array and linear tag array.
A processor according to claim 13 wherein:

each of said plurality of columns includes a respective physical tag array,
each physical tag array having a plurality of physical address tag locations for
storing a corresponding plurality of physical address tags, said plurality

of physical address tag locations corresponding to said plurality of lines
of said store array, each physical address tag location storing a physical

address tag indicating the physical address of the information stored in a
corresponding line of said store array.
A method of using a cache (104, 150) within a processor (100) which includes
a plurality of functional units (131-136) which are accessed using logical addresses, the

processor interacting with a device (101) external to the processor using physical
addresses, the method comprising:


addressing the cache using linear addresses;
translating physical addresses to linear addresses
and linear addresses to physical addresses to allow devices external to

the processor to communicate with the cache; and
translating linear addresses to logical addresses and logical addresses to linear
addresses to allow the functional units to communicate with the cache.
A method according to claim 15 wherein the cache includes a plurality of
columns, each column including a plurality of lines, the plurality of lines

of each column corresponding to the plurality of lines of the other
columns;

the translating between the physical addresses and the linear addresses allowing
the least significant bits of the linear address to correspond to the least 

significant bits of the physical address;

and the method comprising:

controlling the addressing of the cache so that the least significant bits of the
linear address access a particular line of each column of the cache and

causing information corresponding to a physical address to be written in
only one column of the particular line of the cache, whereby aliasing is

prevented from occurring when using the cache.
</CLAIMS>
</TEXT>
</DOC>
