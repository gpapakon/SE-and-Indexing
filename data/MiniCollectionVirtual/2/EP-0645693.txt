<DOC>
<DOCNO>EP-0645693</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Data storage and recovery.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F306	G06F306	G11B1568	G11B1568	G11B2700	G11B2700	G11B2736	G11B2736	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G11B	G11B	G11B	G11B	G11B	G11B	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G11B15	G11B15	G11B27	G11B27	G11B27	G11B27	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A plurality of removable volumes for magnetic tape units are used 
as an array for the storage of data. An array of removable volumes is 

mounted on the magnetic tape units. Each removable volume of the array 
is accessed at equivalent logical locations for storage or retrieval of 

the data file. Responsive to access of the array, data for the data 
file is striped to the removable volumes of the array beginning at the 

equivalent location on each removable volume. Depending upon the 
striping format, null marks may be striped to the removable volumes 

receiving less data than other volumes. This maintains the equivalent 
logical location for the start of the next file. 


 
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
RIPBERGER RICHARD A
</INVENTOR-NAME>
<INVENTOR-NAME>
RIPBERGER, RICHARD A.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention relates to storage and recovery of data on magnetic 
tape units and, more particularly, to application of array techniques to 
removable media data storage systems to improve data throughput and 
reliability. Still more particularly, the invention relates to 
management of and data organization on removable media volumes to 
support array operation. Redundant array, inexpensive disk (RAID) systems are well known 
for improving data rates and, with use of redundant data, storage 
reliability. RAID systems are implemented with a plurality of hard 
drive disk systems. The drives are typically synchronized to allow data 
to be divided among and written to the drives along parallel channels. 
This is called data striping. In theory, a RAID system is faster than 
single drive systems by a factor equal to the number of non-redundant 
data disk drives used in the array, because of the wider bandwidth made 
available by use of parallel channels. Data striping in itself does not improve reliability, because 
there is increased exposure to failure of any one disk drive when an 
array of drives is in use. However, error correcting codes, parity 
information, or both, can be used to make a RAID system which is 
tolerant of failure of one or more disk drives within the array. In 
these systems one or more of the drives in the array is used strictly 
for storage of redundant data. These redundant drives may carry parity 
information which, when combined with an error signal generated using 
error correcting code on a failing non-redundant drive, or an error 
signal resulting from simple failure of a non-redundant drive, may be 
used to regenerate the data on the failing non-redundant drive. See, 
for example, United States Patent 4,775,978 to Hartness. Alternatively 
a plurality of redundant drives may be used for error correcting code 
which may be used directly to recover missing data. See United States 
Patent 4,722,085 to Flora et al.  Where magnetic tape units are used for archival backup of RAID 
systems it would be desirable to match the bandwidth of the RAID system 
into the magnetic tape units. Most RAID concepts are not inherently 
limited to disk drives and can be applied to a group of magnetic tape 
units to broaden bandwidth for write and read operations. However, 
direct application of RAID controller processes to arrays of magnetic 
tape units, or other devices using removable media, raises potential 
pitfalls which, if unaddressed, could result in complete loss of data 
files. In a
</DESCRIPTION>
<CLAIMS>
An auxiliary data storage system, including: 
   a plurality of removable media data storage units (14-22); 

   an array of removable volumes (26) for mounting on the removable 
media data storage units; 

   means for mounting the array of removable volumes on the plurality 
of removable media data storage units; and 

   means for accessing the array at equivalent logical locations on 
each of the removable volumes of the array for storage of a data file by 

striping of data to the removable volumes or for retrieval of a data 
file. 
An auxiliary data storage system according to Claim 1, including: 
   means responsive to access of an array of removable volumes for 

striping data to the removable volumes by bytes with the bytes being 
organized into at least a first logical packet for each volume and with 

the logical packet for some volumes being padded if insufficient data 
exists to complete the logical packet. 
An auxiliary data storage system according to claim 1 or claim 2, 
including: 

   means responsive to access of an array of removable volumes for 
striping data to the removable volumes by blocks and null marks, with 

the null marks being placed in a subset of the volumes where the number 
of logical blocks is not evenly divisible by the number of volumes 

receiving striped data. 
An auxiliary data storage system according to any one of claims 1 
to 3, including: 

   means, responsive to exhaustion of storage capacity of a removable 

volume from an array during access of the array for a write operation, 
for marking all removable volumes for the array for an end of volume 

condition. 
An auxiliary data storage system according to any one of the 
preceding claims, wherein each array includes a removable volume for 

redundant information and the auxiliary storage system includes: 
   means for generating and writing redundant information onto said 

removable volume for redundant information beginning at the equivalent 
 

logical location to the logical location on the other removable volumes 
at which related information is stored. 
An auxiliary data storage system according to any one of the 
preceding claims, wherein each removable volume includes: 

   a label identifying the array to which the removable volume 
belongs and an order in the array. 
An auxiliary data storage system according to Claim 6, wherein the 
label includes: 

   a label header and a label trailer; and 
   the means for mounting includes means for determining if a mounted 

removable volume is a member of a requested array. 
An auxiliary data storage system according to Claim 7, wherein the 
label on each removable volume belonging to the array is not striped. 
A method of storing and recovering data files on a plurality of 
removable media data storage units, the method including: 

   mounting an array of removable volumes on the removable media data 
storage units; 

   accessing the array at equivalent logical locations on each of the 
removable volumes of the array for storage or retrieval of a data file; 

and responsive to access of an array of removable volumes for data 
storage, striping data to the removable volumes beginning at an 

equivalent logical location on each removable volume. 
A method according to claim 9, wherein the striping of data 
comprises the steps of: 

   responsive to access of an array of removable volumes and 
selection by a user or host of distributing data by bytes, striping data 

to the removable volumes by bytes with the bytes being organized into at 
least a first logical packet for each volume and with the logical packet 

for some volumes being padded if insufficient data exists to complete 
the logical packet. 
A method according to claim 9 or claim 10, wherein the striping of 
data comprises:

 
   responsive to access of an array of removable volumes and 

selection by a user or a host of a logical block organization, striping 
data to the removable volumes by blocks and null marks, with the null 

marks being placed in a subset of the volumes where the number of 
logical blocks is not evenly divisible by the number of volumes 

receiving striped data. 
A method according to any one of claims 9 to 11, including: 
   responsive to exhaustion of storage capacity of a removable volume 

from an array during access of the array for a write operation, marking 
all removable volumes for the array for end of volume. 
A method according to any one of claims 9 to 12, including: 
   striping redundant information to a removable volume of the array. 
A method according to any one of claims 9 to 13, including: 
   marking each removable volume for an array with an intact label 

identifying the array to which the removable volume belongs and an order 
in the array. 
A method according to claim 14, including: 
   upon mounting of a removable volume, determining if the removable 

volume is a member of a requested array. 
A data processing system, comprising: 
   a host computer (12); 

   a library (28) of removable volumes for storage of data; 
   a plurality of auxiliary memory drive units for accessing 

removable volumes; 
   an array of removable volumes (26) within the library having file 

format conventions and labels compatible with file format conventions of 
the library; and 

   the array of removable volumes being striped with data for the 
host computer, with data for a given file starting at a first volume of 

the array and having an identical block index for each removable volume 
of the array. 
A data processing system according to claim 16, wherein: 
   the given file begins at a same sequential file location on all 

volumes; and
 

   a starting location for the given file is identified by a single 
location pointer also used for volumes not belonging to an array. 
A data processing system according to claim 16 or claim 17, 
wherein: 

   identification for a volume of the array is accessible upon access 
of the volume after placement on an auxiliary memory drive unit without 

accessing of the remaining volumes of the array. 
A data processing system according to any one of claims 16 to 18, 
wherein: 

   a given file striped to the array ends on a single boundary across 
all volumes of the array, with null marks filling out volumes not 

receiving as many logical blocks as other volumes. 
</CLAIMS>
</TEXT>
</DOC>
