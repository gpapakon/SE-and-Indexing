<DOC>
<DOCNO>EP-0614142</DOCNO> 
<TEXT>
<INVENTION-TITLE>
System and method for detecting and correcting memory errors
</INVENTION-TITLE>
<CLASSIFICATIONS>G11C11401	G11C11401	G11C2904	G11C2900	G06F1108	G06F1216	G06F1216	G11C2900	G06F1110	G11C2942	G06F1108	G06F1110	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G11C	G11C	G11C	G11C	G06F	G06F	G06F	G11C	G06F	G11C	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G11C11	G11C11	G11C29	G11C29	G06F11	G06F12	G06F12	G11C29	G06F11	G11C29	G06F11	G06F11	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A burst error scrubbing system and method consecutively 
detects and corrects errors in all of memory (50), beginning with 

data stored at the first address of memory (50) and continuing 
until data stored at the last address of memory (50) is read, 

corrected and written back to memory (50). Burst error scrubbing 
is not performed during a refresh cycle but instead is 

programmable so that the burst scrubbing can be performed at a 
specific time interval. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
MOTOROLA INC
</APPLICANT-NAME>
<APPLICANT-NAME>
MOTOROLA, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
GRUENDER EUGENE H JR
</INVENTOR-NAME>
<INVENTOR-NAME>
KRAFT DOUGLAS R
</INVENTOR-NAME>
<INVENTOR-NAME>
SNOWDEN RALPH E
</INVENTOR-NAME>
<INVENTOR-NAME>
GRUENDER, EUGENE H, JR.
</INVENTOR-NAME>
<INVENTOR-NAME>
KRAFT, DOUGLAS R.
</INVENTOR-NAME>
<INVENTOR-NAME>
SNOWDEN, RALPH E.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to error detection and
correction systems and methods and, in particular, to a system and
method for scrubbing consecutively all of memory at a
programmable time interval.The terms "error scrub" and "error scrubbing" mean the
process of detecting and correcting errors in an error detection and
correction (EDAC) protected memory system although data
transfers to and from memory may not occur over extended periods
of time. If a soft error (i.e., an error due to radiation-induced bit
switching) occurs in memory, the error scrubbing system reads
memory, corrects the error and then writes the corrected data back
to the memory. The EDAC process helps to reduce the likelihood of
non-correctable failures occurring due to multiple soft errors.Current error scrubbing utilizes DRAM (dynamic read access
memory) refresh cycles to perform the error scrubbing operation.
In these conventional error scrubbing systems, if no error is
detected, a refresh cycle consists only of a read cycle. If an error
is detected, conventional memory scrubbing systems must execute
a read-correct-write cycle. This type of memory scrubbing system
and method has a negative effect on system performance because it
increases the time consumed by memory read cycles or read-modify-write
cycles in comparison to a normal refresh cycle.
Furthermore, the negative impact is constant because the refreshes
or scrub cycle requests must be performed periodically.Conventional EDAC systems and methods also prevent the use
of column address strobe (CAS) before row address strobe (RAS)
refresh and elimination of the refresh address counter.
Conventional error scrubbing techniques also complicate memory 
controller design by requiring a simple refresh cycle to be translated
into a complex memory cycle.Document US-A-4506362 describes a data memory error
detection and correction apparatus which is arranged to correct
errors in data memories during a refresh cycle.Therefore, there exists a significant need to perform error
scrubbing on memory other than during refresh cycles so that time
consumed by the error scrubbing does not negatively impact system
design and performance.According to a first aspect of the present invention there is
provided a system for consecutively detecting and correcting memory
errors as claimed in claim 1.According to a second aspect of the present invention there is
provided a method as claimed in claim 4.The present invention has utility in performing at a
programmable time interval a burst error
</DESCRIPTION>
<CLAIMS>
A system for consecutively detecting and correcting memory errors,
said system comprising:


memory (50) for storing data;
an error correction data multiplexer (30) connected to said memory (50)
to detect and correct errors in said data stored in said memory (50); and
a memory controller (10) connected to said multiplexer (30) and said
memory (50), said system being characterized in

the controller having an interval timer register (14) for
programming when a burst error scrub on said memory (50) will be performed;

and having a scrub control register (12) for initiating said burst error scrub on
said memory (50).
A system as recited in claim 1, wherein said memory (50) is a
dynamic random access memory (DRAM) array.
A system as recited in claim 1, wherein said error correction data
multiplexer (30) comprises:


a transparent latch (32, 36) for storing said data; and
error detection and correction means (38) connected to said transparent
latch (32, 36) for correcting said data if said data is in error.
A method executed by a computer as part of a computer program for consecutively
detecting and correcting memory errors in the system of claim 1, a scrub control

bit being used to initiate a burst scrub of said memory (50), said method
comprising the steps of:


(a) programming a time interval when a burst scrub of said memory (50)
will be performed;
(b) initiating a burst scrub of said memory (50) when said scrub control
bit is set;
(c) retrieving said data from said memory (50);
(d) detecting and correcting errors in said data;
(e) writing said corrected data back to said memory (50); 
(f) consecutively repeating steps (c)-(e) for each address of said
memory (50) starting with a beginning address of said memory (50) and

concluding with a last address of said memory (50); and
(g) repeating steps (b)-(f) at said time interval.
</CLAIMS>
</TEXT>
</DOC>
