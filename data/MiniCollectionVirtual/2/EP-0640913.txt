<DOC>
<DOCNO>EP-0640913</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Multilingual standard resources
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3048	G06F944	G06F1500	G06F3048	G06F1500	G06F314	G06F944	G06F906	G06F314	G06F906	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F9	G06F15	G06F3	G06F15	G06F3	G06F9	G06F9	G06F3	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
An operating system includes standard resources in a
number of different natural languages. The standard resources

are utilized to display window elements in windows. The
operating system and application programs run on the operating

system may utilize the standard resources to generate windows.
The application programs may choose the language of the

standard resources they use independently of the language of
resources the operating system uses.


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
MICROSOFT CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
MICROSOFT CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
SILVER DAVID MICHAEL
</INVENTOR-NAME>
<INVENTOR-NAME>
WINDSOR JOHN R
</INVENTOR-NAME>
<INVENTOR-NAME>
SILVER, DAVID MICHAEL
</INVENTOR-NAME>
<INVENTOR-NAME>
WINDSOR, JOHN R.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to data
processing systems and, more particularly, to the use of
multilingual standard resources in a data processing
system.Most currently available operating systems and
application programs are written to display output in a
single natural language. A natural language is one that
is written and/or spoken and is distinguished from
computing languages, such as PASCAL, BASIC or C. Natural
languages include languages such as English, French,
Arabic and Japanese. Certain software programs are
available in multiple versions, wherein each version is
written to display output in a different natural language.
However, these multiple versions are not integrated into a
single product. Operating systems are available that may
output text in different natural languages but these
operating systems must be internally reset by a software
reset or a hardware reboot to switch between natural
languages.EP-A 0 429 909 discloses a method of loading and/or replacing files
in a computer software wherein the files are called from under the control of
the used software or when loading it in a manner known per se so that the
loaded file replaces or completes at least part of the user interface used by the
software. Specifically, sais files could be resource files specifying the language used for texts in said uses interface.EP-A 0 304 071 discloses an object-based data processing system
including an extensible set of object types and a corresponding set of "object
managers" wherein each object manager is a program for operating with the
data stored in a corresponding type object. The object managers in general 
support at least a standard set of operations. Any program can effect
performance of these standard operations on objects of any type by making an
"invocation" request. In response to an invocation request, object management
services identifies and invokes an object manager that is suitable for
performing the requested operation on the specified type of data. A
mechanism is disclosed for linking data from one object into another object. An
object catalogue includes both information about objects and about links
between objects. Interchange services are provided for communicating data
between objects of different types, using a set of standard data interchange
formats. A matchmaker facility permits two processes that are to cooperate in a
data interchange operation identify each other and to identify data formats they
have in common. A facility is provided for managing shared data
</DESCRIPTION>
<CLAIMS>
A method, for use in a data processing system (10) having processing means
(12), memory means (14) and a video display (22), 
characterized by
 the steps of:

storing a first standard resource in the memory means (14), said first standard
resource specifying a
 non-textual appearance of a window element and specifying
that text in the window element is in a first natural language;
storing a second standard resource in the memory means (14), said second
standard resource specifying the same non-textual appearance of the window

element as specified by the first standard resource but specifying that text in the
window element is in a second natural language;
running a program (25) on the processing means (12) that defines a top-most
window, the definition of the top-most window including a reference to one of the

first or second standard resources such that a window element in the top-most
window has the non-textual appearance specified by the standard resource used

by the program (25) and including text in the natural language specified by the
standard resource used by the program (25);
receiving a request to change the reference of the top-most window to one of the first or second standard resources;
sending a message to the top-most window of the program to request said change in
the standard resources; and
allowing the top-most window to reject the requested change in standard resources used by
the program(25).
The method recited in claim 1 wherein the method further comprises the step of:

storing a third standard resource in the memory means (14), said third standard
resource specifying non-textual appears of an additional window element and

specifying that text in the additional window element is in the first natural
language,
wherein the step of running the program (25) on the processing means (12)
further comprises running the program (25) on the processing means (12) that

defines the top-most window by including a reference to the first and third
standard resources to display the window element and the additional window

element in the top-most window, said window element having the non-textual
appearance specified by the first standard resource and including text in the first

natural language and said additional window element having the non-textual
appearance specified by the third standard resource and including text in the first

natural language
The method recited in one of claims 1 to 2, further comprising the step of:

the top-most window accepting the change in standard resources and switching
the standard resource defined for the top-most window so that the program (25)

uses a previously unused standard resource to display the window element in top-most
window on the video display (22), said window element having the non-textual

appearance specified by the previously unused standard resources and
including text in the natural language specified by the previously unused standard

resource.
The method recited in one of claims 1 to 3 wherein the request to change the
standard resources is based on a user choice of one of the standard resources.
The method recited in claim 4, further comprising the step of:

displaying a user interface on the video display (22) to prompt the user to choose
one of the standard resources to be used by the program (25).
The method recited in one of claims 1 to 5 wherein the window element is a menu
(26). 
The method recited in one of claims 1 to 5 wherein the window element is a dialog
box (28).
The method recited in one of claims 1 to 5 wherein the window element is a string
(30).
The method recited in claim 1 wherein the memory means (14) holds an operating
system (23) and an application program (25), and wherein the method further

comprises:

running an operating system (23) on the processing means (12) to display a first
window on the video display (22), said first window including window elements

with text in the first natural language, and
running the application program (25) on the processing means (12) to display the
top-most window on the video display (22), said top-most window including

window elements with text in the second natural language.
The method recited in claim 9, further comprising the step of:

the top-most window accepting the change in the standard resource and switching
the natural language of the text in the window elements of the top-most window to

a third natural language such that the natural language of the text in the window
elements of a child window of the top-most window are displayed in the third

natural language through inheritance from the top-most window.
The method recited in claim 10 wherein the step of switching the natural language
of the text in the window elements of the top-most window to the third natural

language does not affect the first window.
</CLAIMS>
</TEXT>
</DOC>
