<DOC>
<DOCNO>EP-0649083</DOCNO> 
<TEXT>
<INVENTION-TITLE>
A microcontrol unit for a superpipelined, superscalar microprocessor
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F932	G06F930	G06F926	G06F926	G06F928	G06F928	G06F938	G06F930	G06F932	G06F938	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F9	G06F9	G06F9	G06F9	G06F9	G06F9	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A superscalar, superpipelined microprocessor includes storage circuitry to 
store an instruction, memory circuitry addressable by a microaddress to output a 

microinstruction in response to the microaddress, sequencing circuitry coupled 
to provide the microaddress to the memory circuitry, and decode circuitry 

coupled to the storage circuitry to detect whether the instruction stored in the 
storage circuitry comprises a single clock instruction, before the memory circuit 

outputs the microinstruction, and to indicate such a detection to the sequencing 
circuitry. Features for single microROM support for a dual pipeline architecture 

and execution of condition dependent instructions over a plurality of execution 
stages are further included within the microprocessor. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
NAT SEMICONDUCTOR CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
NATIONAL SEMICONDUCTOR CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BLUHM MARK
</INVENTOR-NAME>
<INVENTOR-NAME>
EITRHEIM JOHN K
</INVENTOR-NAME>
<INVENTOR-NAME>
GARIBAY RAUL A JR
</INVENTOR-NAME>
<INVENTOR-NAME>
HERVIN MARK W
</INVENTOR-NAME>
<INVENTOR-NAME>
MCMAHAN STEVEN C
</INVENTOR-NAME>
<INVENTOR-NAME>
MCMAHON RONALD S
</INVENTOR-NAME>
<INVENTOR-NAME>
BLUHM, MARK
</INVENTOR-NAME>
<INVENTOR-NAME>
EITRHEIM, JOHN K.
</INVENTOR-NAME>
<INVENTOR-NAME>
GARIBAY, RAUL A. JR.
</INVENTOR-NAME>
<INVENTOR-NAME>
HERVIN, MARK W.
</INVENTOR-NAME>
<INVENTOR-NAME>
MCMAHAN, STEVEN C.
</INVENTOR-NAME>
<INVENTOR-NAME>
MCMAHON, RONALD S.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to a processor and a method of operating a processor.In the design of a microprocessor, instruction throughput, i.e., the number of
instructions executed per second, is of primary importance. The number of
instructions executed per second may be increased by various means. The most
straightforward technique for increasing instruction throughput is by increasing
frequency at which the microprocessor operates. Increased operating frequency,
however, is limited by fabrication techniques and also results in the generation of
excess heat. An example of a known microprocessor design is to be found in US
Patent No. 4,415,969.Thus, modern day microprocessor designs are focusing on increasing the
instruction throughput by using design techniques which increase the average number
of instructions executed per clock cycle period. One such technique for increasing
instruction throughput is "pipelining". Pipelining techniques segment each instruction
flowing through the microprocessor into several portions, each of which can be
handled by a separate stage in the pipeline. Pipelining increases the speed of a
microprocessor by overlapping multiple instructions in execution. For example, if
each instruction could be executed in six stages, and each stage required one clock
cycle to perform its function, six separate instructions could 
be simultaneously executed (each executing in a separate stage of the pipeline)
such that one instruction was completed on each clock cycle. In this ideal
scenario, the pipelined architecture would have an instruction throughput which
was six times greater than the non-pipelined architecture, which could complete
one instruction every six clock cycles.A second technique for increasing the speed of a microprocessor is by
designing it to be a "superscalar." In a superscalar architecture, more than one
instruction is issued per clock cycle. If no instructions were dependent upon
other instructions in the flow, the increase in instruction throughput would be
proportional to the degree of scaleability. Thus, if an architecture were
superscalar to degree 2 (meaning that two instructions issued upon each clock
cycle), then the instruction throughput in the machine would double.A microprocessor may be both superpipelined (an instruction pipeline with
many stages is referred to as "superpipelined") and superscalar to achieve a high
instruction throughput. However, the operation of such a system in practice is
far from the ideal situation where each instruction can be neatly
</DESCRIPTION>
<CLAIMS>
A processor comprising:

a decoder (21x) for storing instructions to be decoded;
a memory (148) responsive to a micro-address to output a micro-instruction
associated with an instruction stored in said decoder (21); and
sequencer circuitry (146x) coupled to provide a micro-address to said memory
(148);

characterised by a detector (158x) coupled to the decoder (21x) and operable to
detect whether or not an instruction comprises a single clock instruction before said

memory (148) outputs the micro-instruction associated with that instruction, said
detector (158x) being responsive to detection of a single clock instruction to input a

control signal to the sequencer circuitry (146x) to cause the sequencer circuitry to
issue, independently of said memory (148), another micro-address associated with

another instruction.
A processor according to claim 1, comprising:

second sequencer circuitry (146y) coupled to provide a micro-address to cause
said memory (148) to output a micro-instruction associated with a further instruction

stored by said decoder (21); and
a second decoder (21y) coupled to receive instructions from said decoder (21x),
a second detector (158y) to detect whether or not said further instruction comprises a

single clock instruction before said memory (148) outputs the micro-instruction
associated with that further instruction, said second detector (158y) being responsive to

detection of a single clock instruction to input a control signal to the second sequencer
circuitry (146y) to cause the second sequencer circuitry to issue, independently of said

memory (148), another micro-address associated with another instruction.
A processor according to claim 2, wherein said decoders (21x, 21y) comprise
respective registers. 
A processor according to any one of claims 1 to 3, wherein the or each said
detector (158x, 158y) is responsive to detection of a single clock instruction to input a

control signal to its associated sequencer circuitry (146x, 146y) to cause that sequencer
circuitry to issue said another micro-address in the next following clock cycle.
A processor according to any one of claims 1 to 4, wherein the or each said
detector (158x, 158y) includes a programmable logic array.
A processor according to claim 5, wherein the or each said programmable logic
array detects selected bits of an instruction to detect whether or not said instruction is a

single clock instruction determination.
A processor according to any one of the preceding claims, wherein the or each
said detector (158x, 158y) is responsive to a plurality of opcode bits of instructions

stored in said memory (148) to detect whether or not an instruction is a single clock
instruction.
A processor according to claim 7, wherein the or each said detector (158x,
158y) is also responsive to a protected mode bit external from an instruction to detect

whether or not an instruction is a single clock instruction.
A processor according to any one of the preceding claims, wherein the memory
(148) is a micro-ROM.
A method of operating a processor, the method comprising the steps of:

storing instructions;
outputting a micro-address from a sequencer (146x) to address a memory (148)
thereby causing the memory (148) to issue a micro-instruction associated with a stored

instruction;
 
characterised by detecting, before said memory (148) outputs the micro-instruction

associated with an instruction, whether or not that instruction is a single
clock instruction; and in response to the detection of a single clock instruction,

inputting a control signal to the sequencer (146x) to provide, independently of said
memory (148), another micro-address associated with another instruction.
A method according to claim 10, further characterised by storing further
instructions; and, substantially in parallel with implementation of the method

according to claim 10, outputting a micro-address from a further sequencer (146y) to
address said memory (148), thereby causing the memory to issue a micro-instruction

associated with a stored further instruction; detecting, before said memory (148)
outputs the micro-instruction associated with said further instruction, whether or not

that further instruction is a single clock instruction; and, in response to the detection of
a single clock further instruction, inputting a control signal to the further sequencer

(146y) to issue, independently of said memory (148), another micro-address associated
with another instruction.
A method according to claim 10 or 11, wherein said detection is carried out by
logical decoding of a preselected portion of an instruction to detect whether or not said

instruction is a single clock instruction.
A method according to any one of claims 10 to 12, wherein, in response to
detection of a single clock instruction, the control signal input to one of the sequencer

(146x) and the further sequencer (146y) causes the issue of another micro-address
associated with another inst
ruction in the next succeeding clock cycle.
A method according to any one of claims 10 to 13, further characterised by
repeating said method for a series of instructions.
</CLAIMS>
</TEXT>
</DOC>
