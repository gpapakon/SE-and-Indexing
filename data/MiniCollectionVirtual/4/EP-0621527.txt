<DOC>
<DOCNO>EP-0621527</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Hierarchically grouped macroinstructions for a graphical user interface.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3023	G06F3023	G06F3033	G06F3033	G06F3048	G06F3048	G06F314	G06F314	G06F906	G06F906	G06F944	G06F944	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F3	G06F3	G06F3	G06F3	G06F3	G06F3	G06F9	G06F9	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A system (200) and method for creating hierarchically grouped 
macroinstructions (macros) is presented. The present invention brings together macros 

(310) and icons (227) to provide a simplified view of the system's components and their 
interrelationships. In particular, macros are created and grouped in a hierarchy to 

provide the operator with the simplified view. The information in the macro is ordered 
hierarchically with macros appearing at the top level. The operations (240) in a macro 

appear at the second level with each operation connected to its parent macro with a line. 
The chronological execution of the component operations is shown by the order they 

appear below the parent macro. Each operation also has associated parameters (242) such 
as a source and, possibly, a destination device. These devices (244, 246, 248) appear as 

a third level that is connected to the parent operation also with a line. The macros, 
operations and operation parameters are represented by icons. An icon at any level may 

be expanded or collapsed to visually give more or less information about the overall set of 
macros. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
HEWLETT PACKARD CO
</APPLICANT-NAME>
<APPLICANT-NAME>
HEWLETT-PACKARD COMPANY
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
DEHART DANIEL L
</INVENTOR-NAME>
<INVENTOR-NAME>
DEHART, DANIEL L.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to graphical user interface 
systems with sets of data and utility operations and more particularly to hierarchically 
grouped macroinstructions and a method for displaying these macroinstructions as 
computer icons within a graphical user interface. Data management systems provide computer developers, or operators, 
with the capability to query, edit and/or manipulate large databases using sets of data 
movement operations and utility operations. These operations can be grouped into 
logical units known as macroinstructions, or macros. A macro can be either a series 
of operations grouped together to be performed consecutively or a single utility 
function. The number of operations within a macro is unlimited. A typical data 
management system will have several tens of operator-defined macros. Thus, the 
number of total operations will be considerable. Each operation can have one or more associated parameters which are 
typically indicative of physical items within the computer system to be manipulated 
by its parent operation. For example, a initiate-disk-drive operation will have at least 
one parameter-- disk drive identifier-- to indicate exactly which disk drive will be 
initiated. While there is no limit on the number of parameters used by a single 
operation, the average is probably two parameters per operation. Thus, a given data 
management system will typically have a large amount of information contained in 
its set of macros. Generally, the information represented by the system macros is not 
organized in any logical manner. That is, an operator may obtain a list of the system 
macros, but the operations and parameters within the macro will be shielded from the 
operator unless each individual macro is accessed, or opened. One limitation with 
this configuration is that the lack of organization hinders an operator who needs to 
review and/or edit the macros within the data management system. The operator's  
 
task is difficult and time-consuming given the voluminous amount of information. 
Simple edits, such as changing a parameter, within an operation can be difficult 
without knowing how the change will affect other operations within that same macro 
and operations from other macros. Furthermore, time can be spent simply accessing 
the information since there is no simplified view of the system's macros. Another feature of some data management systems is the icon. Icons 
are provided to represent objects associated with the system. For instance, a
</DESCRIPTION>
<CLAIMS>
A method of creating macros in a computer system that includes a display screen 
(142) having a window, the method comprising the computer-implemented steps of: 


(1) initiating (420) a recording function (230); 
(2) storing user-entered keystrokes (531, 533, 535) with the 
recording function into a data buffer (232), the keystrokes 

being stored in a predetermined order; 
(3) terminating (450) the recording function; 
(4) creating (430, 440, 450) a macro (310) with the stored 
keystrokes; and 
(5) displaying the macro to the window in the predetermined 
order. 
A system (200) for creating and displaying a hierarchical group of macros, the 
system comprising: 

   first means (230, 232) for recording user-entered keystrokes; 
   second means (230, 232) for creating macros using the first means, the second 

means including link means (240, 242) for addressing a device (244, 246, 248); 
and 

   third means (225) for displaying macros (310) created by the second means in a 
hierarchical manner. 
</CLAIMS>
</TEXT>
</DOC>
