<DOC>
<DOCNO>EP-0629956</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Bus-to-bus bridge for optimising data transfers between a system bus and a peripheral bus.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1320	G06F1328	G06F1336	G06F1336	G06F1340	G06F1340	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F13	G06F13	G06F13	G06F13	G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The present invention provides hardware logic within a host bridge 
20 that connects a system bus 36 to a peripheral bus 22 using PCI bus 

architecture or a peripheral bus that uses a bus architecture similar to 
PCI. The inventive hardware optimizes the speed at which data transfers 

are accomplished between the buses while translating the data transfers 
between the different architectures of the two buses. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
AMINI NADER
</INVENTOR-NAME>
<INVENTOR-NAME>
KOHLI ASHU
</INVENTOR-NAME>
<INVENTOR-NAME>
SANTOS GREGORY N
</INVENTOR-NAME>
<INVENTOR-NAME>
AMINI NADER
</INVENTOR-NAME>
<INVENTOR-NAME>
KOHLI ASHU
</INVENTOR-NAME>
<INVENTOR-NAME>
SANTOS GREGORY N
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to bridges for 
interconnecting buses in a multiple bus computer environment, and more 
particularly to a bridge into which is incorporated a buffer for 
synchronizing operations of different data management protocols of the 
interconnected buses, thereby optimizing data transfer efficiency between 
the buses. Computer systems or information handling systems typically include 
more than one bus, each bus in the system having devices attached thereto 
which communicate locally with each other over the bus. For example, a 
typical computer system includes a system bus or CPU Local Bus to which a 
central processing unit (CPU) is attached and over which the CPU 
communicates directly with other devices attached to the system bus. The 
system may also include one or more peripheral buses, which connect 
peripheral devices, such as input/output devices (I/O) and graphics 
packages, to the computer system. Generally, system buses and peripheral buses use a different set of 
standard protocols or rules to conduct data transfers between the 
different devices and components connected to them. These protocols are 
designed into the bus and are referred to as the "architecture" of the 
bus. Accordingly, communication problems result when data must be 
transferred between a peripheral device connected to a peripheral bus and 
the CPU or another system component connected to the system bus. Since 
different bus architectures are involved in such a data transfer, data 
being transferred from the first bus architecture may not be in a form 
which is useable or intelligible by the receiving second bus 
architecture. Thus, a mechanism is needed to "translate" data that is transferred 
from one bus architecture to another. This translation mechanism is 
normally contained in the hardware of a bus-to-bus bridge (interface) 
through which the two different buses are connected. The bus-to-bus  
 
bridge connecting a system bus to a peripheral bus is normally called a 
host bridge. Accordingly, the host bridge connecting a system bus and a 
peripheral bus contains all the logic and hardware that translates 
communications between the two buses and ensures that data is transferred 
between the two buses intelligibly. To permit system-wide communication between devices on different 
buses, bus-to-bus bridges have been designed to match the communications 
protocol of one bus with that of another. Known bus-to-bus bridges 
include those disclosed in the following co-pending patent
</DESCRIPTION>
<CLAIMS>
An information handling system (10), comprising: 
   a central processing unit (24); 

   a system bus (36) connected to said central processing unit; 
   a peripheral bus (22) for connecting peripheral devices (18) 

thereto; 
   a host bridge for connecting said system bus to said peripheral 

bus; 
   said host bridge (20) including a buffer for temporarily storing 

data transmitted between said system bus and said peripheral bus; and 
   said host bridge further including a logic network that optimizes 

the speed at which said data is transmitted into and out of said buffer 
based upon whether said data is non-contiguous. 
An information handling system (10) as claimed in claim 1 wherein 
said logic network also optimizes the speed at which said data is 

transmitted into and out of said buffer depending upon an address said 
data is written into or read from through said system bus. 
An information handling system (10) as claimed in claim 2 including 
increment logic for providing said address said data is written into or 

read from through said system bus. 
An information handling system (10) as claimed in claim 3 wherein 
said increment logic includes a first adder that increments said address 

by one address and a second adder that increments said address by two 
addresses immediately after said data is written or read through said 

system bus. 
An information handling system (10) as claimed in claim 4 wherein 
said increment logic includes a multiplexor that outputs said incremented 

address of said first adder or said second adder depending upon whether 
an address within a burst data transfer should be skipped immediately 

after said data is written or read through said system bus. 
An information handling system (10) as claimed in claim 1 wherein 
said peripheral bus is a PCI bus. 
An information handling system (10) as claimed in claim 1 wherein 
said peripheral bus is a multiplexed bus. 
An information handling system (10), comprising: 
   a central processing unit (24); 

   a system bus (36) connected to said central processing unit; 
   a PCI bus (22) for connecting peripheral devices (18) thereto; 

   a host bridge (20) for connecting said system bus to said PCI bus; 
   said host bridge including a buffer for temporarily storing data 

transmitted between s aid system bus and said PCI bus; and 
   said host bridge further including a logic network that optimizes 

the speed at which said data is transmitted into and out of said buffer 
and through said PCI bus and said system bus. 
An information handling system (10) as claimed in claim 8 wherein 
said logic network includes pacing logic for sensing when a storage space 

within said buffer is empty of said data. 
An information handling system (10) as claimed in claim 9 wherein 
said pacing logic actuates an enabling signal to a master peripheral 

device when said storage space is empty. 
An information handling system (10) as claimed in claim 10 wherein 
said master peripheral device writes a string of sa
id data into said 
storage space when said master receives said enabling signal. 
An information handling system (10) as claimed in claim 10 wherein 
said pacing logic deactuates said enabling signal when said storage space 

is full of said data. 
An information handling system (10) as claimed in claim 9 wherein 
said pacing logic also is for sensing when said storage space within said 

buffer is full of said data. 
An information handling system (10) as claimed in claim 13 wherein 
said pacing logic actuates an enabling signal to a master peripheral 

device when said storage space is full of said data. 
An information handling system (10) as claimed in claim 14 wherein 
said master peripheral device reads said data within said storage space 

when said master peripheral device receives said enabling signal. 
An information handling system (10), comprising: 
   a central processing unit (24); 

   a system bus (36) connected to said central processing unit; 
   a peripheral bus (22) for connecting peripheral devices (18) 

thereto; 
   a host bridge (20) for connecting said system bus to said 

peripheral bus; 
   said host bridge including a buffer for temporarily storing data 

transmitted between said system bus and said peripheral bus; and 
   said host bridge further including logic for prefetching said data 

into said buffer through said system bus when a master peripheral device 
connected to said peripheral bus initiates a read burst transfer directed 

to a slave connected to said system bus. 
An information handling system (10) as claimed in claim 16 wherein 
said logic includes a sensor for detecting when said master peripheral 

device initiates said read burst transfer. 
An information handling system (10) as claimed in claim 16 
including a detector for determining when said read burst transfer is 

complete and actuating a signal to clear said buffer of any data that was 
not read during said read burst transfer. 
An information handling system (10) of claim 16 wherein said 
peripheral bus is a PCI bus. 
An information handling system (10) of claim 16 wherein said 
peripheral bus is a multiplexed bus. 
</CLAIMS>
</TEXT>
</DOC>
