<DOC>
<DOCNO>EP-0622726</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Shared memory array for data block and control program storage in disk drive.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F306	G06F306	G06F1208	G06F1208	G06F1310	G06F1310	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F12	G06F12	G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
An improved disk drive architecture includes a 
microcontroller interface circuit (34) connected between a 

drive microcontroller (26) and a buffer controller (36). 
The microcontroller interface circuit (34) includes address 

mapping registers (48) for mapping at least one 
predetermined portion of directly addressable memory of the 

microcontroller (26) to address locations of the drive's 
cache buffer (
28). The buffer controller circuit (36) 
includes an access arbitration circuit (52) for arbitrating 

requests for access to the cache buffer (28) by the drive's 
data sequencer (38):, the drive's host interface controller 

(40) and the drive's microcontroller (26). A 
microcontroller wait state generator (60) responds to the 

access arbitration circuit by generating and applying a 
wait state sequence to the microcontroller (26) until a 

request it makes for access to the cache buffer (28) can be 
executed. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
QUANTUM CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
QUANTUM CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
DO JAMES H
</INVENTOR-NAME>
<INVENTOR-NAME>
GLASSBURN TIM R
</INVENTOR-NAME>
<INVENTOR-NAME>
HENSON JAMES A
</INVENTOR-NAME>
<INVENTOR-NAME>
MCGRATH JAMES P
</INVENTOR-NAME>
<INVENTOR-NAME>
PATERSON BRUCE R
</INVENTOR-NAME>
<INVENTOR-NAME>
RAAB MICHAEL L
</INVENTOR-NAME>
<INVENTOR-NAME>
DO, JAMES H.
</INVENTOR-NAME>
<INVENTOR-NAME>
GLASSBURN, TIM R.
</INVENTOR-NAME>
<INVENTOR-NAME>
HENSON, JAMES A.
</INVENTOR-NAME>
<INVENTOR-NAME>
MCGRATH, JAMES P.
</INVENTOR-NAME>
<INVENTOR-NAME>
PATERSON, BRUCE R.
</INVENTOR-NAME>
<INVENTOR-NAME>
RAAB, MICHAEL L.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to an architecture for a disk drive 
data storage device. More particularly, the present invention relates to a disk 
drive architecture including a shared memory array for temporary storage of 
data blocks in transfer and control program routines, wherein an embedded, 
programmed microcontroller, a data sequencer, and a host interface controller 
are provided with direct access into the shared memory array. Previous recent disk drive architectures have included embedded 
programmed digital micro controllers for controlling various functions of the disk 
drive, including, for example, tasks such as head positioning, spindle motor 
speed regulation, read channel adjustments for zoned data recording, and data 
block transfer and supervision in response to commands received from a host 
computing system. These prior designs have typically included a large data 
cache memory array for temporary storage of multiple data blocks in transit 
between the disk data storage surface and the host computing system. 
Separately, the embedded microcontroller has typically required internal and 
external read only program memory (ROM) for storage and retrieval of control 
program routines, and scratchpad random access memory (RAM) for program 
variables and tables, etc. When disk drives were physically larger, and commanded higher 
prices, designs providing several separate memory chips for program memory 
and scratchpad access memory, separate and apart of the data block transfer 
buffer memory, were feasible and then deemed to be cost effective. Two 
marked trends have brought into focus the drawbacks of these prior  
 
approaches. One trend is that disk drives are becoming physically much 
smaller; and very small form factors in the 2.5" disk diameter and the 1.8" disk 
diameter size ranges are increasingly in use. Small disk drives require size-reduced 
electronics circuit boards. In turn, the electronics chips must support 
multiple functions, and the number of electronics chips must be reduced to a 
bare minimum. Another requirement is reduction of power consumption in these 
very small disk drives. The other trend is massive cost reductions presently 
being required by manufacturers and integrators of computing systems into 
which small hard disk drives are being installed and used. Separate program 
and random access memory arrays add significant costs to, and require 
precious board space on, the electronics printed circuit board portion of the 
hard disk drive assembly. The
</DESCRIPTION>
<CLAIMS>
A disk drive architecture including a rotating data 
storage disk (12), a positionable data transducer (16) for 

writing data to, and reading data from, selectable track 
locations defined on the disk (12), a preamplifier/driver 

(20) connected to the data transducer (16) including 
sequencer FIFO buffer memory means (39) for transferring 

user data blocks between selected track locations of the 
disk (12) and the sequencer FIFO buffer memory means (39), 

host interface controller means (40) including interface 
FIFO buffer memory means (41) for transferring user data 

blocks, commands and status values between a host computer 
(30) and the interface FIFO buffer memory means (41), cache 

buffer means (28) for storing data blocks in transit 
between the sequencer means (38) and the host interface 

controller means (40), buffer controller means (36) for 
controlling accesses to the cache buffer means (28), 

programmed digital microcontroller means (26) for decoding 
and executing commands received from the host computer (30) 

and for controlling a positioning mechanism (18) for 
positioning the data t
ransducer (16) at selected track 
locations, which architecture enables direct access by the 

microcontroller means to the cache buffer means and is 
characterised by comprising: 

   Microcontroller interface means (34) connected 
between the microcontroller means (26) and the buffer 

controller means (36), the microcontroller interface means 
(34) including address mapping register means (48) for 

mapping at least one predetermined portion of directly 
addressable memory of the microcontroller means (26) to 

address locations of the cache buffer means (28), 
   the buffer controller means (36) including 

programmable access arbitration means (52) for arbitrating 
requests for access to the cache buffer means (28) by the 

 
sequencer means (38), the host interface controller means 

(40) and the microcontroller means (26), and 
   microcontroller wait state generator means (60) 

responsive to the access arbitration means (52) for 
generating and asserting a wait state control to the 

microcontroller means (26) until a request it makes for 
access to the cache buffer means (28) can be handled. 
The disk drive architecture set forth in claim 1, 
wherein the cache buffer means (28) comprises a single 

dynamic random access memory chip defining a storage array, 
and wherein the arbitration means (52) further arbitrates 

requests for memory refresh operations generated by the 
buffer controller means (36). 
The disk drive architecture set forth in Claim 1 or 
2, wherein the cache buffer means (28) is arranged to store 

2N length data values at each addressable storage location 
wherein N is an integer bit length, and wherein the 

microcontroller means (26) is arranged to receive and send 
out 1N length data values for retrieval from, and storage 

in, the cache buffer means (28), and further comprising 1N 
data value cache register means (68) for caching a second 

1N length data value of a 2N length data value retrieved 
from the cache buffer (28) at the request of the 

microcontroller means (26), the cache register means (68) 
for supplying the second 1N data value the next time the 

microcontroller means (26) seeks a value from the cache 
buffer means (28). 
A method of sharing a single buffer memory (28) in 
a disk drive (10) between a data transfer path between a 

storage disk (12) and a host computer (30) and an embedded 
digital microcontroller (26) for controlling data storage 

and retrieval operations of the disk drive whereby the 
 

embedded digital microcontroller (26) has direct access 
within its address space to any of the storage locations of 

the buffer memory (28), the method comprising the steps of: 
   mapping at least one predetermined portion of 

directly addressable memory space of the microcontroller 
(26) to address locations of the buffer memory (28), 

   arbitrating requests for access to the buffer 
memory (28) by a sequencer (38) within the data transfer 

patch, a host interface controller (40) within the data 
transfer path and the microcontroller (26), 

   generating and applying a wait state sequence to 
the microcontroller (26) until a request it makes for 

access to the buffer memory (28) can be executed as 
determined by the arbitrating step, and 

   executing the request for access to the buffer 
memory (28) by the microcontroller (26) by generating and 

applying a data location address mapped from an address 
supplied from the microcontroller (26) to buffer memory 

(28) and transferring data values between the 
microcontroller (26) and the buffer memory (28). 
The method set forth in claim 4, wherein the 
mapping step comprises the step of mapping a plurality of 

predetermined portions of directly addressable memory space 
of the microcontroller (26) to plural block address 

locations of the buffer memory (28). 
The method set forth in Claim 4 or 5, wherein the 
arbitrating step comprises a further step of assigning 

access priorities to the sequencer (38), the host interface 
controller (40) and the microcontroller (26). 
The method set forth in Claim 4, 5 or 6, wherein 
the buffer memory (28) defines addressable storage 

locations which are sized to be integral multiples of the 
 

data values transferred between the microcontroller (26) 
and the buffer memory (28) and wherein the step of 

executing the request for access to the buffer memory (28) 
by the microcontroller (26) comprises for a first access to 

a particular address location of the buffer memory (28) the 
further step of caching a portion of a memory value at the 

particular address location which is not transferred 
between the microcontroller (26) and the buffer memory (28) 

in a microcontroller cache buffer (68). 
The method set forth in claim 7, wherein the step 
of executing the request for access to the buffer memory 

(28) by the microcontroller (26) comprises for a second and 
successive access to the particular address location of the 

buffer memory (28) the further step of retrieving the 
portion from the microcontroller cache buffer (68). 
The method set forth in Claim 5, wherein the step 
of mapping a plurality of predetermined portions of 

directly addressable memory space of the microcontroller 
(26) to plural block address locations of the buffer memory 

(28) comprises the steps of separately mapping for each one 
of a plurality of discrete blocks as independently floating 

data block windows via a buffer mapping means into address 
locations of the buffer memory (28). 
The method set forth in Claim 9, comprising the 
further steps of accessing and executing with the embedded 

digital microcontroller (26) a control program routine in 
the buffer memory (28) at locations within one of said 

independently floating data block windows, and transferring 
data values to and from the buffer memory (28) during 

execution of said control program routine at storage 
locations within another of said independently floating 

data block windows. 
A disk drive (10) comprising: 
   a base, 

   a data storage disk (12) rotating relative to the 
base, 

   a data transducer (16) positioned relative to the 
disk (12) for transducing serial data to and from the disk 

(12), 
   a programmed microcontroller (26) for controlling 

data transfers between the disk drive (10) and a host 
computer (30) for controlling positioning of the transducer 

(16), and for controlling rotation of the data storage disk 
(12), 

   a buffer memory array (28) for temporary storage of 
data blocks in transit between the disk drive (10) and the 

host computer (30), 
   a host interface (40) for transferring data blocks 

between the host computer (30) and the buffer memory array 
(28), 

   a sequencer (38) for transferring data blocks 
between the buffer memory array (28) and the data storage 

disk (12) by converting blocks to and from serial data and 
for detecting predetermined data storage locations on the 

data storage disk (12), 
   a microcontroller interface circuit (34) including 

a memory translation circuit (48) for translating external 
direct addresses put out by the microcontroller (26) into 

addresses for directly addressing the buffer memory array 
(28), 

   a buffer memory controller circuit (36) including 
an arbitration circuit (52) for arbitrating access requests 

by the microcontroller (26), the sequence (38) and the host 
value sought by the microcontroller (26) from the cache 

buffer (28) while another value sought by the 
microcontroller (26) is transferred directly from the cache 

buffer memory array (28) to the microcontroller (26). 
The disk drive set forth in Claim 11, wherein the 

sequence (38) and the host interface (40) each include a 
first-in, first-out buffer (39, 41) for temporarily holding 

a plurality of values, and wherein the buffer memory 
controller circuit (36) includes a state machine (200) 

operating in a page mode for automatically transferring 
pluralities of values between the buffer memory array (28) 

and a selected one of the first-in, first-out buffers 
(39,41). 
The disk drive set forth in claim 11 or 12, wherein 
the microcontroller cache buffer (68) holds a plurality of 

values, and wherein the buffer memory controller circuit 
(36) includes circuitry for determining whether a value 

sought by the microcontroller (26) is located within the 
microcontroller cache buffer (68) and if so, for 

transferring the value directly to the microcontroller (26) 
without fetching from the buffer memory array (28). 
The disk drive set forth in any one of claims 11 to 
13, wherein the microcontroller (26) includes internal read 

only memory (42) within a predetermined segment of 
microcontroller direct address space, and wherein the 

memory translation circuit (48) translates addresses within 
the microcontroller's address space which are located 

outside of the predetermined segment. 
The disk drive set forth in Claim 14, wherein the 
memory translation circuit (48) translates addresses within 

the microcontroller's address space into one of a plurality 
of programmable windows of address space of the buffer 

memory array (28). 
The disk drive set forth in any one of Claims 11 to 
15, wherein the buffer memory array (28) comprises two DRAM 

 
chips (28A, 28B) and wherein the buffer memory controller 

circuit (36) includes means (202, 204) for separately 
selecting, addressing and refreshing each said chip. 
The disk drive set forth in any one of Claims 11 to 
15, wherein the buffer memory array (28) comprises a main 

DRAM memory array (210), and a plurality of page cache 
arrays (214-220), and multiplex means (222) for 

multiplexing data from each said page cache array onto a 
bus (56) leading from the cache buffer. 
The disk drive set forth in claim 17, wherein the 
plurality of page cache arrays comprises four cache arrays. 
</CLAIMS>
</TEXT>
</DOC>
