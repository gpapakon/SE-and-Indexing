<DOC>
<DOCNO>EP-0642076</DOCNO> 
<TEXT>
<INVENTION-TITLE>
A data processing system.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3023	G06F3023	G06F3048	G06F3048	G06F314	G06F314	G06F906	G06F906	G06F944	G06F944	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F3	G06F3	G06F3	G06F3	G06F9	G06F9	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The present invention provides a technique for processing data 
input by a user in an entryfield provided by a user interface of a data 

processing system. The data processing system has a storage device, an 
operating system, and a user interface supported by the operating system. 

The user interface has entryfield objects including entryfield 
specification data. The system further includes a display means for using 

the entryfield specification data for a particular entryfield object to 
display a representation of that entryfield object on a display device, 

and input means for receiving data input by the user in the entryfield 
representation. The characteristic features of the system are that it 

provides comparison means within the entryfield object for checking the 
input data with a check data stored as part of the entryfield 

specification data, and processing means within the entryfield object, 
responsive to the comparison means, for performing one or more predefined 

processing step when the comparison means indicates that the input data 
matches the check data, this one or more predefined processing step being 

defined in the entryfield specification data. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
KEOGH CORMAC
</INVENTOR-NAME>
<INVENTOR-NAME>
KEOGH, CORMAC
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a data processing system, and in 
particular to a technique for processing data input through an entryfield 
of a user interface provided by such a system. A user interface can be considered as a software layer supported by 
an operating system, in some cases the user interface actually being part 
of the operating system. The user interface provides services to enable 
or assist program designers to write user interface applications. Most user interface applications these days are designed to present 
the user with panels (or windows) in which various elements are arranged. 
The elements may be in the form of either text, graphics, or 'controls'; 
'controls' may be for example pushbuttons, listboxes, entryfields, etc., 
ie. they are the means by which the user interacts with the user 
interface application. These type of user interface applications are 
typically referred to as graphical user interface applications (GUI 
applications), since the user interfaces used to develop them are 
typically referred to as graphical user interfaces. Generally the panels and controls of GUI applications are defined 
in a similar way to 'objects' in object oriented programming (OOP). OOP 
is a particular approach to software development which implements 
required functions by way of 'messages' sent to 'objects'. An 'object' is 
a software package that contains a collection of 'procedures' and 'data'. 
A 'message' is a signal sent to an object to request the object to carry 
out one of its procedures. Hence a message sent to an object will cause a 
procedure to be invoked to implement the required function. A panel or a control in a GUI application can hence be considered 
as a software package that contains a collection of related procedures 
and data. For example a window object may be defined as an object 
containing data about the window (size, position, style, type, etc.) 
along with the various procedures which can be carried out by the window. 
Typical examples of such procedures would be an initialisation procedure 
(a series of actions to be performed when the window is created), mouse 
handling procedures (eg. if the mouse pointer passes over the window then 
represent the pointer as a hand instead of an arrow), painting procedures 
(eg. paint the window blue and display a picture of the moon in the  
 
background), and application type procedures (eg. when the user hits 'OK' 
save the data in the panel to disk - when the user hits 'Cancel' don't 
save to disk, but display a
</DESCRIPTION>
<CLAIMS>
A data processing system comprising: 
   a storage device; 

   an operating system; 
   a user interface supported by the operating system, the user 

interface having entryfield objects including entryfield specification 
data; 

   display means for using the entryfield specification data for a 
particular entryfield object to display a representation of that 

entryfield object on a display device; 
   input means for receiving data input by the user in the entryfield 

representation; 
   the system being characterised by: 

   comparison means within the entryfield object for checking the 
input data with a check data stored as part of the entryfield 

specification data; and 
   processing means within the entryfield object, responsive to the 

comparison means, for performing one or more predefined processing step 
when the comparison means indicates that the input data matches the check 

data, this one or more predefined processing step being defined in the 
entryfield specification data. 
A data processing system as claimed in Claim 1, wherein the 
entryfield specification data is represented in the storage device by 

resource files and, upon creation of the particular entryfield object, 
the corresponding entryfield specification data in the resource file is 

copied to a memory accessible directly by that entryfield object. 
A data processing system as claimed in Claim 1 or Claim 2, wherein 
the entryfield specification data is provided within program code of a 

user interface application program, the entryfield specification data 
 

being sent via the user interface to the entryfield object upon creation 
of that entryfield object. 
A data processing system as claimed in any of claims 1 to 3, 
wherein the entryfield specification data includes a plurality of 

separate check data and definitions of the predefined processing steps 
associated with each separate check data. 
A data processing system as claimed in any preceding claim, wherein 
the check data may consist of a specific piece of data against which the 

input data is to be checked. 
A data processing system as claimed in any preceding claim, wherein 
the check data may define a particular format against which the input 

data is to be checked. 
A method of processing data input by a user in an entryfield 
provided by a user interface of a data processing system, the user 

interface having entryfield objects including entryfield specification 
data, the method comprising the steps of: 

   for a particular entryfield object displaying, having regard to its 
entryfield specification data, a representation of the particular 

entryfield object on a display device; 
   receiving data input by the user in the entryfield representation; 

   the method being characterised by the steps of: 
   employing the entryfield object to check the input data with a 

check data stored as part of the entryfield specification data; and 
   further employing the entryfield object to perform one or more 

predefined processing step when the checking step indicates that the 
input data matches the check data, this one or more predefined processing 

step being defined in the entryfield specification data. 
A method as claimed in Claim 7, further comprising the steps of:
 

   representing the entryfield specification data in resource files 
provided by a storage device; and 

   upon creation of the particular entryfield object, copying the 
corresponding entryfield specification data in the resource file to a 

memory accessible directly by that entryfield object. 
A method as claimed in Claim 7 or Claim 8, further comprising the 
steps of: 

   providing the entryfield specification data within program code of 
a user interface application program; and 

   sending the entryfield specification data via the user interface to 
the entryfield object upon creation of that entryfield object. 
A method as claimed in any of claims 7 to 9, wherein the entryfield 
specification data includes a plurality of separate check data and 

definitions of the predefined processing steps associated with each 
separate check data. 
</CLAIMS>
</TEXT>
</DOC>
