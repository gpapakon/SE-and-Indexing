<DOC>
<DOCNO>EP-0618536</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Interrupt arrangement
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1320	G06F1326	G06F946	G06F948	G06F1324	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F13	G06F13	G06F9	G06F9	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
An interrupt arrangement (5) for use with a data processing system 
comprises a plurality of submodules (103,104,105), each submodule 

including an interrupt request source (9) and a control input. An interface 
(100) for coupling to a bus (101) of the data processing system is also coupled 

to the control inputs of the submodules (103,104,105) and includes a control 
arrangement (108,109) for providing control signals to the control inputs of 

the submodules. The control arrangement (108,109) controls the operation 
of the submodules (103,104,105) by sending the control signals to the control 

inputs of the submodules in response to interrupt signals from the bus (101), 
such that the bus (101) can provide interrupt service to the interrupt request 

sources (9) of the submodules (103,104,105) within the arrangement (5) 
through the interface (100) and by way of the control signals. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
MOTOROLA INC
</APPLICANT-NAME>
<APPLICANT-NAME>
MOTOROLA, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BURGESS BRADLEY
</INVENTOR-NAME>
<INVENTOR-NAME>
HUSTON WILLIAM DEWITT JR
</INVENTOR-NAME>
<INVENTOR-NAME>
SCHWARZ ROLAND
</INVENTOR-NAME>
<INVENTOR-NAME>
BURGESS, BRADLEY
</INVENTOR-NAME>
<INVENTOR-NAME>
HUSTON, WILLIAM DEWITT, JR.
</INVENTOR-NAME>
<INVENTOR-NAME>
SCHWARZ, ROLAND
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to interrupt arrangements for use with data
processing systems.Conventional internal architecture of data processing systems includes a bus
for the transfer of instructions and data between the individual elements of
the processing system.Typically a processor manages the operation of the bus. A peripheral device
connected to the bus may have cause to generate an interrupt request by
sending a signal on one or more interrupt request (IRQ) line(s) of the bus.
For example a timer device may generate an interrupt request when it
reaches a certain time. The processor monitors the IRQ line(s) and on
detecting a signal it sends out an instruction asking which device sent the
signal.The device in question identifies itself and the interrupt request is serviced
by the processor. Often more than one interrupt request may be pending at a
time, and so the use of prioritised interrupt techniques allows the
organisation of interrupt request priorities between peripherals, ensuring the
more urgent requests are dealt with first.Vectored interrupts are commonly used to enhance the flexibility of interrupt
handling. Recent microprocessor system designs have included modules
containing more than one interrupt request source.A problem with this arrangement is that the flexibility of vectored interrupts
and interrupt priority methods is lost when used with multiple interrupt
request sources. EP-A-528139 describes a programmable interrupt priority encoder which fields interrupts
from devices connected to a bus, and which is adapted to allow more than one device to
have the same priority level.This invention seeks to provide an arrangement of interrupt architecture in which the
above mentioned disadvantages have been mitigated.According to the present invention as defined by independent claim 1 there is provided an interrupt arrangement for use in a
module coupled to a bus of a data processing system, the system having an interrupt
sequence, wherein the module comprises: a plurality of submodules, each submodule
including an interrupt request source a control input , and containing priority information
about the interrupt request source for determining an order of priority between submodules
having active interrupt request sources; a submodule bus having a plurality of lines, and
coupled to the control input of each submodule; an interface for coupling to the bus of the
data processing system, and coupled to the submodule bus, the interface containing
priority information about the
</DESCRIPTION>
<CLAIMS>
An interrupt arrangement for use in a module (5) coupled to a bus (101) of a data
processing system, the system having an interrupt sequence, wherein the module (5)

comprises:

a plurality of submodules (103, 104, 105), each submodule including an interrupt
request source (9) a control input (14), and containing priority information about the

interrupt request source (9) for determining an order of priority between submodules
having active interrupt request sources;
a submodule bus (102) having a plurality of lines (119, 120, 121, 122, 123, 124,
125, 126), and coupled to the control input (14) of each submodule;
an interface (100) for coupling to the bus (101) of the data processing system, and
coupled to the submodule bus (102), the interface (100) containing priority information

about the arrangement for determining an order of priority between the module (5) and
other modules connected to the system bus (101), the interface (100) also including a

control means (108) for providing control signals to the control inputs (14) of the
submodules (103, 104, 105) via the submodule bus (102) in response to interrupt signals

from the system bus (101),
wherein the interface (100) is arranged to combine the priority information (10,
11) of the highest priority submodule with the priority information (106, 107) of the

interface (100) for providing complete priority information for establishing an order of
priority between modules having active interrupt request sources, thereby allowing the

interrupt request sources (9) of the submodules (103, 104, 105) to be serviced by the
interrupt sequence of the system bus (101).
The arrangement of claim 1 wherein the control means (108) is arranged to
control the function of the submodule bus (102).
The arrangement of claim 1 or claim 2 wherein each submodule (103, 104, 105)
includes memories (10, 11) containing the priority information about the interrupt

request source (9) of that submodule.
The arrangement of any preceding claim wherein each submodule (103, 104, 105)
includes a logic means (14) arranged to receive, interpret and respond to the control

signals sent by the control means (108). 
The arrangement of any preceding claim wherein the interface (100) includes
memories (106, 107) containing the priority information about the arrangement.
The arrangement of claim 4 wherein a carry chain (119) is coupled to each
submodule (103, 104, 105) in series for providing a signal arranged to enable or disable

the logic means (14) of the submodules (103, 104, 105) in response to the status of the
previous submodule, wherein in the event of a submodule gaining priority, the carry

chain (119) is arranged to disable subsequent submodule logic means in order that only
one submodule has priority.
The arrangement of any of the claims 4 to 6 inclusive wherein the priority
information includes arbitration information (10, 107), for allowing arbitration between

interrupt request sources (9) otherwise having the same priority.
The arrangement of claim 7 wherein each submodule includes a latch (12) for
maintaining the interrupt request condition at the commencement of arbitration

throughout the period of arbitration, in order to prevent a change in condition during the
arbitration.
</CLAIMS>
</TEXT>
</DOC>
