<DOC>
<DOCNO>EP-0655737</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Register for variable threshold peak qualification for recording channels.
</INVENTION-TITLE>
<CLASSIFICATIONS>G11B2010	G11B2010	G11B2014	G11B2014	G11B2018	G11B2018	H04B1500	H04B1500	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G11B	G11B	G11B	G11B	G11B	G11B	H04B	H04B	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G11B20	G11B20	G11B20	G11B20	G11B20	G11B20	H04B15	H04B15	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A survival sequence register for a read channel employing a variable 
threshold peak qualification technique, has a first data shift register 

(F7-F14) receiving a logic sum stream RLL_IN of two serial streams of coded 
digital data, (SWP,SWN) corresponding to qualified peaks detected by a 

reading pick-up of positive and negative sign, respectively, and a pointer 
register (F15-F22). A control circuit (CONTROL) generates an erase signal 

when an incoming pulse is recognized as corresponding to a detected peak of 
the same sign of the precedingly detected peak. The erase signal is input 

to combinative logic gates, each driving a reset terminal of a flip-flop 
of 

the data shift register, with the exception of the first flip-flop of the 
register. The pointer register being reset when the control circuit receives 

a pulse corresponding to a peak of opposite polarity of the detected peak 
relative to the preceding pulse. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
ST MICROELECTRONICS SRL
</APPLICANT-NAME>
<APPLICANT-NAME>
STMICROELECTRONICS S.R.L.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BETTI GIORGIO
</INVENTOR-NAME>
<INVENTOR-NAME>
GADDUCCI PAOLO
</INVENTOR-NAME>
<INVENTOR-NAME>
MOLONEY DAVID
</INVENTOR-NAME>
<INVENTOR-NAME>
BETTI, GIORGIO
</INVENTOR-NAME>
<INVENTOR-NAME>
GADDUCCI, PAOLO
</INVENTOR-NAME>
<INVENTOR-NAME>
MOLONEY, DAVID
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention relates to a register for a serial 
stream of coded data provided with means for 
recognizing spurious pulses deriving from a peak 
detection process of reading data recorded on a mass 
storage support, in order to provide an output serial 
stream of coded data, purged of bits that are 
recognized as invalid. When reading coded data recorded on a mass memory 
support as for example a hard disk, beside useful 
signals, the reading pick-ups detect: a) noise due to 
variations of physical parameters of the recording 
support and of the pick-ups, b) the so-called thermal 
noise and c) noise due to, interferences among data 
recorded on tracks adjacent to the one being read by 
the pick-up. With an increase of the packing density of recording 
tracks, the noise due to interference phenomena among 
data recorded on adjacent tracks increases to a point 
of transforming itself from indeterministic to deterministic. 
As a consequence, the signal output by the 
reading pick-up may contain spurious peaks due to bits 
("1") recorded on tracks adjacent to the one being read 
by the pick-up, which superimpose or interpose themselves 
on or between the peaks corresponding to the "1" 
relative to the data being read from the recording 
support. According to common techniques with which data are 
recorded on a support such as for example a hard disk, 
the signal, filtered from pick-up noise, should he composed 
ideally of a sequence of peaks, alternately of 
opposite polarity, corresponding to logic "1" of coded  
 
data that are recorded on the track being read, 
"spaced" by intervals without peaks, corresponding to 
the logic "0". In order to curb the effects of noise, the peaks 
detected by the pick-up may be "qualified" when their 
amplitude extend beyond a certain fixed threshold 
level, positive or negative. When the noise component 
due to interferences caused by recordings present on 
adjacent tracks becomes prevailing, a peak qualification 
technique based on fixed thresholds, may introduce 
errors if interference peaks cause the istantaneous 
signal's amplitude to become larger than the respective 
threshold, positive or negative, as depicted in Fig. 1. Under conditions of strong inter-track interference, 
a peak qualification system, based on a variable 
threshold, has proved itself more effective. The system 
qualifies a detected peak of the same sign of the last 
detected peak only if its level is greater than the 
level of the last detected peak, while the qualification 
is automatic if the
</DESCRIPTION>
<CLAIMS>
A survival sequence register for a read channel 
employing a variable threshold qualification, comprising 

a first and a second input for receiving two 
serial streams of coded digital data, corresponding to 

qualified peaks detected by a reading pick-up, of 
positive and negative sign, respectively, a third input 

for receiving a clock signal, a fourth input for 
receiving a reset signal and an output through which a 

serial digital data stream, equivalent to the logic sum 
of said two streams, purged of spurious "1" eventually 

present in said two input serial streams and corresponding 
to spurious qualified peaks, is delivered, 

characterized by comprising 
   means capable of producing a serial stream 

equivalent to the logic sum of said two input serial 
streams; 

   a first shift register for receiving said serial 
sum stream and outputting said purged serial stream; 

   a control circuit suitable to receive through a 
first and a second input said serial input streams and 

to generate an erase signal upon receiving, through one 

or the other of said inputs, a pulse corresponding to a 
detected peak having the same sign of a precedingly 

detected peak; 
   a second pointer shift register, capable of 

pointing a logic "1" of a sequence shifting through 
said first register and which precedes a logic "1" 

corresponding to a detected peak of the same sign of 
the peak corresponding to said preceding logic "1"; 

   means responding to said erase signal and to said 
pointer capable of erasing said logic "1" selected by 

said pointer. 
A register as defined in claim 1, wherein said 
 

input serial streams of digital data are coded and said 
first shift register is composed of a number of flip-flop 

sufficient for at least a "1" to be present in a 
correct sequence stored in the shift register. 
A register as defined in claim 2, wherein said 
serial input data streams are coded according to an RLL 

coding. 
A register as defined in claim 1, wherein said 
responsive means comprise a logic NAND gate suitable to 

drive a reset input for each flip-flop that compose 
said first shift register with the exception of the 

first flip-flop of the register, and having a first 
input receiving said erase signal, a second input 

functionally connected to a corresponding tap of said 
pointer register and a third input connected to the Q 

output of the respective flip-flop that is resetted by 
the logic NAND gate. 
A register as defined in claim 4, wherein all the 
flip-flops that compose said second pointer register, 

with the exception of the first flip-flop, have a reset 
terminal that is driven in common with the other by an 

erase signal of the pointer when a "1" of one or the 
other of said two input serial streams is due to a peak 

of opposite polarity of the peak relative to the 
preceding "1". 
A register as defined in any of the preceding 
claims, wherein said control circuit generates a first 

signal upon the arrival at an input thereof of a logic 
"1" following a logic "1" received through the same 

input, and a complementary signal thereto. 
A register according to claim 6, wherein said 
 

first signal is applied to a first input of an AND 
gate, having a second input to which said sum serial 

stream is applied, the output signal of said AND gate 
being timed by a flip-flop, the output Q signal of 

which is fed to said first input of said erase NAND 
gates. 
A register according to claim 6, wherein said 
complementary signal is fed to an input of a logic NAND 

gate, having a second input to which said sum serial 
stream is applied, the output of said logic NAND gate 

being connected to a reset terminal of all the flip-flops 
that compose said second pointer register with 

the exception of the first flip-flop. 
</CLAIMS>
</TEXT>
</DOC>
