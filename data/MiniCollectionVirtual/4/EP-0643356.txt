<DOC>
<DOCNO>EP-0643356</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method of editing text in column sensitive environments.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1721	G06F1721	G06F1724	G06F1724	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F17	G06F17	G06F17	G06F17	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method and editor for editing a line of text comprising mixed 
single-byte character set (SBCS) and double-byte character set (DBCS) 

text while maintaining the columnar integrity of the text after the edit 
point. The method and editor provide an extended cursor to indicate to 

the user the text which will be affected by the editing operation. The 
method and editor are operable on computer systems which require Shift 

Out (SO) - Shift In (SI) control characters, on systems which support 
emulated SO - SI control characters and on systems which do not. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
STORISTEANU ADRIAN
</INVENTOR-NAME>
<INVENTOR-NAME>
WANG ZEMIN
</INVENTOR-NAME>
<INVENTOR-NAME>
STORISTEANU, ADRIAN
</INVENTOR-NAME>
<INVENTOR-NAME>
WANG, ZEMIN
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to text editors which support double-byte 
character sets (DBCS). More specifically, the present invention 
relates to text editors for mixed DBCS and single-byte character set 
(SBCS) text in systems with SO - SI control characters or with emulated 
SO - SI control characters or without SO - SI control characters, and to 
a method, for use therein, of accomplishing text replacement while 
maintaining the columnar integrity of the text. Characters in computer systems are typically stored as a number 
code which is interpreted by the computer system in accordance with a 
code table. Common examples of such codes are the ASCII code, which is 
used in most Roman alphabet (A to Z) based personal computers, and the 
EBCDIC code used in many mainframe computers. Typically, each character 
defined in the ASCII or EBCDIC code requires a single byte of storage 
space and thus up to 256 (2⁸) unique characters (including alphanumerics, 
symbols and control or other reserved characters) may be defined. When other, non-Roman alphabet character sets are desired, for 
example Japanese Kanji or Chinese pictograph characters, more than 256 
unique characters may be required. To enable the necessary number of 
characters to be defined, double-byte character sets (DBCS) have been 
employed wherein each character is defined by two bytes of storage space. 
This allows over 65,000 (2¹⁶) unique characters to be defined. In countries that use ideographic characters like China and Japan, 
it is important that DBCS and SBCS text can be intermixed in a single 
document. For example, a database program may be originally written in 
English and a non-English version may be sold wherein Roman alphabet 
prompts and other user interface information is replaced with non-Roman 
alphabet prompts (i.e. - Japanese Kanji characters), allowing mixed DBCS 
and SBCS text to be stored in the database program. Previously, when producing such a program or text file with mixed 
SBCS and DBCS characters on an EBCDIC terminal, a user would switch the  
 
terminal from SBCS mode to DBCS mode by employing a Shift Out (SO) - 
Shift In (SI) sequence which places a DBCS identifier before (SO) and 
after (SI) the DBCS characters. When the computer encounters a SO 
identifier (control character), it knows that the next byte is the first 
byte of a two-byte DBCS character and not a SBCS character. The terminal 
continues to interpret the data as two-byte DBCS characters until a SI 
control character is encountered. For example
</DESCRIPTION>
<CLAIMS>
A method of editing at least one character of a line of text 
containing mixed DBCS and SBCS characters while maintaining the columnar 

integrity of the text, comprising the steps of: 

(i) positioning an edit cursor on a character to be replaced; 
(ii) determining a present Class of the editor; 
(iii) determining a present State of the text to be edited at the edit 
cursor location; 
(iv) selecting a predefined Action associated with the present State; 
(v) displaying an extended cursor indicating the text to be affected by 
the replacement according to the predefined Action; 
(vi) composing a replacement text string comprising a replacement 
character and, if defined by the predefined Action, at least one of a 

character indicating the start of DBCS characters, a character indicating 
the end of DBCS characters and a blank character; 
(vii) replacing the affected text with the replacement text string; and 
(vii) repositioning the edit cursor immediately after the replacement 
character. 
A text editor for editing a line of SBCS and DBCS mixed text and 
maintaining the columnar integrity of the text during the edit operation, 

comprising: 
   means for positioning an edit cursor on a character to be replaced; 

   means for determining the Class of the editor; 
   means for determining the State of the character to be replaced, 

and the Action associated with the determined State;
 

   means to provide a visual indication of the extent of the line of 
text to be affected by the replacement according to the associated 

Action; 
   means to compose a replacement text string for the text to be 

affected comprising at least a replacement character and, if defined by 
the associated Action, at least one of a character indicating the start 

of DBCS characters, a character indicating the end of DBCS characters and 
a blank character; 

   means to replace said text to be affected with said replacement 
text string; and 

   means to reposition the edit cursor on the character immediately 
after the replacement character. 
</CLAIMS>
</TEXT>
</DOC>
