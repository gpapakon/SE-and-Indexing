<DOC>
<DOCNO>WO-2002009286</DOCNO> 
<TEXT>
<INVENTION-TITLE>
SYSTEM, METHOD, AND ARTICLE OF MANUFACTURE FOR REMOTE UPDATING OF HARDWARE
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F9445	G06F9445	G06F1100	G06F1100	G06F1300	G06F1300	G06F1576	G06F1578	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F11	G06F11	G06F13	G06F13	G06F15	G06F15	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A system, method and article of manufacture are provided for remote altering of a configuration of a hardware device. A hardware device is accessed utilizing a network, where the hardware device is configured in reconfigurable logic. Reconfiguration information is selected, sent to the hardware device, and used to reprogram the reconfigurable logic of the hardware device for altering a configuration of the hardware device.
</ABSTRACT>
<APPLICANTS>
</APPLICANTS>
<INVENTORS>
</INVENTORS>
<DESCRIPTION>
 SYSTEM, METHOD, AND ARTICLE OF MANUFACTURE FOR REMOTEUPDATING OF HARDWAREFIELD OF THE INVENTIONThe present invention relates to reconfigurable devices and more particularly to remotely updating a configuration of a hardware device.BACKGROUND OF THE INVENTIONIt is well known that software-controlled machines provide great flexibility in that they can be adapted to many different desired purposes by the use of suitable software. As well as being used in the familiar general purpose computers, software-controlled processors are now used in many products such as cars, telephones and other domestic products, where they are known as embedded systems.However, for a given a function, a software-controlled processor is usually slower than hardware dedicated to that function. A way of overcoming this problem is to use a 
special software-controlled processor such as a RISC processor which can be made to function more quickly for limited purposes by having its parameters (for instance size, instruction set etc.) tailored to the desired functionality.Where hardware is used, though, although it increases the speed of operation, it lacks flexibility and, for instance, although it may be suitable for the task for which it was designed it may not be suitable for a modified version of that task which is desired later. It is now possible to form the hardware on reconfigurable logic circuits, such as Field Programmable Gate Arrays (FPGA's) which are logic circuits which can be repeatedly reconfigured in different ways. Thus they provide the speed advantages of dedicated hardware, with some degree of flexibility for later updating or multiple functionality.In general, though, it can be seen that designers face a problem in finding the right balance between speed and generality. They can build versatile chips which will be software controlled and thus perform many different functions relatively slowly, or they can devise application-specific chips that do only a limited set of tasks but do them much more quickly.A compromise solution to these problems can be found in systems which combine both dedicated hardware and also software. The hardware is dedicated to particular functions, e.g. those requiring speed, and the software can perform the remaining functions. The design of such systems is known as hardware-software codesign.Within the design process, the designer must decide, for a target system with a desired functionality, which functions are to be performed in hardware and which in software. This is known as
</DESCRIPTION>
<CLAIMS>
CLAIMS
1. A method for remote altering of a configuration of a hardware device, comprising the steps of:
(a) accessing a hardware device utilizing a network, wherein the hardware device is configured in reconfigurable logic;
(b) selecting reconfiguration information;
(c) sending the reconfiguration information to the hardware device; and
(d) utilizing the reconfiguration information for reprogramming the reconfigurable logic of the hardware device for altering a configuration of the hardware device.
2. A method as recited in claim 1, wherein the network is the Internet.
3. A method as recited in claim 1 or 2, further comprising the step of detecting a current configuration of the hardware device prior to selecting the reconfiguration information.
4. A method as recited in claim 1, 2 or 3, wherein steps (a)- (d) are performed in response to a request received from the hardware device.
5. A method as recited in claim 1, 2, 3 or 4, wherein steps (a)-(c) are performed by a system of at least one of a manufacturer of the hardware device, a vendor of the hardware device, and an administrator of the hardware device.
6. A method as recited in claim 1, 2, 3, 4 or 5, wherein the logic device includes at least one Field Programmable Gate Array (FPGA). 

7. A method as recited in claim 6, wherein a first FPGA receives the reconfiguration information, wherein the first FPGA utilizes the reconfiguration information for configuring a second FPGA.
8. A computer program product for remote altering of a configuration of a hardware device, comprising:
(a) computer code for accessing a hardware device utilizing a network, wherein the hardware device is configured in reconfigurable logic;
(b) computer code for selecting reconfiguration information;
(c) computer code for sending the reconfiguration information to the hardware device; and
(d) computer code for utilizing the reconfiguration information for reprogramming the reconfigurable logic of the hardware device for altering a configuration of the hardware device.
9. A computer program product as recited in claim 8, wherein the network is the Internet.
10. A computer program product as recited in claim 8 or 9, further comprising computer code for detecting a current configuration of the hardware device prior to selecting the reconfiguration information. 'â€¢
11. A computer program product as recited in claim 8, 9 or 10, wherein the computer code is executed in response to a request received from the hardware device.
12. A computer program product as recited in claim 8, 9, 10 or 11, wherein the computer code for accessing the hardware device and the computer code for selecting and sending the configuration information is executed on a system of 


 at least one of a manufacturer of the hardware device, a vendor of the hardware device, and an administrator of the hardware device.
13. A computer program product as recited in claim 8, 9, 10, 11 or 12, wherein the logic device includes at least one Field Programmable Gate Array (FPGA).
14. A method as recited in claim 13, wherein a first FPGA receives the reconfiguration information, wherein the first FPGA utilizes the reconfiguration information for configuring a second FPGA.
15. A system for remote altering of a configuration of a hardware device, comprising: (a) logic for accessing a hardware device utilizing a network, wherein the hardware device is configured in reconfigurable logic;
(b) logic for selecting reconfiguration information;
(c) logic for sending the reconfiguration information to the hardware device; and
(d) logic for utilizing the reconfiguration information for reprogramming the reconfigurable logic of the hardware device for altering a configuration of the hardware device.
16. A system as recited in claim 15, wherein the network is the Internet.
17. A system as recited in claim 15 or 16, further comprising computer code for detecting a current configuration of the hardware device prior to selecting the reconfiguration information.
18. A system as recited in claim 15, 16 or 17, wherein the system is initiated in response to a request received from the hardware device. 

19. A system as recited in claim 15, 16, 17 or 18, wherein the logic for accessing the hardware device and the logic for selecting and sending the configuration information is initiated by at least one of a manufacturer of the hardware device, a vendor of the hardware device, and an administrator of the hardware device.
20. A system as recited in claim 15, 16, 17, 18 or 19, wherein the logic device includes at least one Field Programmable Gate Array (FPGA).
21. A system as recited in claim 20, wherein a first FPGA receives the reconfiguration information, wherein the first FPGA utilizes the reconfiguration information for configuring a second FPGA. 

</CLAIMS>
</TEXT>
</DOC>
