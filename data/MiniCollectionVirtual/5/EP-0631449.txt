<DOC>
<DOCNO>EP-0631449</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method for putting into operation decentralized redundant devices in communication systems
</INVENTION-TITLE>
<CLASSIFICATIONS>H04L2906	H04L2906	H04Q3545	H04Q3545	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04L	H04L	H04Q	H04Q	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04L29	H04L29	H04Q3	H04Q3	</CLASSIFICATIONS-FOURTH>
<APPLICANTS>
<APPLICANT-NAME>
SIEMENS AG
</APPLICANT-NAME>
<APPLICANT-NAME>
SIEMENS AKTIENGESELLSCHAFT
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
LOEBIG NORBERT DR RER NAT
</INVENTOR-NAME>
<INVENTOR-NAME>
LOEBIG, NORBERT, DR.RER.NAT.
</INVENTOR-NAME>
</INVENTORS>
<CLAIMS>
Method for putting decentralised, redundant devices in
communication systems into operation


with at least one storage medium (SP) and at least one
control device (CP) which are connected via first trunk

circuits (V1), via which messages are transmitted, to at
least one pair of mutually assigned, redundant message

distribution units (MB0, MB1),
with pairs of mutually assigned, redundant peripheral devices
(PE
i
) which are connected via second trunk circuits
(V2), via which messages are also transmitted, to the redundant

message distribution units (MB0, MB1), with one
peripheral device (PE
i-x
, PE
i-y
) of a redundantly assigned
pair of peripheral devices (PE
i
) being connected to each
message distribution unit of the respective pair of message

distribution units (MB0, MB1) and with peripheral
devices (PE
i-x
, PE
i-y
) associated with a pair of redundantly
assigned peripheral devices (PE
i
) being interconnected via
a synchronous connection (SYN) via which messages are

also transmitted
and with at least one program (P) which is stored on the
relevant storage medium (SP) and which during the process

of loading to the peripheral devices (PE
i
) is transferred
in segments via the first and second trunk circuits (V1,

V2) to each peripheral device (PE
i
),
characterised in that

the respective program (P) is split in a first method step
into loading segments (C) which are shared by all peripheral

devices (PE
i-x
, PE
i-y
) and which consist of first and second
shared portions (C1, C2) consisting of loading segments, and

into portions (LA, LX2, LY1, LY2) which consist of loading
segments and which are specific for the peripheral devices

(PE
i-x
 and PE
i-y
),
in that
, in a second method step, first specific loading 
segments (LA) are transferred via the one message distribution

unit (MB0) of the respective pair of redundantly configured
message distribution units (MB0, MB1) to the one peripheral

device (PE
i-x
) of all redundantly assigned pairs of
peripheral devices (PE
i
), second specific loading segments
(LY1) are transferred via the same message distribution unit

(MB0) of the respective pair of redundantly configured message
distribution units (MB0, MB1) to the other peripheral

device (PE
i-y
) of all redundantly configured pairs of peripheral
devices (PE
i
), third specific loading segments (LX2)
are transferred via the other message distribution unit

(MB1) of the respective pair of redundantly configured message
distribution units (MB0, MB1) to the one peripheral device

(PE
i-x
) of all pairs of redundantly configured peripheral
devices (PE
i
) and fourth specific loading segments
(LY2) are also transferred via the other message distribution

unit (MB1) of the respective pair of redundantly configured
message distribution units (MB0, M81) to the other

peripheral device (PE
i-y
) of all pairs of redundantly configured
peripheral devices (PE
i
),
in that
, in a third method step and simultaneously with the
second method step, the specific portions (LX1, LX2, LY1,

LY2) are exchanged via the synchronous connection (SYN) between
both peripheral devices (PE
i-x
 and PE
i-y
) of all redundantly
configured pairs of peripheral devices (PE
i
) and are
stored and
in that
, in a fourth method step, on completion of the second
method step and simultaneously with the third method

step the first shared loading segment portion (C1) is transferred
via the one message distribution unit (MB0) of the

respective pair of redundant message distribution units
(MB0, MB1) to the peripheral devices (PE
i-x
, PE
i-y
) of all
redundantly configured pairs of peripheral devices (PE
i
) and
the second shared loading segment portion (C2) is transferred

via the other message distribution unit (MB1) of the 
respective pair of redundant message distribution units

(MB0, MB1) also to the peripheral devices (PE
i-x
 and PE
i-y
) of
all redundantly configured pairs of peripheral devices

(PE
i
).
Method for putting decentralised, redundant devices in
communication systems into operation


with at least one storage medium (SP) and at least one
control device (CP) which are connected via first trunk

circuits (V1), via which messages are transmitted, to at
least one pair of mutually assigned, redundant message

distribution units (MB0, MB1),
with pairs of mutually assigned, redundant peripheral devices
(PE
i
) which are connected via second trunk circuits
(V2), via which messages are also transmitted, to the redundant

message distribution units (MB0, MB1), with one
peripheral device (PE
i-x
, PE
i-y
) of a redundantly assigned
pair of peripheral devices (PE
i
) being connected to each
message distribution unit of the respective pair of message

distribution units (MB0, MB1) and with peripheral
devices (PE
i-x
, PE
i-y
) associated with a pair of redundantly
assigned peripheral devices (PE
i
) being interconnected via
a synchronous connection (SYN) via which messages are

also transmitted,
and with at least one program (P) which is stored on the
relevant storage medium (SP) and which during the process

of loading to the peripheral devices (PE
i
) is transferred
in segments via the first and second trunk circuits (V1,

V2) to each peripheral device (PE
i
),
characterised in that

the respective program (P) is split in a first method step
into specific portions (LX1, LX2, LY1, LY2) consisting of

loading segments,
in that
, in a second method step, first specific loading
segments 
(LX1) are transferred via the one message distribution 
unit (MB0) of the respective pair of redundantly configured

message distribution units (MB0, MB1) to the one peripheral
device (PE
i-x
) of all redundantly configured pairs
of peripheral devices (PE
i
), second specific loading segments
(LY1) are transferred via the same message distribution

unit (MB0) of the respective pair of redundantly configured
message distribution units (MB0, MB1) to the other

peripheral device (PE
i-y
) of all redundantly configured pairs
of peripheral devices (PE
i
), third specific loading segments
(LX2) are transferred via the other message distribution

unit (MB1) of the respective pair of redundantly configured
message distribution units (MB0, MB1) to the one peripheral

device (PE
i-y
) of all pairs of redundantly configured peripheral
devices (PE
i
) and fourth specific loading segments
(LY2) are also transferred via the other message distribution

unit (MB1) of the respective pair of redundantly configured
message distribution units (MB0, MB1) to the other

peripheral device (PE
i-y
) of all pairs of redundantly configured
peripheral devices (PE
i
) and
in that
, in a third method step and simultaneously with the
second method step, the specific portions (LX1, LX2, LY1,

LY2) are exchanged via the synchronous connection (SYN) between
both peripheral devices (PE
i-x
 and PE
i-y
) of the respective
redundantly configured pair of peripheral devices

(PE
i
).
Method according to claim 1 and 2,
characterised in that

a plurality of programs (P01 ... Pn) are loaded simultaneously
into n different totalities of peripheral devices

(PE
i
).
Method according to claim 1, 2 or 3,
characterised in that

segmenting and loading of loading data (D) stored on the 
relevant storage medium (SP) into the peripheral devices

(PE
i
) is carried out in an analogous manner after loading of
the at least one program (P) or, as the case may be, a plurality

of programs (P
1
... P
n
) into the peripheral devices
(PE
i
).
Method according to one of the preceding claims,
characterised in that

the relevant program or data segments are transferred via
the first and second trunk circuits (V1, V2) and via the

relevant synchronous connection (SYN) in compressed form.
Method according to one of the preceding claims,
characterised in that

the segmenting of programs (P) or data (D) is performed before
the communication system is put into operation or before

an additional program (P
n+1
) is newly installed on an
already running communication system, the programs (P) or

data (D) are stored on the storage medium (SP) in segmented
form and a functional assignment of the respective program

segments or data segments to a specific peripheral device
(PE
i
) is stored in a table (T).
Method according to one of the claims 1 to 5,
characterised in that

programs (P) or data (D) are stored on the storage medium
(SP) in non-segmented form and are loaded into the peripheral

devices (PE
i
) while the communication system is in operation
whereby segmenting of the programs (P) or data (D)

is only performed by the control device (CP) as and when required
and the program segments or data segments are transferred

using a table (T) in which a functional assignment of
the respective program segments or data segments to a specific

peripheral device (PE
i
) is stored.
</CLAIMS>
</TEXT>
</DOC>
