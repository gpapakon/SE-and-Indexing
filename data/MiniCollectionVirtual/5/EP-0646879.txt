<DOC>
<DOCNO>EP-0646879</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method for structuring an expert system utilizing one or more neural networks.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1518	G06F1518	G06G700	G06G760	G06N300	G06N304	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06G	G06G	G06N	G06N	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F15	G06F15	G06G7	G06G7	G06N3	G06N3	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Neural networks learn expert system rules, for either 
business or real-time applications, to improve the robustness 

and speed of execution of the expert system. One or more neural 
networks (FIG. 19) are constructed which incorporate the 

production rules of one or more expert systems (FIG. 8). Each 
neural network is constructed of neurons or neuron circuits (N₁, 

N₂, N
N
, FIG. 19) each having only one significant processing 
element in the form of a multiplier. Each neural network 

utilizes a training algorithm which does not require repetitive 
training and which yields a global minimum to each given set of 

input vectors. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
MOTOROLA INC
</APPLICANT-NAME>
<APPLICANT-NAME>
MOTOROLA, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
WANG SHAY-PING THOMAS
</INVENTOR-NAME>
<INVENTOR-NAME>
WANG, SHAY-PING THOMAS
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention is related to the following 
inventions which are assigned to the same assignee as the 
present invention: 
(1) "Neural Network and Method of Using Same", having 
European Patent Application No. 94304234.1; (2) "Method for Converting an Existing Expert System 
into One Utilizing One or More Neural Networks", having US Serial 
No. 08/129,823 (docket no. MNE00276N), filed concurrently 
herewith. This invention relates generally to expert systems and, in 
particular, to an expert system which utilizes one or more 
neural networks. In recent years, expert systems have been used in many 
applications which have traditionally been carried out using 
complex algorithmic approaches. These applications include 
medical diagnosis, financial analysis, electronics design, 
nuclear power plant monitoring and control, oil exploration, etc. 
Expert systems have also been used for interpretation, 
prediction, planning, monitoring, debugging, repair, and 
instruction. The surge in popularity of expert systems is mainly 
due to their simplicity in modeling complicated systems by 
Production Rules (i.e. IF/THEN rules) and to their capability in 
recommending appropriate actions by inference (or search). A second known method of handling applications of the 
type mentioned above utilizes so-called "fuzzy logic", which  
 
makes use of fuzzy sets and fuzzy relational equations. In fuzzy 
set theory, quantifiers such as "for many" and "for a few" are 
used to relate elements of different sets. Fuzzy set theory, 
then, is useful in those situations in which data and 
relationships cannot be written in crisp mathematical terms. 
Simplicity and speed of design are two major advantages of 
fuzzy systems. Once an engineer has defined the variables and 
fuzzy sets, using intuition and experience, the design of a fuzzy 
logic control system prototype can be completed in a relatively 
short time. A third known method of handling the above types of 
applications uses conventional artificial neural networks. An 
artificial neural network can be considered as a network of 
neuron-like units operating on data "all-at-once" rather than 
"step-by-step" as in a conventional computation. With neural 
networks, the problem of control can often be viewed as a 
pattern-recognition problem, wherein the patterns to be 
recognized are mappings of measured signals for "change" into 
calculated controls for "action". The ability to learn from 
experience to provide ever-improving performance is an 
advantage in using
</DESCRIPTION>
<CLAIMS>
A method for structuring an expert system with a 
plurality of neural networks comprising the steps of: 


(a) defining (161, FIG. 22) a plurality of subsystems for 
a problem, each subsystem having at least one input and at least 

one output; 
(b) defining (165) a group of production rules for each of 
said subsystems by relating said at least one output to said at 

least one input in a certain manner; 
(c) linking (167) said subsystems together into said 
expert system; 
(d) defining (169) said plurality of neural networks, one 
for each group of production rules, each of said networks 

comprising a plurality of neurons; and 
(e) computing (171) the weights of said neural networks. 
The method recited in claim 1 and further comprising 
the steps of: 


(f) expressing (169) each of said neural networks by a 
polynomial expansion; and 
(g) computing (173) at least one output from each neural 
network by substituting said at least one input into the 

corresponding polynomial expansion. 
The method recited in claim 2, wherein said at least 
one output is an interpolated value. 
The method of claim 1, wherein step (a) further 
comprises the substep of normalizing (163) said at least one 

input. 
The method of claim 1, wherein in step (a) said at 
least one input may be classified into any one of a number of N 

values, N being a positive integer. 
The method of claim 1, wherein step (a) further 
comprises the substep of normalizing (163) said at least one 

output. 
A method for learning production rules of an expert 
system comprising the steps of: 


(a) defining a plurality of inputs and outputs for said 
expert system; 
(b) defining at least one group of production rules by 
relating, for said at least one group, one of said outputs to one 

or more of said inputs in a certain manner; 
(c) defining a neural network, for said at least one group 
of production rules, comprising a plurality of neurons; and 
(d) computing the weights of the neural network. 
The method recited in claim 7 and further comprising 
the steps of: 


(e) expressing said neural network by a polynomial 
expansion; and 
(f) computing at least one output from the neural 
network by substituting at least one of said inputs into the 

polynomial expansion. 
A method for structuring an expert system with a 
plurality of neural networks comprising the steps of: 


(a) defining a plurality of subsystems for a problem, 
each subsystem having at least one input and at least one output; 
(b) defining a table for each of said subsystems, said 
table comprising at least one entry relating said at least one 

output to said at least one input in a certain manner; 
(c) linking said subsystems together into said expert 
system; 
(d) defining said plurality of neural networks, one for 
each table, each of said networks comprising a plurality of 

neurons; and 
(e) computing the weights of said neural networks. 
The method recited in claim 9 and further comprising 
the steps of: 


(f) expressing each of said tables by a polynomial 
expansion; and 
(g) computing at least one output from each neural 
network by substituting said at least one input into the 

corresponding polynomial expansion. 
A method for structuring and utilizing an expert 
system incorporating a plurality of neural networks comprising 

the steps of: 

(a) defining a plurality of subsystems for a problem, 
each subsystem having at least one input and at least one output; 
(b) defining a group of production rules for each of said 
subsystems by relating said at least one output to said at least 

one input in a certain manner; 
(c) linking said subsystems together into said expert 
system; 
(d) defining said plurality of neural networks, one for 
each group of production rules, each of said networks 

comprising a plurality of neurons; 
(e) computing the weights of said neural networks; 
(f) providing a set of input values to at least one of said 
neural networks; and 
(g) said at least one neural network calculating an 
output value for said set of input values. 
</CLAIMS>
</TEXT>
</DOC>
