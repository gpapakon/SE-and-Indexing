<DOC>
<DOCNO>EP-0633538</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Relational database management system.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1200	G06F1200	G06F1730	G06F1730	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F12	G06F12	G06F17	G06F17	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A relational database management system 10 has a runtime supervisor 
22 and a data manager 30. Typically user application files do not 

conform to the definition of a base relation of the relational database 
management system. Therefore, for the use of the data manager a 

plurality of library procedures generalized for manipulation of user 
application files are provided installed with the database management 

system. Responsive to user selection, a class for user application files 
is defined by naming members of a set of the library procedures for use 

with member application files of the class and by naming the class. 
Further responsive to user selection, column definitions on an 

application file within the class are made to create a user defined table 
28. 

The user defined table corresponds to a specified user application 
file and to the definition. A class control block 26 is created in which 

the members of the set of library procedures are named for the class and 
a user defined table control block 28 is created in which the column 

definitions are stored. Both control blocks are accessible to the 
runtime supervisor for use with an access plan generated from SQL 

statements. Special structured query language statements are provided 
for user invocation to define a class of user application files and for 

providing column definitions, as well as for deleting a class control 
block and a user defined table control block. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CHANG DAVID YU
</INVENTOR-NAME>
<INVENTOR-NAME>
MALKEMUS TIM R
</INVENTOR-NAME>
<INVENTOR-NAME>
CHANG DAVID YU
</INVENTOR-NAME>
<INVENTOR-NAME>
MALKEMUS TIM R
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention relates to relational database systems and more 
particularly to application of Structured Query Language (SQL) to user 
collected data. The following definitions are used in the ensuing description: Application or User files. A named set of records stored and 
processed as a unit and having a structure determined by a computer 
application program. Atomic data. Representations to which meaning may be assigned, 
which are physically recorded and which cannot be decomposed into smaller 
units by a database manager. Compound Data. Structured combinations of atomic data which can be 
decomposed by a database manager. Database. A collection of data with a given structure for 
accepting, storing, and providing, on demand, data for multiple users. Data management functions. A set of functions used by a database 
manager to manipulate a base relation and extended by the invention to 
application files. Information. The agreed meaning of data. Relation. An arrangement of atomic data into columns and unordered 
rows. Rows should not be duplicated. Relational database. A database in which all compound data objects 
are organized as columns and unordered rows. Structured Query Language (SQL). A set of facilities for defining, 
accessing and managing a relational database. It is processed linearly.  Table. Commonly used as a synonym for relation, but here used to 
refer to the user model of base relations and various derived relations, 
such as views or result tables. Transaction. A collection of activities involving changes to a 
database. Tuple. A row of atomic data instances in a relation. A tuple may 
correspond to a record or segment in a nonrelational database structure. View. A virtual or derived relation which, in the prior art, was 
defined in terms of base relations, and represented by its defining 
expression. A view is here defined in terms of base relations and other 
files for which a user defined table has been provided. Virtual relation. Synonymous with derived relation. The result of 
operations (i.e. a defining expression) carried out on one or more base 
relations and application files but not itself constituting compound 
data. It is represented to a user as a table. User defined table. The user model of an application file and 
definitional data structures comprising a set of user defined data 
management functions for a user defined table type and column 
descriptions for the application file. User defined table type. A category for one or more application 
files defined by a set
</DESCRIPTION>
<CLAIMS>
A method for manipulating user application files (24) using a 
relational database management system (10), the method comprising the 

steps of: 
   providing a set of data management functions for manipulating the 

user application files; 
   defining a class of user application files by specifying the 

members of the set of data management functions for use with the class 
and a name for the class; and 

   setting column definitions for a user defined table instance within 
the defined class of user application files, the user defined table 

instance corresponding to a specified user application file. 
The method of Claim 1, further comprising the steps of: 
   processing a source file (12) of user generated structured query 

language statements; and 
   responsive to processing a structured query language statement 

directed to a user application file, using the data management functions 
for that class of user application files and the columns definitions for 

the application file in executing the structured query language 
statement. 
The method of Claim 1 or 2, further comprising the steps of: 
   for a class of user application files, creating a class control 

block (26) in which the members of the set of data management functions 
and the class are named; and 

   for the user defined table instance, creating a user defined table 
control block (28) in which the column definitions are stored and which 

is accessible to a runtime manager of the relational database management 
system. 
The method of Claim 3, further comprising the steps of: 
   providing structured query language statements for user invocation 

for the steps of defining a class of user application files and of 
providing column definitions for the user application files; and 

   providing structured query language statements for user invocation 
to delete a class control block and a user defined table control block. 
The method of any preceding Claim, wherein the step of defining a 
class of user application files includes prompting a user to name the 

class and to name each data management function included therein. 
A relational database management system (10) comprising:
 

   a structured query language processor (20) for compiling source 
files (12) containing structured query language statements and generating 

an access plan from the structured query language statements; 
   a set of generalized data management functions (32) for 

manipulation of user application files (24) and records therein; 
   a data manager (30) for executing the generalized data management 

functions to manipulate the application files; 
   means for generating user defined table type control blocks (26) 

defining the data management functions for a table type; 
   means for generating user defined table control blocks (28) for 

describing data columns in an application file; and 
   a runtime supervisor (22) for executing the access plan with the 

user defined table type control blocks and the user defined table control 
blocks and for thereby directing the data manager to execute particular 

generalized data management functions. 
The relational database management system of Claim 6, wherein the 
structured query language processor includes syntax for compiling 

statements for establishing the user defined table type control blocks 
and the user defined table control blocks and for destroying the user 

defined table type and table control blocks. 
The relational database management system of Claim 7, wherein the 
application file is a data stream received by a data processing system on 

an input/output port. 
The relational database management system of Claim 7, wherein the 
application file is a file generated by an application program other than 

a relational database management system. 
</CLAIMS>
</TEXT>
</DOC>
