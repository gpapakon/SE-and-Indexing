<DOC>
<DOCNO>EP-0630499</DOCNO> 
<TEXT>
<INVENTION-TITLE>
HIGH-PERFORMANCE NON-VOLATILE RAM PROTECTED WRITE CACHE ACCELERATOR SYSTEM.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F306	G06F306	G06F1208	G06F1208	G06F1312	G06F1312	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F12	G06F12	G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The present invention implements a data storage system that can be coupled to a host computer system (32) for the transfer of data between the host (32) and a plurality of data storage (34, 40 and 42) devices. The data storage devices (34, 40 and 42) are coupled to a plurality of data transfer channels (86) with each data storage channel being coupled to at least a respective one of the data storage devices (34, 40 and 42). Each data transfer channel (86) includes a data buffer (85) and an autonomously operating controller (38) for transferring data between the channels (86) data buffer (85) and data storage device (34, 40 and 42). A non-volatile random access storage memory (42) is provided to store cached pages of data. An interface (100) couples the data storage system to the host and through which data is transferred. A reconfigurable data path (80) permits selective data transfer couplings between the data transfer channels, the non-volatile memory (42), and the interface (100). A controller (76) directs the configuration of the data path (80) and controls a direct memory access controller (114) for burst transferring data between the interface (100) and the channel data buffers (85), between interface and the non-volatile memory (42) and between the non-volatile memory (42) and the channel data buffers (85).
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
AUSPEX SYSTEMS INC
</APPLICANT-NAME>
<APPLICANT-NAME>
AUSPEX SYSTEMS, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
CHENG YU-PING
</INVENTOR-NAME>
<INVENTOR-NAME>
HITZ DAVID
</INVENTOR-NAME>
<INVENTOR-NAME>
CHENG, YU-PING
</INVENTOR-NAME>
<INVENTOR-NAME>
HITZ, DAVID
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
 HIGH-PERFORMANCENON- OLATILE RAM PROTECTEDWRITE CACHE ACCELERATOR SYSTEMCross-Reference to Related ApplicationsThe present application is related to the following Applications, all assigned to the Assignee of the present Application:1. PARALLEL I/O NETWORK FILE SERVER ARCHITECTURE, invented by Row, et al., AUSP7209, Application SerialNumber 07/404,959, filed September 8, 1989;2. MULTIPLE FACILITY OPERATING SYSTEM ARCHITECTURE, invented by Hitz, et al., AUSP7210, Application Serial Number 07/404,885, filed September 8, 1989;3. ENHANCED VMEBUS PROTOCOL UTILIZING SYNCHRONOUSHANDSHAKING AND BLOCK MODE DATA TRANSFER, invented byDaryl D. Starr, AUSP7211, Application Serial Number07/405,636, filed September 8, 1989; 4. HIGH SPEED, FLEXIBLE SOURCE/DESTINATION DATABURST DIRECT MEMORY ACCESS CONTROLLER, invented by DarylD. Starr, AUSP7212, Application Serial Number07/474,534, filed February 2, 1990; and5. BUS LOCKING FIFO MULTI-PROCESSOR COMMUNICATION SYSTEM, invented by Pitts, et al., AUSP7213, ApplicationSerial Number 07/474,350, filed February 2, 1990. 

 Background of the Invention1. Field of the Invention:The present invention is generally related to caching disk controllers and, in particular, to disk controller systems providing for high performance, integrity protected write data caches established as integral components of a disk storage processor.2.- Description of the Related Art:There have been substantial advancements in all phases of computer technology and design. However, certain aspects of modern complex operating systems have greatly increased the required performance of the data storage sub-system. Specifically, UNIX and similar multi-tasking operating systems typically perform disk data transfer operations divided into sub-operations as necessary to support the multi-tasking activity of the operating system. Consequently, the actual data transfer operations performed by the disk sub-system are poorly optimized and therefore directly degrade overall system performance.A commonly utilized component of the UNIX operating system is a communications layer know as Network File System (NFS) . The NFS layer provides a network control protocol that permits convenient logical access to the disk storage sub-systems of remote network connected computer systems. The design of the NFS protocol is essentially stateless in that each atomic NFS operation proceeds without presumption of the pre-existing data transfer state of the disk storage sub-system. Thus, many NFS directed data transfer operations are
</DESCRIPTION>
<CLAIMS>
 Clai s
1. A data storage system coupled to a host computer system for the transfer of data, said data storage system comprising: a) a plurality of data storage devices; b) a plurality of data transfer channels, each said data storage channel being coupled to a respective one of said data storage devices, each data transfer channel including a data buffer and means for autonomously controlling the transfer of data between said data buffer and said respective one of said data storage devices; c) memory means for non-volatile random access storage of data; d) interface means for transferring data; e) data means for providing selective data transfer couplings between said data transfer channels, said memory means, and said interface means; and f) control means, coupled to said data means, for directing the transfer of data between said data transfer channels, said memory means, and said interface means, said control means including direct memory access control means, responsive to said control means, for burst transferring data between said interface means and said data buffers, between said interface means and said memory means and between said memory means and said data buffers.
2. The data storage system of Claim 1 wherein said memory means stores cache pages of data destined for storage by respective ones of said data storage devices, said data storage system further comprising control 


memory means for non-volatile random access storage of control data defining the status and destination of each cache page of data.
3. The data storage system of Claim 2 wherein the status of a cache page of data includes free and in-use, wherein said control means selectively directs the transfer of data from said interface to a predetermined first cache page, and wherein said control means modifies the control data defining the status of a predetermined second cache page. 

</CLAIMS>
</TEXT>
</DOC>
