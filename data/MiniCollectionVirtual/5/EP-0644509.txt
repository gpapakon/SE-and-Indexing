<DOC>
<DOCNO>EP-0644509</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method and apparatus for filling polygons
</INVENTION-TITLE>
<CLASSIFICATIONS>G06T1140	G06T1140	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06T	G06T	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06T11	G06T11	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method for rendering a graphical polygon, the polygon being 
defined by connecting edges surrounding a polygon interior, including the 

steps of computing multiple spans, each span including a portion of the 
polygon interior and at least one point on an edge of the polygon, 

computing at least one color value for each computed span, and rendering 
the spans on a display using the computed color values. 
In addition, an apparatus for rendering a graphical polygon, the 
polygon being defined by connecting edges surrounding a polygon interior, 

including apparatus for computing multiple spans, each span including a 
portion of the polygon interior and at least one point on an edge of the 

polygon, apparatus for computing at least one color value for each 
computed span, and apparatus for rendering the spans on a display using 

the computed color values. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
INTERNAT BUSINESS MACHINES BR
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES
<
BR
>
CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
SAHA AVIJIT
</INVENTOR-NAME>
<INVENTOR-NAME>
SAHA, AVIJIT
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to computer graphics
systems and more particularly to a method and apparatus for filling
polygons to be displayed.In computer graphics systems, it is desired to represent a two and
three dimensional graphical picture on a two dimensional display.
Typically, such a picture is a construct or image that may be stored in
memory as a set of polygons or objects that are tessellated into
polygons. To generate the picture on the display, the polygons are then
rendered using processes that are typically computationally intensive.Fig. 1 is an illustration of several graphical polygons to be
rendered on a display 10. Polygon 20 is a quadrilateral defined by
vertices A, B, C and D. Polygon 21 is a quadrilateral that has been
overlapped by polygon 20. As a result, quadrilateral 21 has been
modified to be a polygon with seven edges defined by vertices E, F, C, G,
H, I and J. Polygon 22 is a triangle also overlapped by quadrilateral 20
such that triangle 22 is a six sided polygon defined by vertices K, L, M,
N, B and O. Also shown is a circle that has been tessellated into eight
triangles in order to efficiently render the circle using polygons with
straight edges. The triangles comprising circle 25 are defined by
vertices P, Q, R, S, T, U, V, Wand X. For example, triangle 25A of
tessellated circle 25 is defined by vertices P, T and U and triangle 25B
is defined by vertices P, U and V.Liang et al., U.S. Patent No. 4,758,965, discloses one approach to
filling polygons being displayed. Liang et al. teaches using two
modified Bresenham line generators. The Bresenham line generators are
used to generate the edges to the polygon for display while also
providing parameters that can be used to generate fill lines connecting
the edges by a separate hardware element.GB 2 187 368 A describes a method for rendering a graphical polygon
defined by connecting edges surrounding a polygon interior, comprising:
computing a plurality of spans, each span including a portion of the
polygon interior; computing at least one colour value for each computed
span; and, rendering the spans on a display using the computed values.One difficulty in rendering multiple polygons that overlap or
touch, including Liang et al., is in rendering the common edges of the
polygons. For example, triangles 25A and 25B have edge P -> U in common.
In many typical rendering techniques, the edge P -> U may be rendered
twice, firstly when rendering triangle 25A, and secondly when rendering
triangle 25B. However, this is an
</DESCRIPTION>
<CLAIMS>
A method (380) for rendering a graphical polygon, the polygon being
defined by connecting edges surrounding a polygon interior, comprising

the steps of: computing (480) a plurality of spans, each span including
a portion of the polygon interior; computing at least one colour value

for each computed span; and, rendering (510) the spans on a display
using the computed values;

   the method being 
characterised by
: each computed span including at
least two edge points on each of at least two edges of the polygon; the

step of computing the plurality of spans including computing (500) which
of the at least two polygon edge points of the span are to be rendered

according to a set of rules specifying that all points within the edges
of a polygon are to be rendered and that, if an edge point is directly on

or just outside a polygon edge, then the edge point is rendered only if
the edge point is on a first side of the polygon with respect to the span direction, and, the step of

rendering (510) the spans including rendering only those polygon edge
points computed to be rendered.
A method as claimed in claim 1 wherein the step of computing a
plurality of spans of pixels includes computing a plurality of parallel

spans.
A method as claimed in claim 2 wherein the step of computing a
plurality of spans includes using incrementally computing each span by

incrementally computing polygon edge points on each end of each span.
Apparatus for rendering a graphical polygon, the polygon being
defined by connecting edges surrounding a polygon interior, the apparatus

comprising: means (220,380) for computing a plurality of spans, each span
including a portion of the polygon interior; means (220,380) for

computing at least one colour value for each computed span; and, means
for rendering the spans on a display (150) using the computed values;

   the apparatus being 
characterised by
: each computed span including
at least two edge points on each of at least two edges of the polygon;

the means (220,380) for computing the plurality of spans including means
for computing which of the at least two polygon edge points of the span

are to be rendered according to a set of rules specifying that all points
within the edges of a polygon are to be rendered and that, if an edge

point is directly on or just outside a polygon edge, then the edge point
is rendered only if the edge point is on a first side of the polygon with respect to the span direction;

and, the means (220,380) for rendering the spans including rendering only
those polygon edge points computed to be rendered. 
Apparatus as claimed in claim 4 wherein the means for computing a
plurality of spans of pixels includes means for computing a plurality of

parallel spans.
Apparatus as claimed in claim 5 wherein the means for computing a
plurality of spans includes means for using incrementally computing each

span by incrementally computing polygon edge points on each end of each
span.
A data processing system for rendering a graphical polygon, the
polygon being defined by connecting edges surrounding a polygon interior,

comprising:

processing means for processing data;
storage means for storing data to be processed; and
apparatus for rendering a graphical polygon as claimed in any of
claims 4 to 6.
</CLAIMS>
</TEXT>
</DOC>
