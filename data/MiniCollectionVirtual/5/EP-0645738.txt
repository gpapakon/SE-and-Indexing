<DOC>
<DOCNO>EP-0645738</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Graphs employing clusters.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06T1120	G06T1120	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06T	G06T	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06T11	G06T11	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Techniques for automatically laying out directed graphs with clusters. The 
techniques produce pictorial representations of the graphs which are easier to 

understand, more pleasing, and more compact than those produced by the prior art. 
The techniques have been added to the well-known DOT system for laying out 

directed graphs, and include a recursive technique for ranking nodes of the graph, a 
technique for ordering nodes within ranks which collapses subclusters into skeletons 

when the nodes within a cluster are ordered, and a technique for positioning the 
nodes after they have been ranked and ordered which obtains the x coordinates for 

the nodes by producing an auxiliary graph which is in effect the original graph 
"turned on its side" and assigning ranks to the nodes in the auxiliary graph. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
AT 
&
 T CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
AT
&
T CORP.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
NORTH STEPHEN C
</INVENTOR-NAME>
<INVENTOR-NAME>
NORTH, STEPHEN C.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention concerns the graphical display of information and more particularly 
concerns the graphical display of directed graphs. Directed graphs (digraphs) are a common way of representing hierarchical or 
asymmetric relationships among elements from a set. Digraphs arise naturally 
in descriptions of processes and work flows, control flow and data dependencies 
in computer software, in representations of finite state machines, 
and other applications. Layouts or drawings of graphs can help to make 
graphs more understandable by revealing their structure. For this reason 
hand-drawn layouts are often used in documentation. The problem is that 
manual graph layout is tedious and difficult. This has lead to the invention 
of automatic layout programs. Here, the user creates a specification of 
nodes and edges for input to the layout generator. The specification may 
be entered through a text editing program or may be created by means of 
utility programs that extract graph specifications from other forms of data  
 
such a program source code. The specification does not necessarily contain 
any geometric coordinates. The layout system then reads this specification, 
executes algorithms to determine node and edge coordinates, and generates 
a graphics file which contains a representation of the drawing of the graph. 
The file may be transmitted to a computer screen for display or to a printer 
for printing, or saved on an external storage device for future use. Often, nodes in graphs of complex systems can be classified into subgraphs. 
We use the term "cluster" to refer to node-induced subgraphs that 
are drawn in the layout using a box to outline the nodes of the cluster. 
This box may not contain any nodes not in the cluster. We will assume 
that the classification of nodes into clusters is performed either by the user 
or by an external utility or by any other appropriate technique. Typically 
the classification depends on either application-dependent information, or 
on syntactical properties of the graph. If this decomposition is recursive, 
then the clusters are nested. For example, process decomposition diagrams 
from formal methods in software engineering can exhibit such structure. (See 
Harry S. Delugach, "Specifying Multiple-Viewed Software Requirements with 
Conceptual Graphs", Journal of Systems Software19, pp. 207-224, 1992; 
Robert W. Krut, Jr. and David P. Wood, "Evaluation of Process Modeling 
Improvements", Technical Report CMU/SEI-91-TR5, Software Engineering 
Institute,
</DESCRIPTION>
<CLAIMS>
In a method of using a computer system to automatically draw a 
directed graph, the directed graph and clusters therein being made up of free nodes 

which do not belong to contained clusters and bound nodes which do, the method 
including a step of assigning ranks to the nodes, 

an improved step of assigning ranks comprising: 
   recursively performing on the directed graph and the clusters contained 

therein steps including 
   assigning relative ranks to each contained cluster, 

   collapsing each contained cluster into a virtual node, and 
   assigning relative ranks to the free nodes and virtual nodes; and 

on completion of the recursive steps, assigning absolute ranks to all nodes, with the 
rank of a free node within a cluster being determined by the absolute rank of the 

virtual node into which the cluster was collapsed and the relative rank of the free 
node within the cluster. 
In a method of using a computer system to automatically draw a 
directed graph of nodes which includes subgraphs grouped in clusters, the method 

including a step of assigning ranks to the nodes, 
an improved step of assigning ranks comprising the steps of: 

   assigning a relative rank to each node or cluster which is relative to the 
graph or cluster which immediately contains the node or cluster; and 

   assigning an absolute rank to each node or cluster which is determined 
from the absolute rank of the graph or cluster which immediately contains the node 

or cluster and the relative rank of the node or cluster. 
In a method of using a computer system to automatically draw a 
directed graph of nodes which includes subgraphs grouped in clusters, the method 

including a step of ordering the nodes within a rank, 
an improved step of ordering the nodes within the rank comprising the steps of: 

   collapsing each cluster immediately contained in the rank into a 
representation of the entire cluster; and 

   ordering the nodes within the rank by treating the representations as 
nodes. 
</CLAIMS>
</TEXT>
</DOC>
