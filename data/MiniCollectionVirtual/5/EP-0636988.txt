<DOC>
<DOCNO>EP-0636988</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method of coherent management of exchange between levels of a hierarchical memory of at least three levels
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1208	G06F1208	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F12	G06F12	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The method applies to exchanges between levels of a hierarchy of memories including at least one intermediate level of the hierarchy, linked to a higher level of the hierarchy and to a lower level of the hierarchy, each level of the hierarchy being divided into memories (3, 5, 6) themselves divided into blocks (10) containing information (11) associated with addresses (Ad), the blocks of the memories of the higher level and of the intermediate level of the hierarchy containing copies of the information held in blocks with corresponding addresses of the lower level of the hierarchy, and consists, when modifying an information item in a block (10.32) of a memory of the higher level of the hierarchy, in invalidating at least some of the information at the corresponding addresses of other memories of the higher level of the hierarchy, and in managing an update or an invalidation of the information at the corresponding addresses of the intermediate level and of the lower level of the hierarchy on the basis of a utility of the update. 
<
IMAGE
>
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
BULL SA
</APPLICANT-NAME>
<APPLICANT-NAME>
BULL S.A.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BOUDOU ALAIN
</INVENTOR-NAME>
<INVENTOR-NAME>
KASZYNSKI ANNE
</INVENTOR-NAME>
<INVENTOR-NAME>
LESMANNE SYLVIE
</INVENTOR-NAME>
<INVENTOR-NAME>
BOUDOU, ALAIN
</INVENTOR-NAME>
<INVENTOR-NAME>
KASZYNSKI, ANNE
</INVENTOR-NAME>
<INVENTOR-NAME>
LESMANNE, SYLVIE
</INVENTOR-NAME>
</INVENTORS>
<CLAIMS>
Method for consistent management of exchanges between levels of a
hierarchy of memories comprising at least one intermediate level of the

hierarchy, connected to a higher level of the hierarchy and a lower level of the
hierarchy, each level of the hierarchy being divided into memories (3, 5, 6)

themselves divided into blocks (10) containing information (11) associated with
addresses (Ad), the blocks of the memories at the higher level and the

intermediate level of the hierarchy containing copies of the information held in
blocks at corresponding addresses of the lower level of the hierarchy,

characterised in that, when there is a modification of information in a block
(10.32) of a memory at the higher level in the hierarchy, at least part of the

information at the corresponding addresses of other memories at the higher level
of the hierarchy is invalidated, and updating or invalidation of the information at

the corresponding addresses of the memories at the intermediate level and the
lower level of the hierarchy are managed as a function of an updating utility.
Method according to Claim 1 in connection with a computer assembly in
which the memories at different levels in the hierarchy are grouped according to

nodes, characterised in that when a modification is made to information in a
block (10.32) of a memory at the higher level of the hierarchy, the blocks (10.31)

are updated at corresponding addresses of the memories at the higher level of
the hierarchy of the node (1.3) to which the modified block belongs, and the

blocks (10.11; 10.22) are invalidated at corresponding addresses of the
memories at the higher level of the hierarchy in other nodes (1.1, 1.2).
Method according to Claim 1 or Claim 2, in which the copies of
information held in blocks at corresponding addresses of the intermediate level

of the hierarchy are normally processed according to a protocol in an update
mode, characterised in that each block at the intermediate level of the hierarchy 

is associated with a utility bit (12), which is put into a first status during a first
copy of information or during an up-date of information in this block, and which is

put into a second status during use of the information contained in this block,
and in that, during a modification of information at an address at the lower level

of the hierarchy, the blocks at the corresponding address at the intermediate
level of the hierarchy are updated and the processing protocol is maintained in

the update mode or it is commanded in an invalidation mode, as a function of a
previous updating utility at this address, this previous updating utility being

determined as a function of the status that the utility bits of the blocks of the
same address are in just prior to the update in question.
Method according to Claim 3, characterised in that an updating
threshold is stored at the lower level and that the protocol is maintained in the

update mode when a percentage of utility bits in the second status is at least
equal to the updating threshold, and the protocol is commanded in the

invalidation mode when the percentage of utility bits in the second status is lower
than the updating threshold.
Method according to Claim 3, characterised in that a first threshold
and a second threshold are stored at the lower level of the hierarchy, and the

processing protocol is maintained in the updating mode or it is commanded in an
invalidation mode as a function of an actual number of utility bits in the first and

second status by comparison with the first and second threshold.
Method according to Claim 5, characterised in that the protocol is
commanded in the invalidation mode when the number of utility bits in the

second status is below the second threshold. 
Method according to Claim 6, characterised in that when the numbers
of utility bits in the first and second status are respectively above the first and

second threshold, 
ad hoc
 invalidation of the information in the blocks at the
higher level of the hierarchy is carried out while maintaining the protocol in an

update mode.
Method according to Claim 1 or Claim 2, characterised in that each
block of the intermediate level of the hierarchy is associated with a utility bit (12),

which is placed in a first status during a first copy of information or during an up-date
of information in this block, and which is placed in a second status during

use of the information contained in this block, in that each address at the lower
level of the hierarchy is associated with a code (13), which evolves as a function

of an update utility when the copies of the information contained in the blocks at
the intermediate level of the hierarchy are processed according to a protocol in

an update mode, or as a function of a nature of failure when the copies of the
information contained in the blocks at the intermediate level of the hierarchy are

processed according to a protocol in an invalidation mode, the update utility
being determined as a function of the status that the utility bits are in, and the

nature of a failure being determined by a total absence of information and
address in the memory at the intermediate level of the hierarchy or by an invalid

item of information in a block of this memory, and in that the mode of the
protocol is caused to evolve as a function of the code of the relevant address at

the lower level of the hierarchy. 
Method according to Claim 8, characterised in that an updating
threshold is stored at the lower level and in that the update utility is measured by

comparing with the threshold a percentage of the utility bits in the second status.
Method according to Claim 8, characterised in that a first threshold
and a second threshold are stored at the lower level and the code is caused to

evolve as a function of an actual number of utility bits in the first and second
status by comparison with the first and second threshold.
</CLAIMS>
</TEXT>
</DOC>
