<DOC>
<DOCNO>EP-0610779</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Method and apparatus for generating sticky bit in floating point operation using parallel two-way propagation of group enables
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F748	G06F757	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F7	G06F7	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method is provided in a floating point processor to 
detect the "sticky bit" when generated as a result of an 

alignment operation. The detection of the sticky bit is done 
in parallel with the alignment operation and uses parallel 

two-way propagation of group enables. The high-order groups 
of bits have group enables generated by one method, and the 

low-order groups of bits have their groups enables generated 
by another method which does not increase the number of terms 

to be evaluated as bit position moves to the right. This 
scheme is significantly faster than conventional schemes that 

use serial one-way propagation of group enables. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
DIGITAL EQUIPMENT CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
DIGITAL EQUIPMENT CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
RAJAGOPALAN VIDYA
</INVENTOR-NAME>
<INVENTOR-NAME>
RAJAGOPALAN, VIDYA
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to floating point processing in
computers, and more particularly to a method and apparatus
for calculating the "sticky bit" in floating point operations.In a floating point processor, the final result of a
floating point operation is a rounded quantity which is
generated by the application of a rounding algorithm to an
intermediate result. For a destination datatype of maximum
width n, the task of the rounding algorithm is to convert an
intermediate result whose width is possibly greater than n,
to a representative quantity of width at most n. In order to
produce a correctly rounded result, the values of the
round((n+1)th bit), guard(n+2)th bit), and sticky bits must
be known. The sticky bit is defined as the logical OR of all
bits beyond the guard bit position.Non-zero bits beyond the guard bit position could be
generated as a result of alignment shifts as in the case of 
add/subtract/convert operations, or by multiply/divide
operations. When adding/subtracting two floating-point
operands, it is necessary to align (right-shift) the fraction
of the smaller operand by an amount determined by they
exponent difference of the two operands. The generation of
the sticky bit for multiply operations can be mapped to an
alignment shift case. This invention describes a technique
to detect the sticky bit when generated as a result of
alignment.IBM Technical Disclosure Bulletin, Vol. 23, No. 1A, June 1990, pages
30 - 31, "FAST STICKY BIT DESIGN FOR A 67-BIT ALIGNER IN AN IEEE 754
FLOATING-POINT COPROCESSOR" discloses an aligner which organizes a 67-bit
value into eight groups with bits B0-B66 representing the mantissa number and bit
B67 being the sticky bit. Shift right bits are used at the bit level as well as at the bit-group
level. The logic is based on ORing of the shift control signals instead of the
data bits, the OR gate outputs then being processed by three levels of AND/OR
circuits to generate a sticky bit output, according to prescribed logic expressions.The invention in its broad form includes a method of
calculating a sticky bit in a floating point processor,
generally as recited in claim 1. The invention also includes
a circuit for calculating a sticky bit in a floating point
processor as recited in claim 5.In accordance with one embodiment of the invention, a
floating point processor must recognize the fact that
floating point units cannot always generate infinitely
precise results, as they are constrained by implementation
size to a certain degree of precision. Any result

</DESCRIPTION>
<CLAIMS>
A method of calculating a sticky bit in a floating point
processor, comprising the steps of:


dividing an input value (F) into M groups of bits;
providing a shift by an amount of S bits where all bits of S are zero
except a one for the position representing a number of bits said input

value has to be shifted;
dividing (21a-21h) said amount S into M groups, each being called an S-vector,
corresponding to said M groups of bits of said divided input value;
making a first determination (1-DETECTORS) for each of said S-vectors
whether or not a "1" appears therein to produce a group one-detect

signal associated with a respective one of said M groups of bits;
making a second determination (22a - 22h) for each group of said
M groups of bits, if there is a "1" in the group of bits to the right of a bit

corresponding to the bit position containing a "1" in the S-vector
associated with that said group;

   characterized by

generating (26a - 26d) for each of the M-x high-order ones of said
M groups of bits, a group enable signal (26a - 26d) determined by

whether the group one detect signal appears in the S vector associated with that
group or in any S-vector associated with a group of said M-x high-order groups of bits above

that group ;
generating for each of the x low-order ones of said M groups of bits

(20e - 20h), a group enable signal (26e - 26h) determined by whether said
group one-detect signal is not present in any low-order group of bits to

the right of that group;
for each of the M groups of bits, generating (27, 31) a respective
group sticky bit signal based on the results of said second determination

(23) for that group of bits, in conjunction with the existence of a group
enable signal (26) for that group of bits; and  
generating (29, 32, 34) an overall sticky bit indication (35) from all of
said group sticky bit signals.
A method according to claim 1 wherein said input value is
divisible by two.
A method according to claim 2 wherein said high-order ones
of said M groups of bits (20a - 20d) and said low-order ones of said M

groups of bits (20e - 20h) are equal in number.
A method according to claim 1 wherein said steps of
generating are performed simultaneously.
A circuit for calculating a sticky bit in a floating point
processor, comprising:


means (20a - 20h) for dividing an input value into M groups of bits;
means for providing a shift amount S bits where all bits of S are zero
except a "1" at the position representing a number of bits said input value

has been shifted;
means for dividing (21a-21h) said amount S into M groups, each being called an
S-vector, corresponding to said M groups of bits of said divided input value;
detector means (1-DETECTORS) for making a first determination for
each of said S-vectors whether or not a "1" appears therein to produce a

group one-detect signal for said M group of bits associated with that S-vector;
comparison means (14) for making a second determination (22a -
22h) for each group of said M groups of bits, if there is a "1" in the group of

bits to the right of a bit corresponding to the bit position containing a "1"
in the S-vector associated with that said group; characterized by 
first means receiving inputs from said detector means (1-DETECTORS)
for generating for each of the 
M-x
 high-order ones of said M
groups of bits, a group enable signal (26a - 26d) determined by whether

the group one detect signal appears in the S-vector associated with that group or in
any S-vector associated with a group of said M-x high-order groups of bits above that group;
second means receiving inputs from said detector means (1-DETECTORS)
for generating for each of the 
x
 low-order ones of said M
groups of bits (20e - 20h), a group enable signal (26e - 26h) determined

by whether said group one-detect signal is not present in any low-order
group of bits to the right of that group;
for each of the M groups of bits, logic circuitry (27, 31) coupled to
receive inputs from said first means, from said second means, and from

said comparison means (14) for generating a respective corrected sticky
bit signal (28a -28d; 30a - 30b) for each of said M groups of bits; and
output logic circuitry (29, 32, 34) for generating an overall sticky bit
indication (35) from all of said corrected sticky bit signals.
A circuit according to claim 5 wherein said input value is
divisible by two.
A circuit according to claim 6 wherein said high-order ones
of said 
M-x
 groups of bits and said low-order ones of said 
x
 groups of bits
are equal in number.
A circuit according to claim 5 wherein said first and second
means are operable to generate said group enable signals

simultaneously.
</CLAIMS>
</TEXT>
</DOC>
