<DOC>
<DOCNO>EP-0629068</DOCNO> 
<TEXT>
<INVENTION-TITLE>
4B6B coding scheme
</INVENTION-TITLE>
<CLASSIFICATIONS>H03M714	H04L124	H03M1300	H03M1300	H04J306	H04B1000	H04L704	H04L2549	H04L704	H04L100	H04B1000	H04L2549	H03M714	H04L124	H04L100	H04J306	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H03M	H04L	H03M	H03M	H04J	H04B	H04L	H04L	H04L	H04L	H04B	H04L	H03M	H04L	H04L	H04J	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H03M7	H04L1	H03M13	H03M13	H04J3	H04B10	H04L7	H04L25	H04L7	H04L1	H04B10	H04L25	H03M7	H04L1	H04L1	H04J3	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
An encoding scheme relies on a d.c. balanced code wherein each 
message to be transmitted is sent as a plurality of symbols, 

each symbol having six bits, three ones and three zeros. Out 
of the twenty combinations of balanced six-bit codes, two 

codes are reserved to operate as control tokens, being 010101 
and 101010. Because of the particular format of the symbols, 

control tokens can be easily detected. Furthermore, they can 
be combined in longer bit sequences for use as initialisation 

and disconnect sequences. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
SGS THOMSON MICROELECTRONICS
</APPLICANT-NAME>
<APPLICANT-NAME>
STMICROELECTRONICS LIMITED
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
WALKER CHRISTOPHER PAUL HULME
</INVENTOR-NAME>
<INVENTOR-NAME>
WALKER, CHRISTOPHER PAUL HULME
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to method and apparatus for
encoding digital data, particularly for transmission using
optical fibre links or a.c. coupled copper cable. The
invention is concerned particularly with providing an encoding
scheme suitable for the transmission of messages made up of
short packets.The invention is particularly concerned with transmitting
messages between computers connected by a transmission link
with each computer having a link interface for receiving
messages from the computer, encoding them and transmitting the
encoded data. The link interface is also arranged to receive
encoded data, decode it and provide messages to the computer.Messages are generally generated as a plurality of packets.
Each packet can include a header or address portion which will
comprise one or more data tokens, a data portion comprising
one or more data tokens and a terminator token as an end of
packet indicator. Where the packet is the last packet in a
message, the end of packet indicator is replaced by an end of
message indicator. Some packets contain no data portion.Each data token comprises a flag bit, a parity bit and 8 bits
of data. Each terminator token comprises a flag bit, a parity
bit and two control bits.The present invention uses a code for encoding data tokens and
terminator tokens into symbols for transmission which are d.c.
balanced, that is within each symbol there is an equal number
of ones and zeros. D.c. balanced codes serve to minimise the
bandwidth for transmission of encoded data. Reference is made
to EP-0066512 which discloses a d.c. balanced code where each
symbol has twenty bits, and which is intended to be balanced
over a transmission. Reference is also made to IBM Technical
Disclosure Bulletin, Vol. 22, No. 8b, January 1980 pages 3547 
to 3550 which discloses a d.c. balanced code wherein each symbol
comprises six bits, three ones and three zeros. EP 0143268
describes a time division multiplex signal containing 5B/6B coded
signals. US 5,014,272 describes a frame synchronizer for detecting
misframes with different shift patterns. Also, reference is made
to IEEE Journal on Selected Areas in Communications, Vol. 1, No. 7,
September 1989, pages 1043 to 1051 which describes the Fibre
Distributed Data Interface (FDDI) where the encoding scheme uses a
four out of five group and two 5-bit symbols are selected as
control indicators, i.e. 00111 and 11001.A 3-of-6 code has particular advantages. Firstly, each symbol is
short, consisting only of six bits and is balanced within itself
(i.e
</DESCRIPTION>
<CLAIMS>
A method of generating control tokens in a message
transmission system wherein each message includes at least one data

token comprising a plurality of four bit values and at least one
terminator token in a first format (TD0-3, TD4-7), the method

comprising, encoding each four bit value into a second format (SO-5,
S6-11) as a six bit symbol having three ones and three zeros,

each symbol being selected out of a set of sixteen symbols assigned
exclusively as data symbols and 
characterised by
:

excluding from the set of data symbols the symbols 010101 and
101010 and selecting the symbols 010101 and 101010 as control

symbols; and
generating control tokens in the second format using the
selected control symbols 010101 and 101010, wherein each control

token comprises at least two symbols and when said symbols are both
control symbols, said control token starts with the control symbol

010101 or 101010 depending on the value of the last bit of the
preceding symbol.
A method according to claim 1 wherein a first type (CONTROL)
of the control symbols is allocated so that its first bit matches

the last bit of a preceding symbol and a second type (CONTROL*) of
the control symbols is allocated so that its first bit is the

logical inverse of the last bit of a preceding symbol, the method
comprising:


combining the first (CONTROL) and second types (CONTROL*) of
control symbols to produce a plurality of different control tokens.
A method according to claim 2 wherein at least some control
tokens commence with a control symbol of the first type (CONTROL). 
A method according to claim 2 or 3 wherein each message
comprises at least one packet in the first format (TD0-3, TD4-7),

each packet including at least one data token and a terminator
token in the form of an end of packet control token (EOP), and

wherein the end of packet control token comprises in the second
format a control symbol of the first type (CONTROL) followed by a

data symbol (DATA[CHECKSUM]).
A method according to claim 2 or 3 wherein each message
includes as a terminator token an end of message control token

(EOM) which in the second format (S0-5, S6-11) comprises a data
symbol (DATA[CHECKSUM]
) followed by a control symbol of the first
type (CONTROL).
A method according to claim 2 or 3 wherein a flow control
token (FCT) for controlling the quantity of data symbols

transmitted between two devices comprises in the second format a
control symbol of the first type (CONTROL) followed by another

control symbol of the first type (CONTROL).
A method according to claim 2 or 3 wherein an idle token
(IDLE) for transmission when there are no data symbols to be

transmitted comprises in the second format a control symbol of the
first type (CONTROL) followed by a control symbol of the second

type (CONTROL*).
A method according to claim 2 or 3 wherein an initialise token
(INITIALISE) comprises in the second format a control symbol of the

first type (CONTROL) followed by three control symbols of the
second type (CONTROL*) in succession thereby to provide a sequence

of 24 alternating bits. 
Data transmission circuitry comprising input means (81) for
receiving messages in a first format (TD0-7) including data tokens

represented by four bit values and terminator tokens and encoding
circuitry (101,102) for encoding each four bit value (41) as a six

bit symbol (141,142) having three ones and three zeros, each symbol
being selected out of a set of sixteen symbols uniquely assigned as

data symbols 
characterised by
:

excluding from the set of data symbols the symbols 010101 and
101010 and using selection circuitry (112) for selecting the

symbols 010101 and 101010 as control symbols;
generation means (109) for generating control tokens using the
selected symbols 010101 and 101010, wherein each control token

comprises at least two symbols and when said symbols are both
control symbols, said control token starts with the control symbol

010101 or 101010 depending on the value of the last bit of the
preceding symbol; and
output means for transmitting the encoded data symbols and
generated control tokens.
Data transmission circuitry according to claim 9 wherein the
input means (81) comprises a buffer (107,108) arranged to receive

bits of an incoming token in parallel, the encoding means (101,102)
providing for each incoming token two six bit symbols (S0-5, S6-11)

and outputting the bits of these symbols in parallel (141,142) and
the output means comprising a parallel to serial converter (22) for

transmitting the bits of the encoded symbols serially.
Data transmission circuitry according to claim 10 in which the
output means includes circuitry capable of outputting selectively

one of two terminator tokens, a first terminator token (EOP) being 
a control symbol followed by a data symbol and a second terminator taken

(EOM) being a data symbol followed by a control symbol.
An interface comprising data transmission circuitry according
to claim 9, 10 or 11 and data receiving circuitry including a

converter and clock recovery circuit (23) comprising:

a clock generator connected to receive an incoming stream of
bits (14) and to generate therefrom a bit clock (179) having a

clock edge defining each bit position in the bit stream;
a counter (174) arranged to receive the incoming bit stream
(14) and the bit clock (179) and to count the number of successive

transitions in the incoming bit stream and to provide a first
output signal (180) when the count is twelve;
a clock divider (172) for dividing the bit clock by twelve to
produce a second output signal (62) every twelfth clock edge; and
phase detecting means (175) for comparing said first (180) and
second (62) output signals and for providing an error signal (61)

when they are out of phase.
</CLAIMS>
</TEXT>
</DOC>
