<DOC>
<DOCNO>EP-0618709</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Memory manager for a multichannel network interface.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1300	G06F1300	G06F1516	G06F1516	H04L2906	H04L2906	H04L2910	H04L2910	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	H04L	H04L	H04L	H04L	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F13	G06F13	G06F15	G06F15	H04L29	H04L29	H04L29	H04L29	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A processor-based packet memory interface for controlling the transfer of data
between multiple communications channels and packet memory in a communications

adapter is presented, where the communications adapter uses
requestor IDs to identify transmit and receive processes. The processor-based

packet memory interface is controlled by a microprocessor configured to perform
read and write operations with the communications adapter. The

microprocessor is further configured to reserve a plurality of blocks of memory
in the packet memory so that the number of communications channels that can

be supported is not limited to the number of requestor ID's that can be handled
by the communications adapter. The processor-based packet memory

interface also includes RAM, for use by the microprocessor, to store pointers
to reserved blocks of memory in the packet memory and to temporarily store

packet data for transfer between the communications channels and the communications
adapter.


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
DAVIS GORDON TAYLOR
</INVENTOR-NAME>
<INVENTOR-NAME>
DONAGHY DONALD JOSEPH
</INVENTOR-NAME>
<INVENTOR-NAME>
MARKS LAURENCE VICTOR
</INVENTOR-NAME>
<INVENTOR-NAME>
PURRINGTON CHALLIS LLEWELLYN
</INVENTOR-NAME>
<INVENTOR-NAME>
DAVIS, GORDON TAYLOR
</INVENTOR-NAME>
<INVENTOR-NAME>
DONAGHY, DONALD JOSEPH
</INVENTOR-NAME>
<INVENTOR-NAME>
MARKS, LAURENCE VICTOR
</INVENTOR-NAME>
<INVENTOR-NAME>
PURRINGTON, CHALLIS LLEWELLYN
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to communications adapters. More 
particularly, the present invention is directed to a packet memory interface for 
a communications adapter, and still more particularly to a processor-based 
packet memory interface. Computer systems in contemporary computing environments are often interconnected 
using local area networks (LANs) and wide area networks (WANs) 
to allow computer-to-computer and processor-to-processor communications. 
In many environments, this networking concept is extended so that multiple 
LANs are networked together through the use of intermediate nodes or gateways. 
Thus, an integrated network may be a homogeneous network or may 
comprise several different types of networks interconnected through gateways 
or interconnected through a high bandwidth backbone network. Devices on the network may range from simple devices such as printers, modems 
and terminals to intelligent devices such as processors, workstations, 
mainframe hosts, and network controllers. With the exchange of massive 
amounts of information that takes place among these networked devices the 
communications networks are designed to carry a wide spectrum of traffic. 
This traffic ranges from time- critical urgent traffic and bandwidth-critical 
synchronous traffic, to less time-critical asynchronous background traffic. The traffic flowing in these networks is carried in the form of data stream 
segments called "packets." When a network device wishes to transmit information 
over the network, it sends the information in packets. Each packet 
generally comprises two types of information: communications-related (control) 
information and data. The data information is simply the actual data 
that one device wishes to send to another device (or devices) over the network. 
The control information is the information required by the communications  
 
protocol to send the packet over the network from one device to another. 
Control information is usually in a separate part of the packet called a 
"header." Control information in the header is interpreted by a communications 
protocol processor before the packet is passed on to the receiving application. 
Control information can include information such as source IDs, 
destination IDs, routing information, error control information, and the like. Through the use of control information to manage the routing of the packet 
from its source to a specified destination, multiple unique communication 
paths can be defined on a single integrated
</DESCRIPTION>
<CLAIMS>
A communications adapter capable of receiving packets 
of data from at least one of a plurality of 

communications channels, storing said received 
packets, and transferring said received packets to at 

least one of a plurality of communications channels, 
said communications adapter using one or more requestor 

identifications (IDs), 
wherein each requestor ID is a unique reference 

number identifying a transmit or receive process, 
said communications adapter comprising: 

   a packet memory, configured to store packets of 
data received from said plurality of communications 

channels; 
   an adapter manager, coupled to said packet 

memory, configured to manage operations of the 
communications adapter; 

   an adapter bus, coupled to said adapter manager, 
configured to transfer data to and from said packet 

memory; and said communications adapter characterized 
in that it comprises: 

   a processor-based packet memory interface (114), 
coupled to said adapter bus, configured to reserve 

packet memory for received packets, and to coordinate 
reception of packets from the communications channels 

and transmission of packets to the communications 
channels in such a manner that the number of 

communications channels is not limited to a number 
that can be supported by said adapter manager without 

said processor-based packet memory interface. 
The communications adapter of claim 1, wherein said 
processor-based packet memory interface is characterized 

 
in that it comprises: 

   a processor (204), configured to perform read and write 
operations with the communications adapter and further 

configured to reserve at least one block of memory in 
the packet memory and to reserve said at least one 

block of memory so that the number of communications 
channels is not limited to a number of requestor IDs 

that can be 
handled by the communications adapter without said 

processor-based packet memory interface; and 
   a processor RAM (208), coupled to said processor, 

configured to store at least one pointer to said at 
least one block of memory in the packet memory and to 

temporarily store packet data for transfer between the 
communications channels and the communications 

adapter. 
The processor-based packet memory interface of claim 
2, characterized in that it comprises control logic 

means (206), coupled to said 
processor, for requesting access to a bus (122) within 

the communications adapter. 
The processor-based packet memory interface of claim 1 or 
2 characterized in that it comprises a bus (222) 

coupled to said 
processor, for transferring data and a pointer between 

said processor and the communications adapter. 
The processor-based packet memory interface of claim 
4 characterized in that it comprises an 

interface logic (202), coupled to 
said bus, configured to interface said bus to the 

communications adapter. 
The processor-based packet memory interface of claim 
5, characterized in that it comprises a 

control logic (206), coupled to said 
interface logic, configured to control said interface 

logic and for requesting access to a bus in the 
communications adapter. 
A method for interfacing a plurality of communications 
channels to a communications adapter having packet 

memory and an adapter bus an adapter manager 
and using one or more 

requestor identifications (IDs), 
wherein each requestor ID is a unique 

reference number identifying a transmit or receive 
process, said method characterized in that it comprises 

the following steps: 

(a) receiving packet data from a plurality of 
communications channels; 
(b) storing received packet data in the packet 
memory and controlling the allocation of 

packet memory such that packet data can be 
received on a greater number of 

communications channels than can be 
designated by the communications adapter 

using the requestor IDs; 
(c) transferring packet data from the packet 
memory to a designated communications 

channel; and 
(d) using a buffer pointer to manage the 
transfer of packet data such that the packet 

data can be transferred to at least one of 
a plurality of available communications 

 
channels where the number of available 

communications channels is greater than 
could otherwise be supported by the 

communications adapter requestor IDs. 
The method of claim 7, wherein said step (b) characterized 
in that it comprises the steps of: 


(i) reserving a block of memory in the 
packet memory; 
(ii) receiving and storing a buffer pointer 
from the communications adapter, 

wherein said pointer points to said at 
least one block of memory reserved in 

said step (i); and 
(iii) reserving said reserved block of 
packet memory such that an 

associated requestor ID is 
available for use by the 

communications adapter to 
identify an alternative block of 

packet memory. 
The method of claim 8, characterized in that it comprises 
the step of 

repeating said steps (i) through (iii) as necessary to 
reserve at least two blocks of memory for each 

communications channel. 
The method of claim 8, characterized in that it comprises 
the steps of: 


(iv) storing received packet data in a RAM; 
(v) reading said buffer pointer received 
in said step (ii) to determine where 

 
in said packet memory said received 

packet data is to be stored; 
(vi) storing said packet data in said 
packet memory at the location 

determined in said step (v); and 
(vii) enqueuing said stored packet. 
The method of claim 10 characterized in that it comprises 
the steps of determining whether there are multiple buffers 

designated in said packet memory for storing said 
received packet data and if so, modifying a buffer 

table entry so said received packet data is stored in 
appropriate buffers. 
The method of claim 7, wherein said steps (c) and (d) 
are characterized in that they comprise the steps of: 


(i) reading a buffer pointer in a transmit 
channel queue; 
(ii) reading packet data out of packet memory and 
storing said packet data in a RAM; and 
(iii) transmitting said packet data across a 
designated communications channel. 
The method of claim 12, characterized in that it 
comprises the steps of: 


(iv) identifying a next buffer used to store 
additional packet data for a packet to which 

said packet data being read belongs; 
(v) retrieving said additional packet data from 
said next buffer; and 
(vi) storing said additional packet data 
retrieved in said step (v) in said RAM. 
The method of claim 7, wherein said steps (c) and (d) 
 

are characterized in that they comprise the steps of: 

(i) receiving a transfer request from the 
communications adapter to transfer packet 

data; 
(ii) determining which one of a plurality of 
communications channels is to be used to 

transfer said packet data; 
(iv) storing a buffer pointer associated with 
said packet data in a channel FIFO for said 

one of a plurality of communications 
channels; 
(v) using said buffer pointer to locate a buffer 
containing said packet data; and 
(vi) transferring said packet data across said 
one of a plurality of communications 

channels. 
The method of claim 7, wherein said steps (c) and (d) 
are characterized in that they comprise the steps of: 


(i) reading said buffer pointer in a transmit 
channel queue in a RAM to locate a packet to 

be transmitted; 
(ii) reading data for said packet to be 
transmitted out of a packet memory location 

pointed to by said buffer pointer and 
storing said read data in a RAM; 
(iii)transmitting said read data across the 
communications channel. 
The method of claim 15, 
characterized in that it comprises the steps of: 


(iv) using a buffer table entry to determine a 
next buffer used to store additional data 

 
for said packet to be transmitted; 
(v) reading data from said next buffer and 
storing said additional data in the RAM. 
</CLAIMS>
</TEXT>
</DOC>
