<DOC>
<DOCNO>EP-0627688</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Provision of accurate and complete communication between different bus architectures
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1340	G06F1328	G06F1336	G06F1320	G06F1340	G06F1336	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F13	G06F13	G06F13	G06F13	G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The present invention provides hardware logic within a host bridge 
20 that connects a CPU local bus 36 to a peripheral bus 22 that 

determines if data to be transmitted on the CPU local bus is non-contiguous 
and, if so, substitutes contiguous data for the non-contiguous 

data to ensure that the CPU local bus does not malfunction.
 

Simultaneously, the inventive hardware translates data transfers between 
a peripheral bus that is limited by its architecture to data strings of a 

standard length and a CPU local bus that permits dynamic bus sizing. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
SANTOS GREGORY NORMAN
</INVENTOR-NAME>
<INVENTOR-NAME>
SANTOS, GREGORY NORMAN
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to information handling
systems and more specifically to a method and apparatus for ensuring that
data communications between components and peripheral devices connected
to two different bus architectures in an information handling system are
complete and accurate when the communications are from a device or
component adapted to one bus architecture to a device or component
adapted to a different bus architecture.Referring generally to information handling systems, they normally
have as their main component a central processing unit (CPU), which
directs all communications in the system and orchestrates all commands to
be executed by the information handling system. Information handling
systems also usually have a network, or networks, of physical connection
devices called buses. These networks connect the CPU to any number of
peripheral devices and components so that the CPU can communicate with
the peripheral devices and components.One type of bus that is used in information handling systems is a
CPU local bus. Also referred to as a system bus, the CPU local bus is
specially designed for connecting the CPU directly to key components of
the information handling system, such as the system memory and memory
controller. A CPU local bus is a high performance bus, meaning that it
executes data transfers between the CPU and the other components
connected to the bus at a high rate of speed and can handle a multitude
of data transfers simultaneously. Another type of bus found in an
information handling system is a peripheral bus. Peripheral buses are
designed to connect peripheral devices, such as input/output devices
(I/O) and graphics packages, to the information handling system.
Peripheral buses are normally connected to the CPU and the rest of the
central components of the information handling system through a host
bridge that connects the peripheral bus to a CPU local bus. Each type of bus has a different set of standard protocols or rules
that it uses to conduct the data transfers between the different devices
and components connected to it. These protocols are designed into the
bus and are called the "architecture" of the bus. Various protocols that
may comprise a type of bus architecture are the bit-length of the data
strings recognized by the bus, whether different signals are enabled when
they are either low or high, whether data on the bus is multiplexed on
one line or transmitted in parallel on several lines, or whether certain
types of data are unacceptable
</DESCRIPTION>
<CLAIMS>
A host bridge (20) for connecting a system bus (36) to a peripheral
bus (22) in an information handling system (10) comprising:


a detector for determining whether a data string to be transferred
from said system bus to said peripheral bus, or from said peripheral bus

to said system bus, is non-contiguous;
a logic network for converting said data string to a plurality of
contiguous data strings and transmitting said contiguous data strings on

said system bus during a consecutive cycles of the system bus; and
a generator for deriving the enable signals for each of said
plurality of contiguous data strings based upon the bit-size of a

component of said information handling system that is a slave in the
transfer of said data string.
A host bridge (20) as claimed in claim 1, wherein said logic
network is hardware within said host bridge (20).
A host bridge (20) as claimed in claim 1 wherein said logic network
includes a first logic path for converting said data string to said

plurality of contiguous data strings during a write transfer and a second
logic path for converting said data string to said plurality of

contiguous data strings during a read transfer.
A host bridge (20) as claimed in claim 3 wherein said logic network

includes at least one multiplexor for selecting said first logic path or
said second logic path.
A host bridge (20) as claimed in claim 4 wherein said enable
signals are manipulated by said first logic path during a write transfer

and said second logic path during a read transfer to derive said
plurality of contiguous data strings.
A host bridge (20) as claimed in claim 1, wherein said peripheral
buses are PCI buses.
A host bridge (20) as claimed in claim 1, wherein said peripheral
buses are multiplexed buses.
A host bridge (20) as claimed in claim 1 wherein a peripheral
device connected to said peripheral bus initiates said transmission of 

said data string on said system bus.
A host bridge (20) as claimed in claim 1 wherein each of said
plurality of said contiguous data strings is transmitted on said system

bus in succession with a one-to-one correspondence between said
contiguous data strings and bus cycles on said system bus.
An information handling system (10), comprising:

a central processing unit (24);
a system bus (36) connected to said central processing unit;
a peripheral bus (22) for connecting peripheral devices (18)
thereto; and
a host bridge (20) as claimed in any preceding claim.
A method of transferring non-contiguous data between a peripheral
device (18) connected to a peripheral bus (22) and a component connected

to a system bus (36) in an information handling system (10) comprising
the steps of:


providing a central processing unit (24);
providing a system bus (36) connected to said central processing
unit;
providing a peripheral bus (22) for connecting peripheral devices
thereto;
connecting said system bus to said peripheral bus;
detecting whether a data string to be transmitted on said system
bus is non-contiguous;
converting said data string to a plurality of contiguous data
strings if said data is non-contiguous; and;
transmitting each of said plurality of said contiguous data strings
on said system bus.
A method as claimed in claim 11, including the additional step of
generating an enable signal for each of said contiguous data strings

based upon the bit-size of a slave connected to the system bus that
transmits or receives said contiguous data strings.
A method as claimed in claim 11 wherein said peripheral buses are
PCI buses.
A method as claimed in claim 11, wherein said peripheral buses are
multiplexed buses.
</CLAIMS>
</TEXT>
</DOC>
