<DOC>
<DOCNO>EP-0619659</DOCNO> 
<TEXT>
<INVENTION-TITLE>
A SHRINKING GENERATOR FOR CRYPTOSYSTEMS.
</INVENTION-TITLE>
<CLASSIFICATIONS>G09C100	G09C100	H04L918	H04L922	H04L924	H04L926	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G09C	G09C	H04L	H04L	H04L	H04L	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G09C1	G09C1	H04L9	H04L9	H04L9	H04L9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method and apparatus for encrypting a message stream of 
data where a first and second stream of random data are 

generated with the two streams being independent of each 
other. A third stream is then generated from the first 

stream by selecting bits from the first stream only if the 
corresponding bit in the second stream is in a selected 

state. Finally, the third stream is then exclusive-OR-ed 
with the message stream to be encrypted to produce an 

encrypted stream of data. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
COPPERSMITH DON
</INVENTOR-NAME>
<INVENTOR-NAME>
HERZBERG AMIR
</INVENTOR-NAME>
<INVENTOR-NAME>
KRAWCZYK HUGO MARIO
</INVENTOR-NAME>
<INVENTOR-NAME>
KUTTEN SHAY
</INVENTOR-NAME>
<INVENTOR-NAME>
MANSOUR YISHAY
</INVENTOR-NAME>
<INVENTOR-NAME>
COPPERSMITH, DON
</INVENTOR-NAME>
<INVENTOR-NAME>
HERZBERG, AMIR
</INVENTOR-NAME>
<INVENTOR-NAME>
KRAWCZYK, HUGO MARIO
</INVENTOR-NAME>
<INVENTOR-NAME>
KUTTEN, SHAY
</INVENTOR-NAME>
<INVENTOR-NAME>
MANSOUR, YISHAY
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates to cryptosystems for providing 
secure data transmission. More specifically, two independent 
random bit streams are used to generate a third 
stream, which is used to encipher data. Stream cipher cryptosystems are one of the most commonly 
used methods of encryption, specially suitable for on-line 
encryption of data transmitted at high speeds. Such a 
cryptosystem consists of a device called the pseudo random 
generator (or pad generator), which generates a sequence of 
bits out of an initial input. The generated sequence is 
called the pad, and the initial input the seed. Given a 
message M, a pad P of same length as M is generated, and 
then, each bit of M is encrypted by XOR-ing it with a corresponding 
bit of P. In other words, if M₀, M₁, ..., Mk are 
the message bits and P₀, P₁, ..., Pk the pad bits, then the 
cipher text consists of the bits M₀⊕P₀, M₁⊕P₁, ..., Mk⊕Pk, 
where ⊕ denotes the XOR (or exclusive-or) bit operation. 
Decryption is the very same operation. Given the cipher 
text, the plain text is recovered by XOR-ing the cipher 
text with the same pad bits that are used for the 
encryption. In order to use the same pad bits, the encryptor and 
decryptor share the initial seed used to generate the pad. 
They also have identical generators and thus can generate 
the same pad. Therefore, the heart of the system is the 
pad generator, and the cryptographic strength of the 
cryptosystem depends on the quality of the pad bits.  If the pad were truly random rather than generated by a 
pseudorandom generator, the encryption as described above 
would be perfect (i.e., leaked no information on the 
encrypted message). Thus, a good generator is one that 
generates pads that "look" random. Hence, it is called a 
pseudorandom generator. The basic pseudorandom property 
required from the pad sequence for encryption is that the 
sequence be unpredictable. This means that an adversary 
having access to a portion of the pad cannot reconstruct by 
himself other unknown portions of the pad. A shift register is a register that can repeatedly perform 
the following operation: input a bit to be its less significant 
bit, output its most significant bit, and shift every 
other bit to the next most significant location. In a 
Linear Feedback Shift Register (LFSR) the new input bit is 
the result of a XOR operation of the bits in some locations 
in the shift register. The register connections are the 
locations of the bits in the LFSR selected to be XOR-ed. 
For preventing construction of
</DESCRIPTION>
<CLAIMS>
A method of encrypting a message stream of data, 
comprising the steps of: 


a. generating a first and second stream of random 
data with said second stream of data being independent 

of said first stream of data; 
b. generating a third stream of random data by 
selecting bits from said first stream of data, each 

bit of said first stream being selected for said 
third stream only if a corresponding bit in said 

second stream of data is in a selected state; and 
c. exclusive-OR-ing each bit of said message 
stream of data with a corresponding bit of said 

third stream to produce an encrypted stream of 
data. 
A method of encrypting a message stream of data, 
comprising the steps of: 


a. generating a first and second stream of random 
data with said second stream of data being independent 

of said first stream of data; 
b. generating a third stream of random data by 
selecting bits from said first stream of data, 

wherein each bit in a given sequential order in 
said first stream is selected for said third stream 

only if a bit in said given sequential order of 
said second stream is in a particular state; and 
c. exclusive-OR-ing each bit of said message 
stream of data with a corresponding bit of said 

third stream to produce an encrypted stream of 
data. 
An apparatus for encrypting a message stream of data, 
comprising: 


a. means for generating a first and second stream of 
random data with said second stream of data being 

independent of said first stream of data; 
b. means for generating a third stream of random 
data where bits are selected from said first stream 

of data only if a corresponding bit in said second 
stream of data is in a selected state; and 
c. a logic circuit for exclusive-OR-ing each bit 
of said message stream of data with a corresponding 

bit of said third stream to produce an encrypted 
stream of data. 
An apparatus as recited in claim 3, wherein said 
means for generating said first and said second stream 

of data comprises a pair of linear feedback shift registers, 
each of said linear feedback shift registers 

having a control register and a shift register, with 
the control register selecting bits from said shift 

register for generation of feedback bits, with the 
output of said linear feedback shift registers being 

said first and said second streams of random data. 
An apparatus as recited in claim 3 or 4, wherein said 
means for generating said third stream of data comprises 

a logic circuit for selecting which bits from 
said first stream are included in said third stream. 
An apparatus for generating a highly random stream 
of data, comprising: 

   means for generating a first and second stream of 
random data with said second stream of data being 

independent of said first stream of data; and
 

   means for generating a third stream of data, with 
each bit of said first steam being selected for said 

third stream only if a corresponding bit in said 
second stream of data is in a selected state, where 

said third stream of data is a highly random stream 
of data. 
A method of generating a highly random stream of 
data, comprising: 

   generating a first and second stream of random data 
with said second stream of data being independent of 

said first stream of data; and 
   generating a third stream of data, with each bit of 

said first stream being selected for said third 
stream only if a corresponding bit in said second 

stream of data is in a selected state, where said 
third stream of data is a highly random stream of 

data. 
</CLAIMS>
</TEXT>
</DOC>
