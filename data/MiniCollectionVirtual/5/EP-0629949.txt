<DOC>
<DOCNO>EP-0629949</DOCNO> 
<TEXT>
<INVENTION-TITLE>
System and method of recovering from process failure in a write lock control system.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1100	G06F1100	G06F1114	G06F1114	G06F1200	G06F1200	G06F1300	G06F1300	G06F1516	G06F1516	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F11	G06F11	G06F11	G06F11	G06F12	G06F12	G06F13	G06F13	G06F15	G06F15	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Recovering from failure of a distributed processing 
system process designated as a master process for at least one 

shared resource. The method and system of the invention 
provides for detection of the failure (200) by one or more of 

the shadow processes. The detecting process tests (202) to 
determine whether it has the shared write lock managed by the 

master process. If it does, it becomes the master process 
(204). If not, it determines from the shared control file 

which process holds the write lock (206) and it communicates 
to that process a request (208) to assume master process 

responsibilities. That process attempts to establish itself 
as master process (210). A test is performed (212) to 

determine if a new master process has been designated. If 
not, a race is conducted (214) between all shadow processes. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
FORMAN IRA RICHARD
</INVENTOR-NAME>
<INVENTOR-NAME>
MADDURI HARI HARANATH
</INVENTOR-NAME>
<INVENTOR-NAME>
FORMAN, IRA RICHARD
</INVENTOR-NAME>
<INVENTOR-NAME>
MADDURI, HARI HARANATH
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to the operation of 
distributed processing computer systems. In particular it 
relates to those systems that have a plurality of processing 
nodes each one having access to a copy of at least one 
replicated data object and which require apparatus and methods 
for managing access to the replicated data object. Still more 
particularly, the present invention relates to the management 
of a write lock that grants permission to one of a number of 
distributed processes allowing that process to update a data 
item. Distributed computer systems are created by linking a 
number of computer systems using a communications network. 
Distributed systems frequently have the ability to share data 
resident on a single system. Replicated data systems 
implement data sharing by providing a replica copy of a data 
object to each process using that data object. Replication 
reduces the access time for each processor by eliminating the 
need to send messages over the network to retrieve and supply 
the necessary data. A replicated object is a logical unit of 
data existing in one of the computer systems but physically 
replicated to multiple distributed computer systems. 
Replicated copies are typically maintained in the memories of 
the distributed systems. Replicated data objects also speed the update process by 
allowing immediate local update of a data object. Replication 
introduces a control problem, however, because many copies of 
the data object exist. The distributed system must have some 
means for controlling data update to ensure that all copies of 
the data remain consistent. Prior art systems control data consistency by 
establishing a master data object copy in one of the 
distributed systems. The master copy is always assumed to be 
valid. Data object update by a system other than that of the 
master copy requires sending of the update to the master for  
 
update and propagation to all replicas.
 
This approach has the disadvantage of slowing local response 
time as the master data object update and propagation are 
performed. Another means for controlling replicated data is 
described U.S. Patent Application Moving Write Lock for 
Replicated Objects, commonly assigned, filed on October 16, 
1992 as Serial Number 07/961,757. The apparatus and method of 
that invention require that a single "write lock" exist in a 
distributed system and be passed to each process on request. 
Data object updates can only be performed by the holder of the 
"write lock." The "write lock"
</DESCRIPTION>
<CLAIMS>
A method of recovering from process failure in a computer 
system having at least one computer processor with memory, 

where each data object of a plurality of data objects is 

replicated in a plurality of address spaces, wherein one of 
said processes is designated a master process for said data 

object and all other processes seeking access designated as 
shadow processes, and wherein said master process controls 

sharing of a write lock to permit at most one process to 
update said replicated data, the method comprising the steps 

of: 
   receiving (200) in at least one of said shadow processors 

an indicia of failure of said master process; 
   testing (202) to determine whether said one of said 

shadow processes currently holds said write lock; 
   transferring (204) master process control to said one of 

said shadow processes if said process currently holds said 
write lock; 

   testing (206) to determine which of said shadow processes 
hold the write lock if said receiving one of said shadow 

processes does not; 
   requesting (208) said shadow process holding said write 

lock to establish itself as the master process. 
The method according to Claim 1, further comprising the 
steps of: 

   determining (212) whether a new master process has been 
designated; 

   conducting (214) a race between the shadow processes if 
the new master process has not been designated. 
A computer system having at least one computer process with 
memory, where each data object of a plurality of data objects 

is replicated in a plurality of address spaces, wherein one of 
said processes is designated a master process for said data 

object and all other processes seeking access designated as 
 

shadow processes, and wherein said master process controls 
sharing of a write lock to permit at most one process to 

update said replicated data, the computer system comprising: 
   means for receiving in at least one of said shadow 

processors an indicia of failure of said master process; 
   means for testing to determine whether said one of said 

shadow processes currently holds said write lock; 
   means for transferring master process control to said one 

of said shadow processes if said process currently holds said 
write lock; 

   means for testing to determine which of said shadow 
processes hold the write lock if said receiving one of said 

shadow processes does not; 
   means for requesting said shadow process holding said 

write lock to establish itself as the master process. 
The computer system according to Claim 3, further 
comprising: 

   means for determining whether a new master process has 
been designated; 

   means for conducting a race between the shadow processes 
if the new master process has not been designated. 
</CLAIMS>
</TEXT>
</DOC>
