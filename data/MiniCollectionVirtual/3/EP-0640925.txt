<DOC>
<DOCNO>EP-0640925</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Data processing system having serial interface
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1338	G06F1338	G06F1320	G06F1324	G06F1300	G06F1300	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F13	G06F13	G06F13	G06F13	G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
In a data processor including a serial interface, the serial interface 
internally includes a transmission end flag formed of a RS flipflop which 

set in response to the starting of the transmission of data of one byte and 
reset in response to completion of the transmission of the data of one byte. 

When the operation is changed from a macroservice processing for a 
serial data transmission to a the vector interrupt processing, a CPU 

watches and discriminates the condition of the transmission end flag in a 
programmed operation of the CPU, thereby detecting a timing where data 

to be transmitted is transferred to a transmission shift register in the serial 
interface. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
NIPPON ELECTRIC CO
</APPLICANT-NAME>
<APPLICANT-NAME>
NEC CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
SAKUMA HAJIME
</INVENTOR-NAME>
<INVENTOR-NAME>
SAKUMA, HAJIME
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to a data processing system such as a
microcomputer, having a serial interface.In conventional data processing system including a microprogram
controlled central processing unit (CPU), an interrupt controller (INTC)
and a serial interface, it is in many cases that a simple input/output
processing such as a serial data sending/receiving is performed by a
macroservice function, not by a programmed processing based on a
vector interrupt. Here, the vector interrupt is that a program counter
(PC) and a program status word (PSW) is automatically saved to a stack
memory and an operation is branched into an interrupt processing routine
so as to execute a predetermined program written by macro-instructions.
On the other hand, the macroservice is that, in response to an interrupt
request, a data transfer is performed, by a hardware, between a special
function register and a memory space. For example, if a macroservice
request is generated, the CPU temporarily stops execution of the
program, and automatically carries out a data transfer of one or two bytes
between the special function register and the memory. When the data 
transfer is completed, the interrupt request flag is reset, and the CPU
resumes the execution of the program. Alternatively, after the data
transfers of the number set in a macroservice counter have been
performed, the vector interrupt request is generated.Differently from other interrupt processings, this macroservice
processing does not activate an interrupt processing program, but
automatically performs a predetermined processing stored in a
microprogram ROM (read only memory). Accordingly, a series of
operations including the branching to the interrupt service routine, the
saving and returning of the registers, the returning from the interrupt
service routine, is not performed. Accordingly, it is possible to elevate
the service time of the CPU and to reduce the number of steps in the
program.Referring to Figure 1, there is shown a block diagram of one
typical example of the conventional data processor having a serial
interface. The shown data processor includes a CPU 1, an interrupt
controller (INTC) 2 and a serial interface 3, which are interconnected
through an internal bus 4.In response to a transmission start signal ST from the CPU 1, data
on the internal bus 4 is set into the serial interface 3, and thereafter, the
data is serially transferred from an output terminal OUT. If the data to
be sent in the serial interface 3 becomes empty, a request signal REQ
</DESCRIPTION>
<CLAIMS>
A data processor comprising a bus (4), a central processing unit (1)
coupled to said bus, an interrupt controller (2) coupled to said bus and

asynchronously generating a processing request to said central processing
unit, and a serial interface (3A) coupled to said bus and for serially outputting

data to an external,

said serial interface being configured to receive data to be
transmitted, from said central processing unit through said bus and to

serially transmit the received data to the external, said serial interface
including a transmission end flag which is brought into a first condition in

response to the starting of the transmission of data of one transmission
unit length and also brought into a second condition different from the first

condition, in response to completion of the transmission of said data of
one transmission unit length,
said interrupt controller being configured to receive a request
signal (REQ) from said serial interface and to output an interrupt request signal (INTREQ)

to said central processing unit, said interrupt controller including a status
flag indicative of whether an operation is in a macroservice processing or

in a vector interrupt processing,
said central processing unit being configured to respond to said
interrupt request signal to execute one of said macroservice processing

and said vector interrupt processing designated by said status flag, said
central processing unit being also configured to change said status flag to

a value indicative of said vector interrupt processing after completion of
said macroservice processing, said central processing unit being also

configured to discriminate the condition of said transmission end flag in
the course of said vector interrupt processing so as to transfer new data to 

said serial interface when the condition of said transmission
end flag indicates the completion of the previous transmission.
A data processor claimed in Claim 1 wherein said serial interface
includes a transmission shift register (31) set with data through said bus from

said central processing unit in response to a transmission start signal from
said central processing unit, said transmission shift register operating to

serially output said data in response to a serial clock, and a transmission
end detection circuit (33) connected to all bits of said transmission shift

register to detect empty of said transmission shift register so as to
generate said request signal, said transmission end flag being put into said

first condition in response to said transmission start signal and put into
said second condition in response to said request signal.
A data processor claimed in Claim 2 wherein said transmission end
flag is formed of a RS flipflop (34) set in response to said transmission start

signal and reset in response to said request signal.
</CLAIMS>
</TEXT>
</DOC>
