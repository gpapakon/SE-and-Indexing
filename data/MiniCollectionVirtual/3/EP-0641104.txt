<DOC>
<DOCNO>EP-0641104</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Local Area Network Transport System
</INVENTION-TITLE>
<CLASSIFICATIONS>H04L2906	H04L2906	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04L	H04L	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04L29	H04L29	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A message transfer arrangement includes a
client node and a server node interconnected by a data

link. The client node sequentially receives requests
from user applications and generates, in response to

each request, command messages for transmission by said
interface, each command message including a command and

having a transmit slot identifier identifying the
request in the sequence of requests received by said

request receiver and a transmit sequence identifier
identifying the command message in the sequence of

command messages relating to the request. The selection
of whether to transmit a command message related to one

request or to a subsequent request is based on a
received slot identifier and a received sequence

identifier in a response message.
The server node receives command messages from,
and transmits response messages to, the client node over

the data link. It selectively executes the command
contained in each command message and generates, in

response thereto, a response message including a
response slot identifier and response sequence

identifier corresponding to the command slot identifier
and command sequence identifier. The determination of

whether to execute a command in a command message is
based on the command slot identifier and command

sequence identifier of the received command message
received by interface and the command slot identifer and

command sequence identifier of the command message
containing the previously executed command.


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
DIGITAL EQUIPMENT CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
DIGITAL EQUIPMENT CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MANN BRUCE E
</INVENTOR-NAME>
<INVENTOR-NAME>
SAETHER CHRISTIAN D
</INVENTOR-NAME>
<INVENTOR-NAME>
WELLS PHILIP J
</INVENTOR-NAME>
<INVENTOR-NAME>
MANN, BRUCE E.
</INVENTOR-NAME>
<INVENTOR-NAME>
SAETHER, CHRISTIAN D.
</INVENTOR-NAME>
<INVENTOR-NAME>
WELLS, PHILIP J.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention relates generally to the field of digital data processing
systems and more particularly to information transfer arrangements in
distributed systems.As digital data processing systems, or computers, have become
smaller and less expensive, individual computers are being used by
individuals and small groups. To enhance sharing of data, communications
among users and economy in connection with resources which may be
infrequently used by an individual, computers have been connected into
networks, which include, in addition to the computers used directly by the
various users, servers which, for example, store large amounts of data which
may be accessed, used and updated by a number of users in the system,
thereby facilitating sharing of data. Servers may also control printers,
telecommunications links, and so forth. In addition, servers may provide
specialized computational services, such as database searching and sorting,
and so forth. The various computers, which are termed clients, and servers
are interconnected by a communications link to permit messages to be
transferred among the various computers and servers comprising the
distributed system.In European Patent Application EP-A-0 214 625, entitled "Flow
Control Scheme for a Switching Network," buffer overflow is avoided by
monitoring the occupancy of the buffers of each port. The buffer
congestion is controlled by controlling the maximum amount of outstanding
unacknowledged data that an end point, such as a terminal, is allowed.
Each transmitting terminal has a limitation on how many packets it can send
to a receiving terminal before the transmitting terminal must wait for a
returned acknowledgement from the receiving terminal indicating that
previously transmitted data has been received correctly by the receiving 
terminal. As the system traffic increases, the number of packets that a
transmitting terminal can send before it must wait for the returned
acknowledgement from the receiving terminal is reduced. It is intended that
the amount of traffic on the system is reduced overall to thereby reduce
congestion in the system.Gerla, et al., in "Congestion Control in Interconnected LANS," IEEE
Network, January 1988, report that flow and congestion control mechanisms
can be used in an interconnected LAN environment. One mechanism for
controlling congestion is to drop packets when buffers are full and is
consistent with the "best effort" delivery philosophy. As an alternative to
packet dropping, Gerla discusses the sending of a "choke packet"
</DESCRIPTION>
<CLAIMS>
A system for exchanging a plurality of messages between a first node (10,
11) and a second node (10, 11) over a data link, the system comprising:


means for a respective one of said first and second nodes to include in a
selected message of said plurality of messages a source rate value (94) representing

a transmission rate at which the other one of said first and second nodes may
transmit messages to said respective node;
means for said respective node to determine that congestion has been
detected at said respective node, and in response to determining (232, 234) that

congestion has been detected, for said respective node to transmit (233, 238) a
new source rate value (94) to said other node in a return message sent by said

respective node to said other node; and
means for said other node to respond to a received new source rate value
from the respective node by adjusting the rate at which said other node sends

subsequent messages to said respective node to conform to said new source rate
value.
The system as in claim 1, wherein a congestion flag (93) is included in said
plurality of messages, said congestion flag having a change state and said system

further comprising:

means (94) for said other node, in response to receiving from said
respective node a message having said congestion flag in said change state, to

adjust its transmission rate in accordance with said received new source rate value.
The system as in claim 2, further comprising:

a timer (230), said timer expiring after a timing interval; and
means, responsive to said respective node not detecting congestion during
said timing interval, for setting (236, 237) a transmission rate at which said other

node transmits messages to said respective node to a value greater than a present
transmission rate, so that in the absence of congestion occurring at said respective 

node, then said other node begins transmitting messages to said respective node at
said greater transmission rate.
The system as in claim 1 further comprising:

means for including in a transmitted message of said plurality of messages,
a virtual circuit identifier (86, 87), said virtual circuit identifier identifying a virtual

circuit in a source node (87) and a destination node (86).
The system as in claim 4 further comprising:

means for adjusting the transmission rate in said virtual circuit.
The apparatus as in claim 4 further comprising:

means, in said other node, for adjusting the transmission rate in said virtual

circuit to said respective node.
A method of exchanging a plurality of messages over a data link between a
first node (10, 11) and a second node (10, 11), the method comprising:


including (231), by a respective one of said first and second nodes, in a
selected message of said plurality of messages, a source rate value (94)

representing a transmission rate at which the other one of said first and second
nodes may transmit messages to said respective node;
determining (232, 234), by said respective node, that congestion has been
detected at said respective node, and in response to determining that congestion

has been detected, said respective node transmitting (233, 238) a new source rate
value (94) to said other node in a return message sent by said respective node to

said other node; and
adjusting, by said other node, in response to a received new source rate
value, said rate at which said other node sends subsequent messages to said

respective node to conform to said received new source rate value.
The method of claim 7 further including the steps of: 

including a congestion flag (93) in said plurality of messages, said
congestion flag having a change state; and
adjusting, by said other node, in response to receiving from said respective
node a message having said congestion flag in said change state, its transmission

rate in accordance with said new source rate value.
The method of claim 7 further including the steps of:

indicating that a timer (230) in said respective node has expired after a
timing interval; and
responsive to said respective node not detecting congestion during said
timing interval, setting (236, 237) a transmission rate at which said other node

transmits messages to said respective node to a value greater than a present
transmission rate, so that in the absence of congestion occurring at said respective

node, then said other node begins transmitting messages to said respective node at
said greater transmission rate.
The method of claim 7 further including the step of:

identifying (86, 87) a virtual circuit in a transmitted message of said
plurality of messages, including identifying said virtual circuit in a source node

(87) and a destination node (86).
The method of claim 10 further including the step of:

adjusting the transmission rate in said virtual circuit.
The method of claim 10 further including the step of:

adjusting, in said other node, the transmission rate in said virtual circuit to
said respective node.
</CLAIMS>
</TEXT>
</DOC>
