<DOC>
<DOCNO>EP-0649545</DOCNO> 
<TEXT>
<INVENTION-TITLE>
VIRTUAL RADIO INTERFACE
</INVENTION-TITLE>
<CLASSIFICATIONS>H04L2906	H04L2906	H03J718	G06F1312	G06F946	H03J718	H04B140	G06F946	G06F1312	G06F1300	H04B140	G06F1300	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04L	H04L	H03J	G06F	G06F	H03J	H04B	G06F	G06F	G06F	H04B	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04L29	H04L29	H03J7	G06F13	G06F9	H03J7	H04B1	G06F9	G06F13	G06F13	H04B1	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A communication device (100) includes three levels and at least one feature and at least one protocol for communicating with other communication devices. The three levels are high level or user ergonomics (302), common level or feature/protocol (310), and low level or hardware platform (318). The feature/protocol level (310) is adapted for controlling the at least one feature and the at least one protocol. The user ergonomics (302) includes a first interface (304) coupled to the feature/protocol level (310) for allowing the user ergonomics level (302) to change without affecting the feature/protocol level (310). The hardware platform (318) includes a second interface coupled to the feature/protocol level (310) for allowing the hardware platform (318) to change without affecting the feature/protocol level (310) or the user ergonomics level (302).
 
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
MOTOROLA INC
</APPLICANT-NAME>
<APPLICANT-NAME>
MOTOROLA, INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MONAHAM-MITCHELL TIMOTHY A
</INVENTOR-NAME>
<INVENTOR-NAME>
SANDVOS JERRY L
</INVENTOR-NAME>
<INVENTOR-NAME>
WEISS KARL R
</INVENTOR-NAME>
<INVENTOR-NAME>
MONAHAM-MITCHELL, TIMOTHY, A.
</INVENTOR-NAME>
<INVENTOR-NAME>
SANDVOS, JERRY, L.
</INVENTOR-NAME>
<INVENTOR-NAME>
WEISS, KARL, R.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention is related in general to micro-processor embedded radio
communication devices and more particularly to the architecture and the operating
system of the micro-processors used in these devices.Computers typically execute a series of tasks suitable for an intended
application. A "task" is defined as a self-contained package of data and executable
procedures which operate on that data, perform logical functions, and are comparable
to a "process" in other known systems. In an operating system environment, the
operating system provides housekeeping, or direct control of the processes or tasks
within the software package. The process, or task, is typically made up of one or more
subroutines.Within a process, it is desired that the data be accessible only by that process
and not be accessed from the outside, i.e., by other processes. Processes can be used
to implement "objects", "modules", or other higher-level data abstractions. In
communication devices, where features, controls, and hardware platforms commonly
change from one family of products to another, it is desired to have a fully portable
process in which objects, modules, and higher-level data abstractions can be
transferred from one design to another without significant design overhead.In the prior art, one known system comprises a multiple tri-level microprocessor
radio operating system that provides a background executive to allow
processing of time-insensitive tasks. A foreground routine allows processing of real-time
sensitive tasks. And finally, a midground executive is utilized to allow
processing of time-sensitive tasks. A problem with such a system is that all the
segments are so interdependent that every time a segment is changed others will have
to inevitably change as well. Changes, therefore, had a tendency to be postponed in
view of significant cost disadvantages that where associated with having to redesign
unrelated areas in order to render the individual segments inter-operative.
Furthermore, these systems heavily depend on the time sensitivity of the task and
hence will provide support on the basis of their timing sensitivity to the overall
operation of the device. Instead of being based on time sensitivity implemented by interrupts, operating
systems based on message passing were developed. In these operating systems,
messages are used by two processes to exchange data, or otherwise communicate.
Messages also provide the mechanism by which hardware transparency is achieved.
A process located anywhere in the system may
</DESCRIPTION>
<CLAIMS>
A radio frequency communication device (100) having a plurality of
operating modes, at least one feature, at least one protocol, and a keypad

(170), the communication device (100) comprising:

a hardware platform (220) including at least one micro-processor (11);
an ergonomics/control means (302) having a first predetermined
plurality of tasks that cannot be dynamically altered and each

task having a predetermined fixed priority;
a feature/protocol means (310) having a second predetermined
plurality of tasks that cannot be dynamically altered and each

task having a predetermined fixed priority;
a hardware means for providing a kernel (508) and a hardware
interface (228) having a third predetermined plurality of tasks

that cannot be dynamically altered and each task having a
predetermined fixed priority;
a high level interface means (304) for providing a first standardized
interface between the feature/protocol means (310) and the

ergonomics/control means (302) so as to allow preemptive
changes to either the feature/protocol means (310) or to the

ergonomics/control means (302) without requiring changes to
the other;
a low level interface means (314) for providing a second standardized
interface (404) between the feature/protocol means (310) and the

hardware means so as to allow preemptive changes to either the
feature/protocol means (310) or to the hardware means without

requiring changes to the other; and
an intermediate interface means (316) using the second standardized
interface (404) to provide preemptive communication between

the ergonomics/control means (302) and the hardware means.
The radio frequency communication device (100) of claim 1, wherein
the ergonomics/control means (302) comprises:


an interpreter for interpreting information entered via
the keypad (170);
a first controller for controlling the features and the
plurality of operating modes.
The radio frequency communication device (100) of claim 1, wherein
the feature/protocol means (310) comprises:


means for implementing the features as dictated by the
ergonomics/control means (302);
means for implementing the at least one protocol having
means for formulating a desired protocol message.
The radio frequency communication device (100) of claim 1,
wherein the hardware means comprises:


means for partitioning the memory device to produce a plurality of
buffers;
scheduling means for scheduling the first, second, and third plurality
of tasks;
message handler means for handling messages between the first,
second, and third plurality of tasks using a buffer from the

plurality of buffers;
a buffer pool manager for assigning a buffer from the plurality of
buffers to one of the first, second, and third plurality of tasks;
an interrupt handler means for handling hardware interrupts;
hardware interface means (228) coupled to the hardware platform
(220) for converting a signal from the hardware platform (220)

to a signal having a standardized format.
The radio frequency communication device (100) according to claim
1, where


each task of the ergonomics/control means (302) has a predetermined
fixed priority, comprising:


an interpreter for interpreting information entered via
the keypad (170);
a first controller for controlling the features and the
plurality of operating modes;
each task of the feature/protocol means (310) has a predetermined
fixed priority, comprising:


means for implementing the features as dictated by the
ergonomics/control means (302);
means for implementing the at least one protocol having
means for formulating a desired protocol message;

and
each task of the hardware means has a predetermined fixed priority,
comprising:


an interrupt handler means for handling hardware
interrupts;
hardware interface means (228) coupled to the hardware
platform (220) for converting a signal from the

hardware platform (220) to a signal having a
standardized format.
The communication device (100) of claim 5, wherein the at least one
micro-processor (11) includes 
at least one memory device.
The communication device (100) of claim 6, wherein the hardware
means further includes means for partitioning the memory device to produce

a plurality of buffers. 
The communication device (100) of claim 7, wherein the hardware
means further includes a scheduling means for scheduling the first, second,

and third plurality of tasks.
The communication device (100) of claim 8, wherein the hardware
means further includes message handler means for handling messages

between the first, second, and third plurality of tasks using a buffer from the
plurality of buffers.
The communication device (100) of claim 9, wherein the hardware
means further includes a buffer pool manager for assigning a buffer from the

plurality of buffers to one of the first, second, and third plurality of tasks.
</CLAIMS>
</TEXT>
</DOC>
