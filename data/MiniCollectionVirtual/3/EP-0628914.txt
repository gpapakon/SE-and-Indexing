<DOC>
<DOCNO>EP-0628914</DOCNO> 
<TEXT>
<INVENTION-TITLE>
System direct memory access (DMA) support logic for PCI based computer system
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1330	G06F1336	G06F1336	G06F1340	G06F1340	G06F1328	G06F1320	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F13	G06F13	G06F13	G06F13	G06F13	G06F13	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A direct memory access (DMA) support mechanism is provided for use in 
a computer system 10 which comprises (i) a central processing unit (CPU) 24 

connected to system memory 32 by a first system bus 36, and a second system 
bus 16 connected to the CPU; (ii) a host bridge 20 connecting the second 

system bus to a peripheral bus 22; (iii) an input/output (I/O) bridge 78 

connecting the peripheral bus to a standard I/O bus 92, the standard I/O bus 
having a plurality of standard I/O devices 90 attached thereto; and (v) 

arbitration logic 42 which functions in an arbitration mode for arbitrating 
between the plurality of standard I/O devices competing for access to the 

standard I/O bus, and in a grant mode wherein a selected standard I/O device 
is granted access to the standard I/O bus. The DMA support mechanism 

comprises a direct memory access (DMA) controller 40 for performing DMA 
cycles on behalf of the selected standard I/O device, and direct memory 

access (DMA) support logic for enabling the DMA cycles to be performed over 
the peripheral bus. The DMA support logic includes sideband signals 

directly connecting the DMA controller with the I/O bridge, the sideband 
signals including information identifying the bus size of the selected I/O 

device for which the DMA controller is performing the DMA cycles. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
INTERNATIONAL BUSINESS MACHINES CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
AMINI NADER
</INVENTOR-NAME>
<INVENTOR-NAME>
BLAND PATRICK MAURICE
</INVENTOR-NAME>
<INVENTOR-NAME>
BOURY BECHARA FOUAD
</INVENTOR-NAME>
<INVENTOR-NAME>
HOFMANN RICHARD GERARD
</INVENTOR-NAME>
<INVENTOR-NAME>
LOHMAN TERENCE JOSEPH
</INVENTOR-NAME>
<INVENTOR-NAME>
AMINI, NADER
</INVENTOR-NAME>
<INVENTOR-NAME>
BLAND, PATRICK MAURICE
</INVENTOR-NAME>
<INVENTOR-NAME>
BOURY, BECHARA FOUAD
</INVENTOR-NAME>
<INVENTOR-NAME>
HOFMANN, RICHARD GERARD
</INVENTOR-NAME>
<INVENTOR-NAME>
LOHMAN, TERENCE JOSEPH
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to memory operations occurring
in computer systems, and more particularly to logic support for direct
memory access (DMA) operations in a computer systems comprising a plurality
of buses interconnected by bus bridges.Computer systems typically include more than one bus, each bus in the
system having devices attached thereto which communicate locally with each
other over the bus. System-wide communication over different buses is
required, however, if a device attached to one bus needs to read or write
information to or from a device on another bus. To permit system-wide
communication between devices on different buses, bus-to-bus bridges
(interfaces) are provided to match the communications protocol of one bus
with that of another.Known bus-to-bus bridges include those disclosed in the following co-pending
patent applications assigned to the IBM Corporation: European
Patent Application Nos. 550224, 553563, 550241 and 550223.
These applications describe mechanisms which permit system-wide
communication of devices attached to different buses in the system.Each bus-to-bus bridge in a multi-bus computer system is used to
connect two buses in the system. Various types of buses are available to
construct a given computer system. Standard I/O buses include, for example,
ISA or MICRO CHANNEL ("MC-A") buses, which often are used to connect
existing peripheral I/O devices to a system built around a more centralized,
high performance bus.One such high performance bus which is becoming widely accepted is the
PCI (Peripheral Component Interconnect) bus, which is capable of performing
significant data transfer in a relatively short period of time (up to 120
megabytes of data per second). The PCI bus achieves this high level of
performance, in part, because it may be directly linked to other high speed 
buses, such as system buses to which a CPU may be connected, and thus may
provide for rapid transfer of data between devices attached to the PCI bus
and devices attached to the system bus. In fact, the operation of several
high integration devices, such as certain graphics package controllers,
require a direct link to a system bus through a high performance bus such
as the PCI bus. In addition, the PCI bus architecture does not require any
"glue logic" to operate peripheral devices connected to it. Glue logic for
other buses typically consists of miscellaneous hardware components such as
decoders, buffers or latches that are installed intermediate the peripheral
devices and the
</DESCRIPTION>
<CLAIMS>
A direct memory access (DMA) support mechanism for use in a
computer system (10) which comprises (i) a central processing unit (CPU)

(24) connected to system memory (32) by a first system bus (36); (ii) a
second system bus (16) connected to said CPU; (iii) a host bridge (20)

connecting said second system bus to a peripheral bus (22); (iv) an
input/output (I/O) bridge (78) connecting said peripheral bus to a

standard I/O bus (92), said standard I/O bus having a plurality of
standard I/O devices (90) attached thereto; and (v) arbitration logic

(42) which functions in an arbitration mode for arbitrating between said
plurality of standard I/O devices competing for access to said standard

I/O bus, and in a grant mode wherein a selected standard I/O device is

granted access to said standard I/O bus; said DMA support mechanism
comprising:


a direct memory access (DMA) controller (40) for performing DMA
cycles on behalf of said selected standard I/O device wherein data is

transferred between said system memory and said selected I/O device
without intervention by said CPU; and
direct memory access (DMA) support logic for enabling said DMA
cycles to be performed over said peripheral bus;

   characterised in that said DMA support logic including arbitration identification
signals directly connecting said DMA controller with the I/O bridge, said

arbitration identification signals including information identifying the bus size of the
selected I/O device for which said DMA controller is performing said DMA

cycles.
A support mechanism as claimed in claim 1, wherein said peripheral
bus (22) conforms to Peripheral Component Interconnect (PCI)

architecture.
A support mechanism as claimed in claim 2, wherein said DMA
controller (40) resides on said peripheral bus (22).
A support mechanism as claimed in claim 2, wherein said DMA
controller (40) resides on said second system bus (16).
A support mechanism as claimed in claim 2, wherein said peripheral
bus (22) and said second system bus (16) have data widths of at least 32

bits.
A support mechanism as claimed in claim 2, wherein said standard
I/O bus (92) conforms to MICROCHANNEL architecture.
A support mechanism as claimed in claim 2, wherein said standard
I/O bus (92) conforms to ISA architecture. 
A support mechanism as claimed in claim 2, wherein said computer
system (10) further comprises (i) an I/O controller (44) residing on said

second system bus (16) and connecting said second system bus to a
peripheral I/O bus; and (ii) a plurality of peripheral I/O devices (56)

attached to said peripheral I/O bus; and wherein said DMA controller (40)
also performs DMA cycles on behalf of said peripheral I/O devices wherein

data is transferred between said system memory and said peripheral I/O
devices without intervention by said CPU.
A support mechanism as claimed in claim 2, wherein said sideband
signals are multiplexed to define a first function when said arbitration

logic is in said arbitration mode and to perform a second function when
said arbitration logic is in said grant mode.
An information processing system (10), comprising:

a central processing unit (CPU) (24);
a first system bus (36)which connects said CPU to system memory
(32) so that said CPU can read data from, and write data to, said system

memory;
a second system bus (16) connected to said CPU;
a host bridge (20) connecting said second system bus to a
peripheral bus (22);
an input/output (I/O) bridge (78) connecting said peripheral bus to
a standard I/O bus, said standard I/O bus (92) having a plurality of

standard I/O devices (90) attached thereto;
arbitration logic (42) which functions in an arbitration mode for
arbitrating between said plurality of standard I/O devices competing for

access to said standard I/O bus, and in a grant mode wherein a selected
standard I/O device is granted access to said standard I/O bus; and
a direct memory access (DMA) support mechanism as claimed in any
preceding claim.
</CLAIMS>
</TEXT>
</DOC>
