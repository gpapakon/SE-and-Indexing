<DOC>
<DOCNO>EP-0621535</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Interrupt handling
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F946	G06F930	G06F946	G06F948	G06F930	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F9	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
To speed up interrupt processing by interrupt 
handlers executing with interrupts disabled, one or more 

processor registers in the computer system are reserved 
for exclusive use by software executing with interrupt 

disabled. Interrupt processing code can be written in a 
high level language. If the code generated by the high 

level language compiler uses non-reserved registers, these 
registers are saved by the interrupt handler in the 

reserved registers before the interrupt processing code is 
invoked. After execution of the interrupt processing 

code, the interrupt handler restores the non-reserved 
registers from the reserved registers. Saving the non-reserved 

registers in the reserved registers rather than 
in a memory improves the interrupt processing speed. 
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
ADVANCED MICRO DEVICES INC
</APPLICANT-NAME>
<APPLICANT-NAME>
ADVANCED MICRO DEVICES INC.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MANN DANIEL P
</INVENTOR-NAME>
<INVENTOR-NAME>
MANN, DANIEL P.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
A portion of the disclosure of this patent document
contains material which is subject to copyright
protection. The copyright owner has no objection to the
facsimile reproduction by anyone of the patent document or
the patent disclosure, as it appears in the Patent and
Trademark Office patent file or records, but otherwise
reserves all copyright rights whatsoever.The present invention relates to computer systems,
and more particularly to interrupt handling in computer
systems.A typical computer system includes a processor which
executes software stored in a computer memory. When an
interrupt occurs, the processor executes software called
an interrupt handler. On occurrence of an interrupt, the
computer system hardware and/or the interrupt handler
typically save the processor registers which can be
destroyed by the interrupt handler because these registers
may be needed for the interrupted program. General
purpose registers, i.e., registers which can be modified
directly by arithmetic and/or logical operations, are
saved in the memory.Before returning to the interrupted program, the
interrupt handler and/or the system hardware restore the
saved registers.The register saving increases the interrupt latency
defined as the time elapsed between the moment when the
system takes an interrupt and the beginning of the
execution of the interrupt processing code. The interrupt 
processing code is that part of the interrupt handler
which is not related to register saving and restoration.
To increase the system speed, it is desirable to improve
the interrupt latency and also to improve (i.e., reduce)
the register restoration time at the end of interrupt
handling. Improving the interrupt latency and the
register restoration time is particularly important for
interrupt handlers executed with interrupts disabled
because other interrupts may be missed while such an
interrupt handler is executing.Thus, it is desirable to provide interrupt handling
techniques with reduced interrupt latency and reduced
register restoration time. Because saving and restoring
general purpose registers involves a memory access, and
because a memory access takes a relatively large amount of
time, it is particularly desirable to improve the
efficiency of general purpose register handling. Further,
the interrupt handling techniques should be suitable for
writing at least a portion of the interrupt processing
code in a high level language since writing code in a high
level language facilitates development and maintenance of
computer systems.
</DESCRIPTION>
<CLAIMS>
A method for handling an interrupt in a computer system using an interrupt
processing code, the computer system (110) comprising a processor (114) which

comprises:

a set S2 (144.2) of one or more general purpose registers;
the interrupt processing code comprising instructions overwriting one or more general
purpose registers of said set S2,
characterised in that
 the processor further comprises a set S1 (144.1) of one or more
registers reserved for use by a computer code executed with interrupts disabled;
and in that the method comprises the steps of:

saving (140.1) one or more general purpose registers which can be
overwritten by said in
terrupt processing code in one or more registers of said
set S1; and then
invoking (140.2) said interrupt processing code.
The method of claim 1 wherein said interrupt processing code is written in a
high level language.
The method of claim 1 or claim 2 wherein the step of saving saves only those
general purpose registers which can be overwritten.
The method of any preceding claim further comprising, after execution of said
interrupt processing code, the step of restoring (140.3) one or more registers saved

by said saving step from one or more registers of said set S1. 
A computer system (110) comprising:

a processor (114) comprising a set S1 (144.1) of one or more
registers and also comprising one or more general purpose registers (144.2);
a store (120) comprising software which accesses the registers of said
set S1 only with interrupts disabled, said store comprising an interrupt handler

(140) which comprises:
an interrupt processing code comprising one or more instructions
overwriting one or more of said general purpose registers; and
a code (140.1) for saving the one or more general purpose registers
which can be overwritten by said instructions in said one or more registers of

said set S1.
The computer system of claim 5 wherein the code for saving saves only those
general purpose registers which can be overwritten.
The computer system of claim 5 or claim 6 wherein said interrupt handler
further comprises a code for restoring (140.3), after execution of said interrupt

processing code, the saved general purpose registers from the registers of said S1.
The computer system of any one of claims 5 to 7, wherein the one or more
registers of said set S1 are general purpose registers.
</CLAIMS>
</TEXT>
</DOC>
