<DOC>
<DOCNO>EP-0981085</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Application controlled data flow between processing tasks
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F946	G06F946	G06F954	G06F1516	G06F1516	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F9	G06F15	G06F15	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
In accordance with a preferred embodiment of the present
invention, there is provided a way to reduce these memory copy

operations by a Java application via API creating task input and
output channels which are used to direct communication between

Java applications (40), host tasks (48), DSP tasks (60) and device
drivers (54). Tasks and devices read input data through task

input channels and write output data through task output channels.
The channels are connected using a system I/O manager (29) that

controls passing data in frame buffers between channels and the
tasks or devices to which they are connected.


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
TEXAS INSTRUMENTS INC
</APPLICANT-NAME>
<APPLICANT-NAME>
TEXAS INSTRUMENTS INCORPORATED
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BREWER JASON M
</INVENTOR-NAME>
<INVENTOR-NAME>
WOOLSEY MATTHEW E
</INVENTOR-NAME>
<INVENTOR-NAME>
BREWER, JASON M.
</INVENTOR-NAME>
<INVENTOR-NAME>
WOOLSEY, MATTHEW E.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This application is related to U.S. Serial No. 08/995,606
filed 12/22/97 entitled "Mobile Information Services Platform" to
Woolsey et al. and U.S. Serial No. 08/995,600 filed 12/22/97
entitled "Mobile Communications System with Cross Compiler and
Cross Linker" to Woolsey et al. These applications are
incorporated herein by reference.This invention relates to data flow between processing tasks
and more particularly to application controlled data flow between
the processing tasks.Handheld mobile wireless electronic devices are becoming more
in demand as the functionality of the devices increases. Personal
Digital Assistants (PDAs) are in widespread use. Smartphones
which combine some of the capabilities of a cellular phone and a
PDA are predicted to have a significant impact on communications
in the near future.Some devices currently incorporate one or more DSPs (Digital
Signal Processors) or other co-processors for providing certain
discrete features, such as voice recognition and a general
processor for the other data processing functions. The flow
between processing tasks in the prior art is implemented by native
code such as C or assembly language. This is very inflexible
because it does not allow for new applications in other languages.
Smartphones needs a more dynamic application environment.In accordance with one embodiment of the present invention,
the flow between processing tasks is provided by a language
application such as Java with an extension program interface to 
communicate between tasks on one processor and tasks on a second
processor.In accordance with one preferred embodiment of the present
invention, a Java application creates an input channel on a
network driver and connects it to an output channel from a DSP
task such that output from the DSP task is sent directly over the
network without passing through the Java application by use of an
I/O manager.The present invention will now be further described, by way
of example, with reference to certain exemplary embodiments
illustrated in the accompanying drawings in which:
Fig. 1 illustrates a block diagram of a platform architecture
particularly suited for general wireless data processing;Fig. 2 illustrates data path for a network bitstream to a DSP
task through Java according to one embodiment of the present
invention;Fig. 3 illustrates a functional block diagram for the system
according to Figs. 1 and 2;Fig. 4 illustrates an overview of the system according to one
preferred embodiment of the present invention;Fig. 5 illustrates the
</DESCRIPTION>
<CLAIMS>
A method of passing data between Java application to a
first processing task comprising:


creating a task input channel on a first task to allow
communication with a task from an application;
writing data to the task input channel on the first task
using said application to send data to said first processing task;

and
creating a task output channel on said first task to allow
said application to read from the first processing task.
The method of Claim 1 wherein said first processing
task is a DSP task.
The method of Claim 1 including the step of:

said Java application reading data from a network
before passing data to said first processing task.
The method of Claim 1 including the step of:

providing an I/O manager connecting said input and
output channels under control of said Java application wherein

said Java application receives control information for a bitstream
but actual bitstream is passed through a task output channel on a

network driver to said task input channel on said first processing
task.
The method of Claim 1 wherein said first task is
performed on a DSP.
A method for providing controlled data flow between
tasks executed on a host processor and tasks on a coprocessor

comprising:

creating an input channel on a coprocessor; and
providing a Java application running on a host machine to
write data to the task input channel on said coprocessor.
The method of Claim 6 including the step of creating on
said coprocessor task an output channel to allow said Java

application to read from said coprocessor task.
The method of Claim 6 wherein said coprocessor task is
a DSP task.
The method of Claim 6 including the step of providing
an I/O manager that sets the location the output channel tasks

writes to and the location the input channel is to read from.
A system for communication between tasks or between
devices that execute on a host processor and tasks or devices that

execute on a coprocessor comprising:

task input and output channels,
said tasks and devices read input data through task input
channels and write data through task output channels, and
an I/O manager for connecting and controlling said input and
output channels to said tasks and devices.
A system for communication between signal processing
task on a first processor and signal processing task on a second

processor comprising:

a data source,
a data output device,
said first signal processing task having input channel
coupled to said data source,
said second signal processing task coupled to said data
output device, and
an I/O manager for connecting between said input and output
channels and controlling data flow between said data source and

data output device.
The system of Claim 11 wherein said data source
provides data and control signals and said system includes an

application program responsive to said control signals for
controlling said I/O manager such that said data flows directly

through said input and output channels specified by said I/O
manager.
</CLAIMS>
</TEXT>
</DOC>
