<DOC>
<DOCNO>EP-0621534</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Methods and apparatus for constraint satisfaction.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F1750	G06F1750	G06F1900	G06F1900	G06N500	G06N500	G06Q1000	G06Q1000	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06N	G06N	G06Q	G06Q	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F17	G06F17	G06F19	G06F19	G06N5	G06N5	G06Q10	G06Q10	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A technique for finding values which satisfy a set of constraints is used with local 
search procedures for finding such values and overcomes the tendency of such local 

search procedures to "get stuck" at local minima. The technique dynamically adds 
weight to constraints in the set which are not satisfied by the current set of values 

and uses the weights of the constraints to determine the next set of values to be used 
in the local search. In the disclosed embodiment, the technique is used in the GSAT 

greedy local search procedure. Also disclosed is a system for controlling a robot arm 
which uses the technique. 
 
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
AT 
&
 T CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
AT
&
T CORP.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
KAUTZ HENRY ALEXANDER
</INVENTOR-NAME>
<INVENTOR-NAME>
SELMAN BART
</INVENTOR-NAME>
<INVENTOR-NAME>
KAUTZ, HENRY ALEXANDER
</INVENTOR-NAME>
<INVENTOR-NAME>
SELMAN, BART
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention has generally to do with finding values of parameters of a 
system which satisfy a set of constraints and specifically to do with techniques 
for finding such values which do not "get stuck" at local minima. Many problems in artificial intelligence, computer science, manufacturing, 
business, and other fields can be posed as constraint satisfaction problems. A 
constraint satisfaction problem consists of a set of variables, a set of possible 
values for each variables, and a set of constraints between subsets of the 
variables. Each constraint on a subset of the variables restricts the possible 
values that may be simultaneously assigned to those variables. A solution to 
a constraint satisfaction problem is an assignment of values to each variable 
such that all constraints are satisfied. An important class of constraint satisfaction problems are conjunctivenormal form Boolean constraint satisfaction problems. (This class is commonly 
named "CNF".) In such problems, each variable has to be assigned 
one of just two possible values: true or false. A literal is defined as either 
a variable or the negation of a variable. Each constraint is then given by a 
clause in propositional logic, which is a disjunction of literals.For example, let the variables be A, B, and C. Let there be three constraints,  
 
where the first is "A or C"; the second is "(not A) or C"; and the 
third is "B or (not C)". The first constraints specifies that either A is set to 
true, or B is set to true; or both are set to true. (Henceforth, "or" will always 
be meant in this inclusive sense, unless specified otherwise.) This eliminates 
the possibility of setting both A and C to false simultaneously. The second 
constraint specifies that either A is set to false (which is indicated by the 
"not"), or C is set to true. Finally, the third constraint specifies that either 
B is set to true or C is set to false. One of the solutions to this problem is the assignment of false to A, true 
to B, and true to C. Every constraint is satisfied by this assignment. The problem of solving CNF problems is one of the central problems in 
computer science, because many other decision and optimization problems 
can be translated into this form. Cook (1971) proved that any problem that 
can be solved by a non-deterministic Turing machine in polynomial time (that 
is, any problem in the class NP) can be reduced to a CNF problem (S. A. 
Cook, "The Complexity of Theorem-Proving Procedures", in Proceedings ofthe 3rd Annual ACM Symposium on
</DESCRIPTION>
<CLAIMS>
A method for finding values of variables in constraints of a system 
such that the values satisfy the constraints, the method being of the local search type 

and being characterized by the steps of: 
   associating a weight with each constraint; 

   using the weights to select at least one of the variables of the constraints 
whose value is to be altered to produce a current assignment of values to the 

variables; and 
   dynamically updating the weight for each constraint according to 

whether the current assignment of values to the variables satisfies that constraint. 
Control apparatus for controlling a system subject to constraints, the 
apparatus including constraint satisfaction means (811) for employing a local 

search method to find values of variables in the constraints which satisfy the 
constraints, the control apparatus being characterized in that: 

   the constraint satisfaction means includes 
   means (303) for associating a weight with each constraint and 

   means (401) for dynamically updating the weight for each constraint 
according to whether a current assignment of values to the variables satisfies that 

constraint; and wherein 
   the constraint satisfaction means uses the weights to select at least one 

variable of the constraints whose value is to be altered to produce a new current 
assignment of values. 
The method set forth in claim 1 further characterized in that: 
   the step of dynamically updating the weight includes the step of 

increasing the weight for each constraint which is not satisfied by the current 
assignment of values. 
The method set forth in claim 1 further characterized in that: 
   the step of using the weights to select at least one of the variables 

includes the step of determining which of the constraints has the greatest weight. 
The method set forth in claim 4 further characterized in that:
 

   the step of using the weights to select at least one of the variables 
includes the step of selecting a variable whose constraint has the greatest weight. 
The method set forth in claim 3 further characterized by the steps of: 
   computing a score for the current assignment of values to the variables 

which indicates the number of satisfied constraints; 
   for each variable, determining a difference by altering the value of the 

the variable and comparing the number of constraints satisfied after the alteration 
with the score; and 

   the step of using the weights to select at least one of the constraints 
includes the step of selecting the variable whose value is to be altered according to 

the differences. 
The method set forth in claim 6 further characterized in that: 
   the step of using the weights includes the step of determining a greatest 

difference and 
   the step of selecting the variable whose value is to be altered selects a 

variable with the greatest difference. 
The method set forth in claim 6 further characterized in that: 
   the step of determining the difference includes determining the 

difference using only those variables which share clauses with the variable whose 
value is to be altered. 
The method set forth in any of claims 1, 3, 4, 5, 6, 7, or 8 further 
characterized in that: 

   the variables are binary variables; and 
   the constraints are a formula in conjunctive normal form. 
The control apparatus set forth in claim 2 further characterized in 
that: 

   the means for dynamically updating the weight for each constraint 
includes means (405) for increasing the weight for each constraint which is not 

satisfied by the current assignment of values. 
The control apparatus set forth in claim 10 further characterized by:
 

   means for determining which of the constraints has the greatest weight 
(313). 
The control apparatus set forth in any of claims 2, 10, or 11 further 
characterized in that: 

   the variables are binary variables; and 
   the constraints are a formula in conjunctive normal form. 
</CLAIMS>
</TEXT>
</DOC>
