<DOC>
<DOCNO>EP-0653695</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Software pay per use system
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F100	G06F100	G06F1300	G06F1300	G06F2100	G06F2100	G06F2122	G06F2122	G06Q1000	G06Q1000	G09C100	G09C100	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06Q	G06Q	G09C	G09C	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F1	G06F1	G06F13	G06F13	G06F21	G06F21	G06F21	G06F21	G06Q10	G06Q10	G09C1	G09C1	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A pay per use system for the prevention of the
unauthorized use of computer software. An encryption

program encodes original software to produce secured
software. The encoding is accomplished by using

cryptographic techniques. In order to use the software, a
user must call a telephone number to receive the

cryptographic keys necessary to decrypt the secured
software. Thus, users must pay for each use of the secured

software. The system allows software developers to freely
distribute the secured software. Copies of the secured

software may be freely made, because payment is based on
each use of the software not on each copy of the software.


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
AT 
&
 T CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
AT
&
T CORP.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MICHEL ALAN D
</INVENTOR-NAME>
<INVENTOR-NAME>
REINKE ROBERT E
</INVENTOR-NAME>
<INVENTOR-NAME>
MICHEL, ALAN D.
</INVENTOR-NAME>
<INVENTOR-NAME>
REINKE, ROBERT E.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
This invention relates generally to the protection of 
computer software from illegal copying. More particularly, 
this invention relates to a pay per use protection technique 
in which a user must make a telephone call in order to use 
protected software. Software piracy, the illegal copying of commercial 
computer programs, is a major problem in the personal 
computer industry. Software developers currently have three 
common techniques to prevent illegal copying of their 
software. The first is the use of hardware "keys". These 
keys are devices that attach to a computer's printer port. 
Before starting, the software attempts to query the key. If 
there is no response, or an incorrect response, the software 
will not start. The second technique is the use of a key 
disk. This is like a hardware key, except the key is a 
floppy disk that must be in the computer's disk drive. A 
third technique is to sell copy-protected software. In this 
technique, the developer puts the program on a floppy disk 
in such a form that a direct copy of the disk will produce 
an incorrect copy of the software. All of the above mentioned techniques have problems. 
They require developers to incorporate piracy protection 
into their programs. They are brittle, meaning that once a 
single copy with the protection circumvented exists, the 
protection is useless. Also, they cause inconvenience to 
legitimate users of the software. An ideal protection 
scheme would make it impossible for people to use commercial 
software illegally, without posing any inconvenience to the 
developer or the user of the software.  Generally, the present invention provides a technique 
which is close to the ideal. It is based upon distributing 
software in such a way that users must call a telephone 
number to get the software to work. If the telephone call 
is to a number which results in a per call service fee, such 
as a "900" number, then making the call guarantees that the 
users pay for the use of the software. More specifically, an encryption program converts any 
existing program into a new program called the secured 
software. The secured software is a program that contains 
the original software in encoded form. The encryption 
program, when constructing the secured software, both 
compresses and encodes the original program. The 
compression removes most of the redundancy, making code-breaking 
difficult, and reduces the size of the secured 
software. The resulting program contains the original 
software in a completely unreadable form.
</DESCRIPTION>
<CLAIMS>
A system for the validation and use of secured computer 
software comprising: 

   a software validation system; 
   a software user system comprising secured software; 

   a communications network connected to the software 
validation system and the software user system for the 

transmission of data between the systems; 
   said software validation system comprising: 

   means for storing at least one decryption key, 
   means for receiving from said user system over said 

communications network an identification of said secured 
software, 

   means for recording the receipt of said identification 
of secured software, and 

   means for transmitting to said user system over said 
communications network a decryption key chosen from said at 

least one stored decryption key, wherein said chosen 
decryption key is capable of decrypting said identified 

secured software; 
   said software user system further comprising: 

   means for transmitting said secured software 
identification to the software validation system over said 

communications network, 
   means for receiving said chosen decryption key capable 

of decrypting said identified secured software from said 
software validation system over said communications network, 

and
 

   means for decrypting said secured software using said chosen 
decryption key. 
A software validation system comprising: 
   means for storing at least one decryption key; 

   means for receiving from a communications network an 
identification of encrypted software; 

   means for recording the receipt of said identification; and 
   means for transmitting to the communications network a 

decryption key chosen from said at least one stored decryption 
key, wherein said chosen decryption key is capable of decrypting 

said identified encrypted software, and 
   wherein a fee is charged for the establishment of 

comnunication over the communications network. 
The software validation system of claim 2 further comprising: 
   means for masking said decryption key with a random number 

prior to transmitting it to the communications network. 
The software validation system of claim 3 further comprising 
means for receiving said random number from the communications 

network. 
The software validation system of claim 2 further comprising: 
   means for generating a first random number;

 
   means for receiving a second random number from the 

communications network; 
   means for producing a third random number by concatenating 

said first random number and said second random number; and 
   means for masking said decryption key with said third random 

number prior to transmitting it to the communications network. 
The software validation system of claims 3 or 5 further 
comprising means for encrypting said masked decryption key prior 

to transmitting it to the communications network. 
The software validation system of claim 6 wherein said means 

for encrypting is by use of a public key encryption algorithm. 
The software validation system of claim 2 further comprising: 
   means for generating a first random number; 

   means for encrypting said first random number; 
   means for transmitting said encrypted first random number to 

the communications network; 
   means for receiving an encrypted second random number from 

the communications network, wherein said eecond random number 
comprises a first section and a second section; 

   means for decrypting said second random number; and 
   means for masking said decryption key with said second 

random number prior to transmitting it to the communications 
network. 
The software validation system of claim 8 further comprising: 
   means for determining whether said first or second section 

of said second random number is equal to said first random 
number; and 

   means for masking said decryption key with said second 
random number prior to transmitting only if said first or second 

section of said second random number is equal to said first 
random number. 
A software user computer system for the execution of secured 
software, the system comprising: 

   encrypted computer program code; 
   means for transmitting an identification of the encrypted 

computer program code to a communications network; 
   means for receiving a decryption key from the communications 

network, said decryption key capable of decrypting said encrypted 
computer program code; and 

   means for decrypting said encrypted computer program code 
with said decryption key; 

   wherein a fee is charged for the initiation of the 
communication over the communications network. 
The software user computer system of claim 10 wherein said 
received decryption key has been masked prior to receipt, the 

system further comprising:
 

   means for generating a random number; 
   means for transmitting said random number to the 

communications network; and 
   means for unmasking said masked decryption key with said 

random number. 
The software user computer system of claim 10 wherein said 
received decryption key has been masked and encrypted prior to 

receipt, the system further comprising: 
   means for decrypting said encrypted masked decryption key; 

   means for generating a random number; 
   means for transmitting said random number to the 

communications network; and 
   means for unmasking said encrypted masked decryption key 

with said random number. 
The software user computer system of claim 10 further 
comprising means for preventing the unauthorized decryption of 

said encrypted computer program code if communication over the 
communications network has not been initiated by a telephone call 

which results in a per call aervice fec. 
A software user computer system for the execution of secured 
software, the system comprising: 

   encrypted computer program code;
 

   means for transmitting a software identification identifying 
the encrypted computer program code to a communications network; 

   means for generating a first random number; 
   means for receiving a second random number; 

   means for combining said first and second random number to 
produce a third random number; 

   means for receiving a masked decryption key capable of 
decrypting said encrypted computer program code; 

   means for unmasking said masked decryption key with said 
third random number; and 

   means for decryptiny said encrypted computer program code 
with said decryption key, 

   wherein a fee is charged for the initiation of the 
communication over the communications network. 
The system of claims 1, 2, 10 or 14 wherein communication 
over the communications network is initiated by a telephone call 

which results in a per call service fee. 
The software user computer system of claim 14 wherein said 
masked decryption key is encrypted prior to receipt, said system 

further comprising means for decrypting said encrypted masked key 
prior to unmasking said key. 
The software user computer system of claim 14 wherein said 
second random number is encrypted prior to receipt and said 

 
masked decryption key is encrypted prior to receipt, said system 

further comprising: 
   means for decrypting said encrypted masked key prior to 

unmasking said key; and 
   means for decrypting said encrypted second random number 

prior to combining said first random number and second random 
number. 
A computer system for the registration of software and the 
generation of secured software comprising: 

   means for transmitting software identification information 
to a communications network; 

   means for receiving at least one key and a unique software 
identification from the communications network; and 

   means for encrypting an executable software file using said 
at least one key to create a secured software module, 

   wherein said executable software file is capable of being 
executed by a user only after receipt of said at least one key. 
The computer system of claim 18 wherein said secured 
software module comprises the encrypted executable software file 

and computer program code, said computer program code comprising 
said means for decrypting the executable software file using said 

at least one key, and
 

   wherein said at least one key is received by a user only 
after said user places a telephone call which results in a per 

call service fee. 
A software validation system for the registration of 
protected software, the system comprising: 

   means for receiving software identification information from 
a communications network; 

   means for generating a unique software identification code 
for said received software identification; 

   means for generating at least one cryptographic key; 
   means for transmitting said unique software identification 

code and at least one cryptographic key to the communications 
network; and 

   means for storing said unique software identification and at 
least one cryptographic key, 

   wherein said at least one cryptographic key will be used to 
generate a secured software module, said secured software module 

being executable by a user computer system only after receipt of 
said at least one cryptographic key over a communications 

network, wherein said receipt of said at least one cryptographic 
key is initiated by a telephone call which will result in a per 

call service fee. 
A method for the validation.and use of encrypted secured 
software comprising the steps of: 

   a user of secured software initiating a telephone call which 
will result in a per call service fee, said telephone call 

establishing communication over a communications network between 
said user and a software validation system; 

   said user of secured software transmitting secured software 
identification to the software validation system over the 

communications network; 
   said software validation system transmitting to said user 

over the communications network a decryption key capable of 
decrypting said secured software; and 

   decrypting said secured software with said decryption key. 
The method of claim 21 further comprising the steps of: 
   generating
 a random number in the user computer system; 
transmitting said random number to the software validation 

system; 
   masking said decryption key with a random number in said 

software validation system prior to transmitting the decryption 
key to the user; and 

   unmasking said decryption key with said random number in the 
user's computer system. 
A method for validating secured computer software comprising 
the steps of:

 
   storing at least one decryption key; 

   receiving from a communications network an identification of 
encrypted software; 

   recording the receipt of said identification; and 
   transmitting to the communications network a decryption key 

chosen from said at least one stored decryption key, wherein said 
chosen decryption key is capable of decrypting said identified 

encrypted software, 
   wherein a fee is charged for the establishment of 

communication over the communications network. 
The method of claim 23 wherein said establishment of 
communication over the communications network is established by 

placing a telephone call which results in per call service fee. 
The method of claim 23 further comprising the step of 
masking said decryption key with a random number prior to 

transmitting it to the communications network. 
The method of claim 25 further comprising the step of 
receiving said random number from the communications network. 
The method of claim 23 further comprising the steps of: 
   generating a first random number; 

   receiving a second random number from the communications 
network;

 
   producing a third random number by concatenating said first 

random number and said second random number; and 
   masking said decryption key with said third random number 

prior to transmitting it to the communications network. 
The method of claims 25 or 27 further comprising the step of 
encrypting said masked decryption key prior to transmitting it to 

the communication network. 
The method of claim 28 wherein said step of encrypting is by 
use of a public key encryption algorithm. 
The method of claim 23 further comprising the steps of: 
   generating a first random number; 

   encrypting said first random number; 
   transmitting said encrypted first random number to the 

communications network; 
   receiving an encrypted second random number from the 

communications network, wherein said second random number 
comprises a first section and a second section; 

   decrypting said second random number; and 
   masking said decryption key with said second random number 

prior to transmitting it to the communications network. 
The method of claim 30 further comprising the steps of: 
   determining whether said first or second section of said 

second random number is equal to said first random number; and 
   masking said decryption key with said second random number 

prior to transmitting only if said first or second section of 
said second random number is equal to said first random number. 
A method for the execution of encrypted secured software 
comprising the steps of: 

   initiating communication over a communications network which 
results in a service fee; 

   transmitting an identification of the secured software to 
the communications network; 

   receiving a decryption key from the communications network, 
said decryption key capable of decrypting said secured software; 

and 
   decrypting said secured software with said decryption key. 
The method of claim 32 wherein said received decryption key 
has been masked prior to receipt, the method further comprising 

the steps of: 
   generating a random number; 

   transmitting said random number to the communications 
network; and 

   unmasking said masked decryption key with said random 
number. 
The method of claim 32 wherein said received decryption key 
has been masked and encrypted prior to receipt, the method 

further comprising the steps of: 
   decrypting said encrypted masked decryption key; 

   generating a random number; 
   transmitting said random number to the communications 

network; and 
   unmasking said encrypted masked decryption key with said 

random number. 
The method of claim 32 further comprising the step of: 
   preventing the unauthorized decryption of said encrypted 

computer program code if communication over the communications 
network has not been initiated by a telephone call resulting in a 

per call service fee. 
A method for the execution of encrypted secured software 
comprising the steps of: 

   initiating communication over a communications network which 
results in a service fee; 

   transmitting a software identification identifying the 
secured software to the communications network; 

   generating a first random number; 
   receiving a second random number;

 
   combining said first and second random number to produce a 

third random number; 
   receiving a masked decryption key capable of decrypting said 

secured software; 
   unmasking said masked decryption key with said third random 

number; 
   decrypting said secured software with said decryption key. 
The method of claims 32 or 36 wherein said step of 
initiating communication over a communications network comprises 

the step of placing a telephone call resulting in a per call 
service fee. 
The method of claim 36 wherein said masked decryption key is 
encrypted prior to receipt, said method further comprising the 

step of decrypting said encrypted masked key prior to unmasking 
said key. 
The method of clairn 36 wherein said second random number is 
encrypted prior to receipt and said masked decryption key is 

encrypted prior to receipt, said method further comprising the 
steps of: 

   decrypting said encrypted masked key prior to unmasking said 
key; and 

   decrypting said encrypted second random number prior to 
combining said first random number and second random number. 
A method for the registration of software and the generation 
of secured software comprising the steps: 

   transmitting software identification information to a 
communications network; 

   receiving at least one key and a unique software 
identification from the communications network; and 

   encrypting an executable software file using said at least 
one key to create a secured software module, 

   wherein said executable software file is capable of being 
executed by a user only after receipt of said at least one key. 
The method of claim 40 wherein said at least one key is 
received by a user only after said user initiates a telephone 

call to a telephone number which results in a per call service 
fee. 
A software validation method for the registration of 
protected software comprising the steps: 

   receiving software identification information from a 
communications network; 

   generating a unique software identification code for said 
received software identification; 

   generating at least one cryptographic key; 
   transmitting said
 unique software identification code and at 
least one cryptographic key to the communications network; and

 
   storing said unique software identification and at least one 

cryptographic key, 
   wherein said at least one cryptographic key will be used to 

generate a secured software module, said secured software module 
being executable by a user computer system only after receipt of 

said at least one cryptographic key over a communications 
network, wherein said receipt of said at least one cryptographic 

key is initiated by a telephone call which will result in a per 
call service fee. 
</CLAIMS>
</TEXT>
</DOC>
