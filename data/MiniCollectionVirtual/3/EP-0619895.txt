<DOC>
<DOCNO>EP-0619895</DOCNO> 
<TEXT>
<INVENTION-TITLE>
SUPPORT FOR A MOUSE OR SIMILAR POINTING DEVICE ON DEPENDENT WORKSTATIONS IN A DATA PROCESSING SYSTEM.
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3033	G06F3033	G06F3038	G06F3048	G06F3048	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F3	G06F3	G06F3	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A dependent, nonprogrammable, character-based workstation terminal (DWS) supports a mouse. A terminal controller entirely within the DWS processes and displays mouse motions, but sends mouse button actuations, with the current mouse position, to a single workstation controller (WSC) handling many DWS'. The WSC processes the actuations according to a set of rules, and sends data streams to a main processor (MP) serving multiple WSCs. The MP executes user application programs, partially in response to data streams representing mouse events. The MP executes user application programs, partially in response to data streams representing mouse events. The MP may also send mouse rule sets to the WSCs in data streams.
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
IBM
</APPLICANT-NAME>
<APPLICANT-NAME>
IBM DEUTSCHLAND
</APPLICANT-NAME>
<APPLICANT-NAME>
IBM DEUTSCHLAND GMBH
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
EAGAN STEPHEN TROY
</INVENTOR-NAME>
<INVENTOR-NAME>
HORTON BUSBOOM LEAH J
</INVENTOR-NAME>
<INVENTOR-NAME>
KIEL HARVEY GENE
</INVENTOR-NAME>
<INVENTOR-NAME>
ROMON RAYMOND FRANCIS
</INVENTOR-NAME>
<INVENTOR-NAME>
VAN HEUKLON JEFFERY JOHN
</INVENTOR-NAME>
<INVENTOR-NAME>
EAGAN, STEPHEN, TROY
</INVENTOR-NAME>
<INVENTOR-NAME>
HORTON BUSBOOM, LEAH, J.
</INVENTOR-NAME>
<INVENTOR-NAME>
KIEL, HARVEY, GENE
</INVENTOR-NAME>
<INVENTOR-NAME>
ROMON, RAYMOND, FRANCIS
</INVENTOR-NAME>
<INVENTOR-NAME>
VAN HEUKLON, JEFFERY, JOHN
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
 D E S C R I P T I O NSUPPORT FOR A MOUSE OR SIMILAR POINTING DEVICE ON DEPENDENT WORKSTATIONS IN A DATA PROCESSING SYSTEMBackground of the InventionThe present invention relates to electronic data-processing systems, and more particularly concerns provision for using a pointing device such as a mouse in each of multiple character-based dependent workstations or dumb terminals controlled by a single processor or workstation controller.Interactive application programs and systems have undergone a swarm to more natural forms of user interaction. Personal computers and intelligent workstations are rife with informative display configurations and with non-keyboard input devices. The pointing device known as a mouse is especially favored by software and system designers. This device — and close cousins such as the trackball, the trackpoint, and the digitizing tablet — has a body which a user can move across a surface, and one or more buttons or other controls on the body which the user can actuate. Motion of the mouse produces a corresponding motion of a mouse cursor or similar symbol on the display screen which points to an element of the information on the screen. Actuation of a button signals the application program or some other part of the system to perform a function defined by the type of actuation and by the program. For example, a press and release (a "click") of a mouse's left button while the mouse cursor points to a data-entry display 

 field might signal the presentation-manager program of a personal computer to move a data cursor to that field. Two press-release cycles within a short time (a "double click") could transmit data entered in the entry field to the application program. Other actuations r such as "drag and drop" (moving the mouse with a button held down) are also known in the art. In the sequel, the term "mouse" will be used as a generic term including all such pointing devices.One large group of users has been left behind in the mass migration to pointing devices. Most idrange and mainframe computer systems connect to dozens, hundreds, or even thousands of inexpensive terminals known as dependent , nonprogrammable, or dumb terminals, which will be collectively referred to as DWSs. Such terminals do contain programmable microprocessors, but they do not themselves perform an application program for the user. Multiple DWSs may connect directly to the main processor of the system, or to a workstation controller (WSC) . One or more WSCs may connect locally or remotely to the main
</DESCRIPTION>
<CLAIMS>
C L A I M S
1. A data-processing system, comprising:
a main processor for executing multiple interactive user application programs;
at least one workstation controller, including
means for coupling said workstation controller to said main processor for transferring data streams between said workstation controller and respective ones of said application programs, certain of said data streams being mouse data streams responsive to mouse actuations by a user and actions defined by said application programs in response to said mouse actuations,
memory means for storing WSC data and program code,
a communications adapter for sending and receiving data frames, certain of said data frames being mouse-event data frames
a microprocessor executing said WSC program code for converting selected ones of said data streams into said data frames, and for converting selected ones of said mouse-button events into data streams and transmitting them to said main processor;
plurality of dependent character-oriented workstation 


 terminals all coupled to said one workstation controller, each of said terminals comprising
a display having specified rows and columns each capable of displaying one of a set of characters,
a keyboard for receiving individual keystrokes from a user,
a mouse having means for producing data representing movement events and button means for producing button events when actuated by said user,
a communications adapter for sending and receiving said data frames,
memory means for storing DWS data and program code,
a DWS microprocessor executing said DWS program code for processing received data frames so as to display specified ones of said characters at specified rows and columns of said display, for transmitting data frames representing said keystrokes, for storing a current mouse position in response to said mouse-movement events, and, in response to said mouse-button events, for transmitting said mouse-event data frames to said workstation controller.
2. The system of claim 1, wherein each of said mouse-button data frames contains a type of mouse-button event, and a specification of said current mouse position in terms of one of said 


 rows and one of said columns in said display.
3. The system of claim 2, wherein said mouse has a plurality of individually actuable button means, and wherein said mouse-event data frames further contain a specification of which of said button means was actuated by said user.
4. The system of one of claims 1 to 3, wherein said WSC memory contains logic specifying a set of actions associated with different ones of said mouse-event data frames, and wherein said WSC microprocessor performs said actions in response to said data frames from said dependent terminals.
5. The system of claim 4, wherein said main processor is responsive to at least one of said application programs for sending said logic to said workstation controller in one of said mouse data streams.
6. The system of claim 4 or 5, wherein said data frames contain a type of mouse event and a specification of said current mouse position, and wherein said logic is responsive both to said event type and to the location of said current position within one of a number of predefined fields on said display.
7. The system of claim 6, wherein said fields represent rows and columns of said display in which said user may enter data. 


 8. The system of claim 6, wherein said fields represent rows and columns of said display containing a construct defined by a data stream from said main processor.
9. The system of claim 8, wherein said construct is a scroll bar, and wherein said action comprises moving a plurality of characters on said display to different locations on said display in response to one of said mouse-button events.
10. The system of claim 8, wherein said construct is a menu bar, and wherein said action comprises displaying a menu of characters in relation to said menu bar in response to one of said mouse-button events.
11. The system of claim 8, wherein said construct is a plurality of selection boxes, and wherein said action comprises storing a plurality of selection choices from a plurality of said data frames in said WSC memory in response to a plurality of said mouse-button events.
12. The system of claim 11, wherein said WSC microprocessor is responsive to a predetermined keystroke subsequent to the storing of said selection choices for sending a data stream representing all said choices to said main processor.
13. The system of one of claims 4 to 12, wherein said logic is stored in said WSC memory independent of said application programs. 


 14. The system of claim 13, wherein said data frames contain a type of mouse event and a specification of said current mouse position, and wherein said logic is responsive both to said event type and to the location of said current position within one of a number of predefined fields on said display.
15. The system of claim 14, wherein a plurality of said actions cause said WSC microprocessor to interpret said mouse-button events as keystrokes from said keyboard of said terminal, and to send to said main processor a data stream representing said keystrokes.
16. The system of claim 15, wherein said WSC microprocessor sends data streams representing different keystrokes in response to said current location specified in said data frame.
17. The system of one of claims 4 to 16, wherein certain of said actions are performed in said workstation controller below the level of said main processor, such that said application programs execute independently of said certain actions.
18. The system of claim 17, wherein one of said actions causes said workstation controller to transmit a designated data frame to one of said DWS terminals, and wherein said one terminal thereafter transmits to said workstation controller a sequence of unique data frames representing said current position stored in said terminal memory. 


19. The system of claim 18, wherein said one terminal transmits said unique data frames at predetermined time intervals.
20. The system of claim 18 or 19, wherein another of said actions causes said workstation controller to transmit another designated data frame to said one DWS terminal, and wherein said one terminal thereafter transmits to said workstation controller said current position stored in said terminal memory only upon the occurrence of a mouse-button event.
21. A data-processing system, comprising:
a host processor for executing a plurality of interactive application programs;
at least one communications medium;
a plurality of dependent workstation terminals physically remote from said host processor and all connected thereto by said one communications medium, each said dependent workstation terminal including
a display having a limited number of discrete rows and columns each capable of displaying one of a set of characters, a keyboard for receiving individual keystrokes from a user,
a mouse having means for producing data representing movement events and button means for producing button events when actuated by said user. 


 a communications adapter for exchanging said data frames with said host processor on said one communications medium,
memory means for storing DWS data and program code,
a DWS microprocessor executing said DWS program code for receiving said data frames so as to display specified ones of said characters at specified rows and columns of said display, for transmitting data frames representing said keystrokes, for storing a current mouse position in response to said mouse-movement events, and, in response to said mouse-button events, for transmitting said mouse-event data frames to said workstation controller.
22. The system of claim 21, wherein each of said mouse-button data frames contains a type of mouse-button event, and a specification of said current mouse position in terms of one of said rows and one of said columns in said display.
23. The system of claim 22, wherein said mouse has a plurality of individually actuable button means, and wherein said mouse-event data frames further contain a specification of which of said button means was actuated by said user.
24. The system of one of claims 21 to 23, wherein a subset of said set of characters defines different individual parts of a construct displayable at certain row and column locations of said display. 


25. A character-based dependent workstation terminal for a data-processing system having a host processor for controlling a plurality of dependent workstation terminals simultaneously by means of data frames exchanged over a single communications medium, said dependent workstation terminal comprising:
a display for displaying a plurality of individual characters from a set of characters at each of a limited plurality of locations;
at least one enclosure physically separate and remote from said host processor;
a communications adapter coupled to said single communications medium;
a keyboard for receiving individual keystrokes from a user;
a mouse movable by said user for producing data representing mouse-movement events, and containing at least one button actuable by said user for producing data representing mouse-button events;
memory means for storing DWS data and code;
a DWS microprocessor executing said DWS program code for receiving said data frames from said workstation controller and displaying characters represented therein at locations specified in said data frames, for sending said individual keystrokes in separate ones of said data frames to 


 said workstation controller, for storing in said memory means a current location of said mouse in response to said data representing said mouse-movement events, and for sending, in response to said data representing said mouse-button events, mouse data frames encoding said mouse-button events.
26. The terminal of claim 25, wherein said limited plurality of locations are rows and columns on said display.
27. The terminal of claim 26, wherein one character of said set is a mouse cursor, and wherein said DWS microprocessor is responsive to said current location in said DWS memory to display said mouse cursor on said display at a row and column location specified by said current position.
28. The terminal of claim 26, wherein one character of said set is a text cursor, and wherein said DWS controller displays said text cursor at a row and column location on said display specified by one of said data frames received from said host processor.
29. The terminal of claim 28, wherein another, different character of said set is a mouse cursor, and wherein said DWS microprocessor is responsive to said current location in said DWS memory to display said mouse cursor on said display at a row and column location specified by said current position. 


 30. The terminal of one of claims 25 to 29, wherein each of said mouse-button data frames contains a type of mouse-button event, and a specification of said current mouse position in terms of one of said rows and one of said columns in said display.
31. The terminal of claim 30, wherein said mouse-event data frames represent a press, a release, and a click of said button means.
32. The terminal of claim 30 or 31, wherein said mouse-event data frames further represent a double click of said button means.
33. The terminal of claim 32, wherein said DWS microprocessor is responsive to a predetermined sequence of said keystrokes from said keyboard to set a maximum time interval representing a double click.
34. The terminal of one of claims 25 to 33, wherein said mouse has a plurality of said buttons, and wherein each of said mouse-event data frames contains a designation specifying one of said buttons.
35. The terminal of one of claims 25 to 34, wherein said DWS microprocessor is responsive to a predetermined one of said data frames from said workstation controller thereafter to transmit to said workstation controller a sequence of unique data frames representing said current position stored in said terminal memory. 


36. The terminal of claim 35, wherein said one terminal transmits said unique data frames at predetermined time intervals.
37. The terminal of claim 36, wherein another of said actions causes said workstation controller to transmit another designated data frame to said one DWS terminal, and wherein said one terminal thereafter transmits to said workstation controller said current position stored in said terminal memory only upon the occurrence of a mouse-button event. 

</CLAIMS>
</TEXT>
</DOC>
