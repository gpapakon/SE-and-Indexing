<DOC>
<DOCNO>EP-0631225</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Output method and apparatus
</INVENTION-TITLE>
<CLASSIFICATIONS>B41J2938	B41J530	G06K1500	G06K1500	B41J530	B41J2938	G06F312	G06F312	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>B41J	B41J	G06K	G06K	B41J	B41J	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>B41J29	B41J5	G06K15	G06K15	B41J5	B41J29	G06F3	G06F3	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
An output method and apparatus can receive data from 
any one of a plurality of host computers through 

respective interfaces or through a network. The output 
method and apparatus appropriately controls the receipt 

of data from a particular host computer in accordance 
with a time-out function and an interrupt function, and 

is able to control the processing of data at the end of 
the receipt of data. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
CANON KK
</APPLICANT-NAME>
<APPLICANT-NAME>
CANON KABUSHIKI KAISHA
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
FUKUDOME NAOBUMI
</INVENTOR-NAME>
<INVENTOR-NAME>
FUKUDOME, NAOBUMI
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to an output method and
apparatus which can appropriately switch its input from
among a plurality of interfaces and/or host computers.Recently,'printing devices have developed which have
the function of distinguishing when a break occurs in a
data stream from a host computer. In some cases after
receiving a start command, such a device starts its
processing and, if there is no reception of data for a
predetermined period, finishes processing and outputs
whatever data it has processed. On the other hand, in
some cases such a device is unable to finish processing
of data without receiving a stop command.International patent application WO 90/12359 already describes a
printing device which will only switch over to process data received
by a second interface after data processing for a first interface is completed.However, while an application program which can produce
a stop command after data processing is executed on a
host computer, if the host computer does not transmit 
data to a printing device for more than a predetermined
time in accordance with a user's direction, data
processing in the printing device is terminated, even
if this is not desired.Also if a host computer entrusts an end job to a
printing device and does not transmit a stop command
after transmitting a quantity of data processed in the
host computer, there can be problems. Specifically, if
the printing device needs more time than the computer's
time-out period for analyzing the data in a receiving
buffer in the printing device, the data processing of
both of the computer and the printing device cannot be
finished.Furthermore, some printing devices have been developed
which have plural interfaces each connected to a
respective host computer. If the printing device
changes from one interface to another interface after a
data process in the printing device is finished, and if
the device does not receive a stop command from a host
computer, the device cannot receive data from another
host computer through the other interface without
finishing the first data process.Some printing devices have also been developed which
have a network interface by which plural host computers
are connected with the printing devices. Here again
the printing device cannot receive data from another
host computer because if the printing device does not
receive a stop command, the device cannot change from
one host computer to another.The present invention is defined by the independent claims 1 and 7,
particular embodiments are
</DESCRIPTION>
<CLAIMS>
Output apparatus comprising:

a plurality of interfaces (
17, 18
) connected to
respective ones of a plurality of host computers (
2, 3) ;
control means (
11
) for selecting one of said
interfaces (
17, 18
) to receive data from the respective
host computer; and
output means (
15
) for outputting said received data,
characterized by

   setting means (
16
) for setting a finishing
prerequisite indicating whether or not a timeout-signal, indicative of data receival time-out, should be produced

during processing of data; and wherein
said control means (
11
) judges whether or not said
received data is in progress
 of being processed; wherein,

   if the finishing prerequisite indicates according to
the setting by said setting means that said timeout-signal should be produced

during processing of data, and if timeout has occurred, said
control means (
11
) finishes processing of data received
from a first interface, and starts processing of data

received from a second interface, and further,

   if the finishing prerequisite indicates according to
said setting by said setting means that said timeout-signal should not be produced

during processing of data,

      when said control means judges that processing
of data received from said first interface is in

progress, said control means does not start processing
of data from said second interface until processing of 

data received from said first interface is finished,
and,

      when said control means judges that processing
of data from said first interface is not in progress,

said control means starts processing of data from said
second interface after timeout has occurred.
Output apparatus according to claim 1, wherein

   said processing of data processes a series of data
which is started by a starting command for processing of

data and finished by a finishing command.
Output apparatus according to claim 1, wherein

   said output apparatus outputs remaining data after
finishing processing of data from said first interface.
Output apparatus according to any of the preceding
claims, further comprising

   counting means for counting the time said output
apparatus is in a predetermined condition, and wherein

timeout is caused, if said counted time is a predetermined
time.
Output apparatus according to claim 4, wherein

   said counting means counts the time during which there
exists the condition that data has not been received

through the first interface.
Output apparatus according to claim 4, wherein

   said counting means starts to count in case a hardware
interruption signal for a data reception is received

from an interface which is not in processing of data.
Output method comprising the steps of: 

connecting a plurality of interfaces (
17, 18
) to
respective ones of a plurality of host computers (
2, 3
);
selecting one of said interfaces (
17, 18
) by a control
means (
11
) to receive data from the respective host
computer; and
outputting said received data at an output means (
15
),
characterized by
 the steps of

   setting a finishing prerequisite indicating whether or
not a timeout-signal, indicative of data receival time-out, should be produced during processing of data using

setting means (
16
); and

   judging whether or not said received data is in
progress of being processed using control means (
11
); and,

   if the finishing prerequisite indicates according to
the setting step by said setting means that said timeout-signal should be

produced during processing of data, and if timeout has
occurred, finishing processing of data received from a

first interface, and starting processing of data received
from a second interface, and further,

   if the finishing prerequisite indicates according to
the setting step by said setting means that said timeout-signal should not be

produced during processing of data,

      when in said judging step is judged that
processing of data received from said first interface

is in progress, not starting with processing of data
from said second interface until processing of data

received from said first interface is finished, and,

      when in said judging step is judged that
processing of data of said first interface is not in

progress, starting processing of data from said second
interface after timeout has occurred.
Output method according to claim 7, wherein

   said processing of data processes a series of data
which is started by a starting command for processing of

data and finished by a finishing command. 
Output method according to claim 7, comprising a step of

   outputting remaining data after finishing
processing of data from said first interface.
Output method according to any of claims 7 to 9,
further comprising a step of

   counting the time said output method is in a
predetermined condition using a counting means, and then

causing timeout, if said counted time is a predetermined
time.
Output method according to claim 10, comprising the
step of

   counting the time during which there exists the
condition that data has not been received through the first

interface by said counting means.
Output method according to claim 10, comprising
the step of

   starting to count by said counting means in case a
hardware interruption signal for a data reception is received

from an interface which is not in processing of data.
</CLAIMS>
</TEXT>
</DOC>
