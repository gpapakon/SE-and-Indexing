<DOC>
<DOCNO>EP-0657810</DOCNO> 
<TEXT>
<INVENTION-TITLE>
User-definable interactive system
</INVENTION-TITLE>
<CLASSIFICATIONS>H04M1104	G06F946	G06F906	G08B3100	H04M3493	H04M1104	G06T1180	G06F948	G08B3100	G06T1180	H04M3487	G06F906	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04M	G06F	G06F	G08B	H04M	H04M	G06T	G06F	G08B	G06T	H04M	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04M11	G06F9	G06F9	G08B31	H04M3	H04M11	G06T11	G06F9	G08B31	G06T11	H04M3	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Method and apparatus for creating, 
editing, and processing an interactive system made 

up of event-actuated action items. In one aspect, 
an event interpreter for selecting action items for 

execution based on occurrences of events in an 
interactive system includes an input section by 

which the event interpreter receives a computer-usable 
signal indicating that an event has occurred, 

an event name generator for generating an event name 
based on the computer-usable signal, and an 

application selector for comparing the event name to 
the event identifier for action items stored in a 

file system and for selecting for execution an 
action item whose event identifier corresponds to 

the event name. In another aspect, the action items 
of the interactive system are displayed 

hierarchically using the file system 
presenter/editor. In this aspect of the invention, 

an interactive system application containing at 
least one event-actuatable action item is selected 

from the file system, a graphical representation of 
the at least one event-actuatable action item is 

displayed in a hierarchical arrangement, and an 
event identifier associated with the displayed 

action item of the selected interactive system 
application is displayed. The associated event 

identifier actuates the action item in response to 
the occurrence of a physical event corresponding to 

the event identifier. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
CANON KK
</APPLICANT-NAME>
<APPLICANT-NAME>
CANON KABUSHIKI KAISHA
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
PALMER DOUGLAS L
</INVENTOR-NAME>
<INVENTOR-NAME>
RAY RICHARD DOUGLAS
</INVENTOR-NAME>
<INVENTOR-NAME>
PALMER, DOUGLAS L.
</INVENTOR-NAME>
<INVENTOR-NAME>
RAY, RICHARD DOUGLAS
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention concerns a computer-implemented
interactive system in which a computer
can react to the occurrence of physical events by
selecting and processing a stored action item so as
to cause additional data processing or a controlled
hardware response. More specifically, the invention
is directed to an event interpreter which, based on
the physical event, selects and processes an action
item from a collection of action items which
together form the interactive system, as well as to
a method which uses the computer file system to
create, modify and view the action items in the
interactive system.Computer-controlled interactive systems
allow a computer to sense the occurrence of a 
physical event and to react to the physical event in
accordance with a stored application of predefined
responses, such as by performing specific data
processing or by controlling hardware equipment.
For example, in the case of an interactive voice
response (IVR) system, a computer can sense the
occurrence of an incoming call, respond by
controlling the telephone to go off-hook and by
playing out a series of user options, and can then
sense the occurrence of DTMF tone commands from the
caller and respond with appropriate data processing
and telephone hardware control sequences.Because of the complexity of interactive
systems, they are ordinarily designed by highly
trained software engineers using sophisticated and
complicated software programming techniques. And,
because the interactive systems must be created to
an end user's specifications, most interactive
systems are customized to that single user's
requirements and cannot easily be tailored to other
user's requirements. Thus, once an interactive
system has been designed and coded, if changes are
required, then either a new system must be written
or the old system must be revised by highly trained
software engineers at great expense.Recently, some interactive systems have
become available which allow their owner to make
minor modifications on his own. However, in these
cases the modification capability is itself a new
program which the owner must learn and, once
learned, it can only be used to modify the
interactive system and not for any other purpose.
Thus, current modification capabilities are
specifically tailored for their associated
interactive systems and cannot be used flexibly for
other interactive systems.PATENT ABSTRACTS OF JAPAN, vol. 16, nÂ° 355 (p-1394)
30 july 1992 discloses an event interpreter for selecting action items. In accordance with the
</DESCRIPTION>
<CLAIMS>
An event interpreter for use with a file system for
arranging files in a hierarchical structure of folders,

and for selecting action items for execution based on
occurrence of events in an interactive system, said event

interpreter comprising:

an interactive system application means accessible
by the file system, said interactive system application

means comprising event identifiers and action items, at
least one action item being associated with each event

identifier, each of said action items being user-definable
and capable of providing, upon being processed,

a software and/or a hardware response to a detected
event, and each of said event identifiers having a text-based

description displayable by the file system for
providing a user with a description of an event to which

an associated action item is intended to provide a
response;
event parser means (77) for causing the interactive
system application means to operate, for gathering event

identifiers in the interactive system application means,
and for parsing the event identifiers into a list of

event identifiers and associated action items;
event name generator means (75,76) for receiving a
computer-usable signal indicating an event has occurred

and for generating an event name based on the computer-usable
signal; and 
action item selector means (79) for comparing the
event name to event identifiers in the list of event

identifiers and associated action items, and, in the case
the event name matches an event identifier in the list

of event identifiers and associated action items, for
selecting from the file system an action item associated

with the matching event identifier and processing the
selected action item, and, in the case no match can be

found in the list for the event name, for ignoring the
event.
An event interpreter according to claim 1, further
comprising a display screen (35) for displaying by the

file system a graphical user interface which
hierarchically displays the action item, and wherein the

graphical user interface is used to manipulate and edit
the displayed action item.
An event interpreter according to claim 1, including
storage means (40) for storing the event identifiers as

folders in the file system, and for storing action items
within folders of corresponding event identifiers.
An event interpreter according to claim 1, including
an input section which includes at least one hardware

event interface (62, 63, 64) for monitoring signals from 
a plurality of hardware event detectors (75) to generate

said computer-usable signal.
An event interpreter according to claim 4, wherein
the at least one hardware event interface (62) is adapted

to monitor a telephone system.
An event interpreter according to claim 4, wherein
the at least one hardware event interface (64) is adapted

to monitor a security and fire detection system.
An event interpreter according to claim 1, wherein
the event name generator means is adapted to convert the

signal from the sending means by mapping the signal to
event names in an event-name map (76).
An event interpreter according to claim 1, including
a computer software interface (62, 63, 64) for receiving

an input signal from a hardware event interface and for
generating the computer-usable
 signal.
An event interpreter according to claim 1, further
comprising an action item processor (81) for processing

the selected action item and, in accordance with the
result of processing, for producing a controlled hardware

response signal to the occurrence of the physical event. 
An interactive system for use with a file system for
arranging files in a hierarchical structure of folders,

and for monitoring and for responding to events, the
interactive system comprising:


storage means (40) for storing a plurality of action
items in the file system, each action item being user-definable

and corresponding to an event identifier which
provides a user with a text-based description of at least

one event monitored in the interactive system to which
at least one corresponding action item is intended to

provide a response, the text-based description being
displayable to the user by the file system;
event parser means (77) for gathering the event
identifiers and for parsing the event identifiers into

a list of event identifiers and corresponding action
items;
event interface means (62,63,64) for detecting an
occurrence of at least one event and for outputting a

signal in response to the occurrence of an event;
name generator means (75,76) for receiving the
signal from the event interface and for generating an

event name based on the received signal; and
action item selector means (79) for matching the event
name to an event identifier in the list of event

identifiers and corresponding action items and for
selecting and for processing an action item from the file

system, the action item corresponding to an event 
identifier matching the generated event name, wherein the

action time, upon being processed, provides either
software or a hardware response or both a hardware and

a software response to the detected event.
An interactive system according to claim 10, further
comprising a display screen (35) for displaying by the

file system a graphical user interface which
hierarchically displays the action time, and wherein the

graphical user interface is used to manipulate and edit
the displayed action item.
An interactive system according to claim 10,
including storage means (40) for storing the event

identifiers as folders in the file system, and for
storing action items within folders of corresponding

event identifiers.
An interactive system according to claim 10, further
comprising a physical event detector (42,47,50) for

detecting a physical event and outputting an event
detection signal to the event interface upon the

occurrence of the physical event.
An interactive system according to claim 13, wherein
the name generators (75,76) is adapted to generate an 

event name by mapping the received signal into an event-name
map (76) of event names.
An interactive system according to claim 13, wherein
the physical event detector (42) is adapted to detect

physical events in a telephone system, and wherein, as
a result of the occurrence of the physical event, the

event interpreter (79) is adapted to cause a physical
response to be produced based on the processed action

item.
An interactive system according to claim 13, wherein
the physical event detector (42,47,50) is adapted to

detect physical events in a security system, and wherein,
as a result of the occurrence of physical event, the

event interpreter (79) is adapted to cause a physical
response to be produced based on the processed action

item.
An interactive system according to claim 10, further
comprising an action item builder (81) for creating and

editing action items to be stored in the file system,
wherein the action item builder (81) is adapted to

provide event identifers for each action item by which
the action item is actuated. 
An interactive system according to claim 10, wherein
the action items to be processed include at lest one of

voice data, text data, and image data.
An interactive system according to claim 10, wherein
action items are comprised by a folder, a document, or

an application.
A method executable on a computer having a file
system for arranging files in a hierarchical structure

of folders, said method for selectively processing action
items for execution based on occurrence of events in an

interactive system, said method comprising the steps of:

storing an interactive system application, said
interactive system application comprising event

identifiers and action items, at least one action item
being associated with each event identifier, each of said

action items being user-definable and capable of
providing, upon being processed, a software or a hardware

response or both a hardware and software response to a
detected event, and each of said event identifiers

providing a user with a text-based description of an
event displayable by the file system to which an

associated action item is intended to provide a response;
opening the interactive system application;
gathering event identifiers in the interactive
system application via an event parser; 
parsing, via the event parser, the event identifiers
into a list of event identifiers and associated action

items;
sending a computer-usable signal indicating that an
event has occurred to the event interpreter;
receiving the computer-usable signal at an event
name generator which generates an event name based on the

computer-usable signal; and
comparing, in an action item selector, the event
name to event identifiers in the list of event

identifiers and associated action items, wherein, in the
case the event name matches an event identifier in the

list of event identifiers and associated action items,
the method further comprises the step of selecting from

the file system an action item associated with the event
identifier and processing the selected action item, and

in the case no match can be found in the list for the
event name, the method further comprises the step of

ignoring the event.
A method according to claim 20, further comprising
a step performed by the file system of displaying a

graphical user interface which hierarchically displays
the action item, and manipulating and editing the

displayed action item via the graphical user interface. 
A method according to claim 20, further comprising
the steps of storing event identifiers as folders in the

file system, and storing action items within folders of
corresponding event identifiers.
A method according to claim 20, wherein the sending
step comprises monitoring signals from a plurality of

hardware event detectors and sending one of the signals
to the event interpreter.
A method according to claim 23, wherein the
monitoring step comprises monitoring a telephone system.
A method according to claim 23, wherein the
monitoring step comprises monitoring a security and fire

detection system.
A method according to claim 20, further comprising
the step of converting, via the event name generator, the

signal sent from the sending means by mapping the signal
to event name in an event-name map.
A method according to claim 20, further comprising
the step of generating the computer-usable signal via a

computer software interface which receives an input
signal from a hardware event interface. 
A method according to claim 20, further comprising
the step of processing the selected action item and, in

accordance with the result of processing, producing a
controlled hardware response signal in response to the

occurrence of the physical event.
A method executable on a computer having a file
system for arranging files in a hierarchical structure

of folders said method for monitoring and for responding
to events, said method comprising the steps of:


storing, in the file system, a plurality of action
items, each action item being user-definable and

corresponding to an event identifier which provides a
user with a text-based description of at least one event

monitored in the interactive system to which at least one
corresponding action item is intended to provide a

response, the text-based description being displayable
to the user by the file system;
gathering, in an event parser, the event identifiers
and parsing the event identifiers into a list of event

identifiers and corresponding action items;
detecting, over an event interface, an occurrence
of at least one event and outputting a signal in response

to the occurrence of an event;
receiving, at a name generator, the signal from the
event interface and generating an event name based on the

received signal; and 
matching, in an action item selector, the event name
to an event identifier in the list of event identifiers

and corresponding action items; and
selecting and processing an action item from the
file system, the action item corresponding to an event

identifer matching the generated event name, wherein the
action item, upon being processed, provides either a

software or a hardware response or both a hardware and
a software response to the detected event.
A method according to claim 29, further comprising
a step performed by the file system of displaying a

graphical user interface which hierarchically displays
the action item, and further comprising the steps of

manipulating and editing the displayed actin item.
A method according to claim 30, further comprising
the steps of storing event identifiers as folders in the

file system, and storing action items within folders of
corresponding event identifiers.
A method according to claim 29, further comprising
the steps of:


detecting a physical event via a physical event
detector; and
outputting an event detection signal to the event
interface upon the occurrence of the physical event.
A method according to claim 32, further comprising
the step of generating an event name by mapping the

received signal into an event-name map of event names.
A method according to claim 32, wherein the
detecting step comprises detecting physical events in a

telephone system, and wherein, as a result of the
occurrence of the physical event, producing a physical

response based on the processed action item.
A method according to claim 32, wherein the
detecting step comprises detecting physical events in a

security system, and wherein, as a result of the
occurrence of the physical event, producing a physical

response based on the processed action item.
A method according to claim 29, further comprising
the steps of creating and editing action items to be

stored in the file system, wherein the steps of creating
and editing provide event identifiers for each action

item by which the action item is actuated.
A method according to claim 29, wherein the action
items to be processed include at least one of voice data,

text data, and image data. 
A method according to claim 29, wherein the action
items are comprised by a folder, a document, or an

application.
A storage medium storing processor implementable
instructions for controlling a processor to carry out the

method of any one of claims 20 to 38.
</CLAIMS>
</TEXT>
</DOC>
