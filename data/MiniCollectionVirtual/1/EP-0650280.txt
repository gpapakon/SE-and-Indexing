<DOC>
<DOCNO>EP-0650280</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Data transmission method using a datastream
</INVENTION-TITLE>
<CLASSIFICATIONS>H04L12437	H04L12437	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04L	H04L	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04L12	H04L12	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method of data transmission for a set of data processing nodes (A, B, C) which are interconnected by a communications network (10), each node distributing data (A1, B1, C1, A'1) to the other nodes by making a train (120) of such data circulate on the network in a looped circuit passing through each of the said nodes, each node in the circuit having a predecessor and a successor, characterised in that a counter (101) is provided in the data train and in that each node, in response to the reception of a train of data sent by its predecessor, recovers the counter from the train of data received, increments the counter, sends a new data train to its successor including the incremented counter and records in memory the new data train including the incremented counter in such a way that a simple error-recovery procedure can be implemented in the event of failure of one of the nodes. 
<
IMAGE
>
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
CEGELEC
</APPLICANT-NAME>
<APPLICANT-NAME>
CEGELEC
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
EYCHENNE YVES
</INVENTOR-NAME>
<INVENTOR-NAME>
SIMATIC MICHEL
</INVENTOR-NAME>
<INVENTOR-NAME>
EYCHENNE, YVES
</INVENTOR-NAME>
<INVENTOR-NAME>
SIMATIC, MICHEL
</INVENTOR-NAME>
</INVENTORS>
<CLAIMS>
A method of transmitting data for a set of data processing nodes (A, B, C)
that are interconnected by a communications network (10) and for the

purpose of broadcasting data (A1; B1; C1; A'1) from each node to the other
nodes by causing a train (120) of such data to travel over the network around

a looped circuit or "ring" that passes through said data processing nodes in
succession in such a manner that each node in turn recovers, removes, and

writes data in the train, each node having a predecessor and a successor on
the ring and being capable of detecting a faulty state of its successor or of its

predecessor, the method being characterized in that prior to writing new data
to be broadcast in the train, each node begins by storing in its internal

memory the data of the train that it has just received, including the value of a
train header counter, it increments the value of this counter in its internal

memory, and it dispatches the train back over the network containing new
data to be broadcast and with an incremented value in the header counter,

and when a node detects (53) that its predecessor on the ring is in a faulty
state, it undertakes a procedure of searching (59) for a new predecessor on

the ring and of establishing a new ring for the train, and before proceeding to
store in its internal memory the data of the train that it has just received from

its new predecessor, it compares (52) the value of the counter in the header
of the received train with the value of the same counter as stored in its own

internal memory, and it dispatches (56, 57) over the network the train
containing said new data if the value of the counter in the header of the

received train is greater than the value of the counter as stored in its own
memory, otherwise, if the comparison gives the opposite result it waits (51) to

receive another data train.
The method according to claim 1, in which whenever a particular node has
detected (53) that its predecessor is in a faulty state and has established a

new ring for the train to travel, the predecessor of the faulty node dispatches
(55) over the network a train having the data and the counter value as stored

in its internal memory.
</CLAIMS>
</TEXT>
</DOC>
