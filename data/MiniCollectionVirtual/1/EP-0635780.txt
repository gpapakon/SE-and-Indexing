<DOC>
<DOCNO>EP-0635780</DOCNO> 
<TEXT>
<INVENTION-TITLE>
User interface having clickthrough tools that can be composed with other tools
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F3033	G06F1310	G06F3033	G06F3048	G06F1310	G06F3048	G06F314	G06F314	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F13	G06F3	G06F3	G06F13	G06F3	G06F3	G06F3	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A user interface technique operates in the environment of a processor-controlled 
machine for executing a program that operates on a set of underlying data and displays a 

visible representation (50,52) thereof. The system further provides a visual depiction (60) of a 
set of tools. The tools include clickthrough tools that can be combined with other tools 

(including other click-through tools) to provide composite tools. A click-through tool includes a 
generally transparent delineated active area (e.g. by using a cursor (55)), that is movable so 

that it can be placed over a desired portion of the visible representation. When the user 
interacts with the visible representation through the active area, the action takes on an 

attribute of the particular clickthrough tool. A click-through tool can be superimposed on 
another click-through tool, whereupon an action taken through the two click-through tools onto 

the visible representation takes on attributes of both tools. 

</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
XEROX CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
XEROX CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BIER ERIC A
</INVENTOR-NAME>
<INVENTOR-NAME>
BUXTON WILLIAM
</INVENTOR-NAME>
<INVENTOR-NAME>
STONE MAUREEN C
</INVENTOR-NAME>
<INVENTOR-NAME>
BIER, ERIC A.
</INVENTOR-NAME>
<INVENTOR-NAME>
BUXTON, WILLIAM
</INVENTOR-NAME>
<INVENTOR-NAME>
STONE, MAUREEN C.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to processor controlled machines such as
computers and more specifically to user interfaces for allowing a user to interact with the
machine.A frequent use of a processor-controlled machine such as a computer is to
communicate information to a user of the machine and accept information from the user,
thereby allowing the user to perform a specified task. Depending on the task at hand, the user
will often make use of a task-specific application program such as a word processor (sometimes
referred to as a text editor), a spreadsheet, a database, or a drawing program (sometimes
referred to as a graphics editor). A reference to a specific type of program or editor is not
intended to imply a stand-alone application program having only the particular functionality,
since many programs have more than one type of functionality.A typical application program consists of a set of instructions (the "application")
that are executed in response to input signals to create and modify associated data (sometimes
referred to as the underlying data). In many instances, this associated data is stored on a disk as
a data file (sometimes referred to as "the file"), and portions are read into memory during
program execution. For at least some applications, the data represents a document that is to be
viewed (e.g., printed or displayed on a screen), and the application allows a user to modify the
document.In many instances, a user provides at least some of the input signals through one or
more input devices, often a keyboard and a pointing device such as a mouse. By way of
background, a mouse is a device that is moved over a work surface, typically next to the
keyboard, and provides position signals so as to cause a cursor on the screen to move in
accordance with the mouse's movements. The cursor is a special symbol that is used by an
interactive program as a pointer or attention-focusing device. The mouse contains one or more
pushbutton switches ("buttons") to provide additional input signals, which may be interpreted
as part of a cursor event.A display device, typically a visual display device such as a cathode ray tube (CRT)
or a liquid crystal display (LCD), provides the user with information about the application and
the underlying data, and allows the user to generate appropriate input signals and thus control
the operation of the machine to produce the intended work product. The combination of input 
devices, display devices, and the nature of the information that the application
</DESCRIPTION>
<CLAIMS>
A method of providing interactivity between a computer system (10) and a
user, said method using tool-defining regions, each tool-defining region

corresponding to a tool that specifies at least in part a particular operation
that is performed in response to an event within said tool-defining region, at

least one of said tools having the property that, when said event occurs within that tool's tool-defining region at a given location relative to that tool's tool-defining region, the result of said operation on
said object may depend on the location of said event relative to said object, that tool

being referred to as a click-through tool, said method comprising:

displaying, on a display (22), a visual depiction (60, 62) of a first tool-defining
region corresponding to a first tool and a second tool-defining

region corresponding to a second tool, said second tool being a click-through
tool;
in response to a first user interaction, positioning said second tool-defining
region so as to form at least partially a region of overlap with

said first tool-defining region;
in response to a second user interaction, generating an event in said
region of overlap; and
performing an operation, referred to as a composite operation, that is
specified at least in part by said first and second tools in response to

said event within said region of overlap.
The method as claimed in claim 1, wherein:

   said first tool is a click-through tool.
The method as claimed in claim 1 or 2, wherein: 

an object is displayed on said display (22);
said composite operation is performed on said object in response to
said event within said region of overlap; and
said composite operation includes the operation specified by said first
tool and the operation specified by said second tool.
The method as claimed in claim 1 or 2, wherein:

said first tool specifies an object property;
said second tool specifies the creation of a particular type of object;
and
said composite operation results in the creation of an object having said

object property.
The method as claimed in claim 1 or 2, wherein:

said first tool specifies a first object property;
said second tool specifies a second object property;
said event within said region of overlap is characterized by position
information that specifies a particular existing object; and
said composite operation results in said existing object having said first
object property and said second object property.
The method as claimed in claim 1, wherein:

   said first tool is a conventional tool.
The method as claimed in claim 1 or 6, wherein:

said first tool has the property that the result of said operation does not
depend on said location of said event within said first tool-defining

region; 
the result of a cursor event within said first tool-defining region places
said cursor in a mode wherein a subsequent set of cursor events results

in the creation of a particular type of object;
said second tool specifies a particular object property; and
said composite operation places said cursor in a mode wherein a
subsequent set of cursor events results in the creation of an object of

the type specified by the first tool, said object having said object
property.
A computer system (10) providing interactivity to a user, said computer
system (10) using tool-defining regions, each tool-defining region

corresponding to a tool that specifies at least in part a particular operation
that is performed on an object in response to an event within said tool-defining

region, at least one of said tools having the property that, when said event occurs within that tool's tool-defining region at a given location relative to that tool's tool-defining region, the result
of said operation on said object may depend on the location of said event relative to

said object, that tool being referred to as a click-through tool, said
computer system (10) comprising:


means (22) for displaying a visual depiction (60, 62) of a first tool-defining
region corresponding to a first tool and a second tool-defining

region corresponding to a second tool, said second tool being a click-through
tool;
means (12) for positioning said second tool-defining region so as to
form at least partially a region of overlap with said first tool-defining

region;
means (27, 30) for generating a set of signals in response to a user
interaction;
means, responsive to said set of signals, for generating an event within
said region of overlap; and 
means (12) for performing an operation, referred to as a composite
operation, that is specified at least in part by said first and second tools

in response to said event within said region of overlap.
</CLAIMS>
</TEXT>
</DOC>
