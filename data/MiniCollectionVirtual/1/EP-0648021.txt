<DOC>
<DOCNO>EP-0648021</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Time domain algebraic encoder/decoder.
</INVENTION-TITLE>
<CLASSIFICATIONS>H03M1300	H03M1300	H03M1315	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H03M	H03M	H03M	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H03M13	H03M13	H03M13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
Apparatus for encoding and decoding the Alternant 
code family including three parallel special purpose 

Galois Field processors, and a timing and control unit. 
The special purpose processors jointly process a time 

domain algorithm relatively independently of the timing 
and control unit, and are adapted so that each step of the 

time domain algorithm is handled by one or more of the 
processors. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
HUGHES AIRCRAFT CO
</APPLICANT-NAME>
<APPLICANT-NAME>
HUGHES AIRCRAFT COMPANY
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MAYHEW GREGORY L
</INVENTOR-NAME>
<INVENTOR-NAME>
MAYHEW, GREGORY L.
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The disclosed invention generally relates to encoding 
and decoding the Alternant code family. The Alternant 
code family includes the Goppa, Strivastava, Bose-Chaudhuri-Hocquenghem 
(BCH), and Reed-Solomon classes of 
codes. The disclosed invention is particularly directed 
to techniques for time domain encoding and decoding the 
linear, cyclic, error correcting codes of the Alternant 
family, such as the BCH and Reed-Solomon codes. The transmission of information over a communications 
channel generally results in a received signal which 
includes the original information and distortions. Such 
distortions may result in loss of information content in 
the received signal and, therefore, errors in the received 
signal. Various techniques have been developed over the 
years for the purpose of increasing the probability of 
error-free transmission. A particular approach to increasing the probability 
of error-free transmission has been directed to coding 
techniques which provide for the detection of errors and, 
to varying degrees, the correction of some or all detected 
errors. Such coding techniques generally involve the 
inclusion of redundant information based on the data to be 
transmitted. Generally, encoding would involve performing 
operations on the data to yield a code word which includes 
the data information and the redundant information.  Encoding and decoding techniques often apply to only 
one code within a family rather than to all codes within a 
family. However, in the Alternant code family, the 
decoder techniques originally developed just for BCH codes 
also can decode the other code classes within the Alternant 
family. Therefore, the remaining discussion focuses 
on BCH codes while being applicable to all members of the 
Alternant code family. A well-known approach to decoding BCH codes is set 
forth in "The Technology of Error Correcting Codes," E.R. 
Berlekamp, Proceedings of the IEEE, Vol. 68, No. 5, May 
1980, p. 588. Disclosed therein is a special purpose 
microprogrammable Galois Field computer which generally 
includes an addressing/control unit, a microcode memory 
unit, and an arithmetic unit. U.S. Patent 4,162,480, issued to Berlekamp on July 
24, 1979, is directed to a special purpose Galois Field 
computer which includes an address generator, a control 
unit and an arithmetic unit. U.S. Patent 4,251,875, issued to Marver et al. on 
February 17, 1981, is directed to implementation of Galois 
multiplication using binary logic devices. U.S. Patent 4,413,339, issued to
</DESCRIPTION>
<CLAIMS>
A process for decoding a received data vector 
having n symbols and determined to include e erasures at 

known locations and being based on a known code generator 
polynomial which is capable of correcting t errors given 

that e erasures occurred, comprising the steps of: 
   iteratively calculating intermediate components 

of a time domain syndrome vector of the received 
data vector and intermediate components of an 

erasure vector for the iterations j=0 to j=e, so as 
to provide the erasure vector at the iteration j=e; 

   continuing the iterative calculation of the 
intermediate time domain syndrome vector components 

and estimating from the erasure vector intermediate 
components of an errata locator vector for the 

iterations j=e to j=2t, so as to provide the time 
domain syndrome vector and the errata locator vector 

at the iteration j=2t; 
   iteratively calculating from the time domain 

syndrome vector intermediate components of an 
extended time domain syndrome vector for the iterations 

j=2t+1 to j=n to provide an extended syndrome 
vector at the iteration j=n; and 

   adding the extended syndrome vector to the 
received data vector to provide a corrected received 

data vector. 
The process of Claim 1 wherein the step of 
iteratively calculating the intermediate time domain syndrome 

vector components and the intermediate erasure 
vector components comprises the steps of: 

   initializing the intermediate syndrome vector 
components with the received data vector components, 

 
and initializing the intermediate erasure vector 

components with predetermined initial components; 
   multiplying the intermediate syndrome vector 

components by predetermined factors to provide the 
intermediate syndrome vector components for the next 

iteration; 
   providing adjusted versions of the intermediate 

erasure vector components; and 
   adding respective adjusted versions of the 

intermediate erasure vector components to the 
intermediate erasure vector components to provide 

the intermediate erasure vector components for the 
next iteration. 
The process of Claim 2 wherein the predetermined 
factors for the intermediate syndrome vector components 

include roots of the Galois Field GF(pm), where p is 
prime and m is the number of digits in the vector representation 

of the Galois Field elements. 
The process of Claim 2 wherein the adjusted 
versions of the intermediate erasure vector components are 

determined pursuant to the locations of the erasures in 
the received data vector. 
The process of Claim 1 wherein the step of 
continuing and estimating include the steps of: 

   calculating a discrepancy constant based on the 
intermediate errata vector components and the 

intermediate syndrome vector components, wherein the 
intermediate errata vector components at the iteration 

j=e comprise the erasure vector components; 
   adding respective adjusted versions of update 

vector components to the intermediate errata vector 
 

components to provide the intermediate errata vector 
components for the next iteration, the update vector 

components at the iteration j=e comprising the 
erasure vector components; and 

   calculating update vector components for the 
next iteration pursuant to a predetermined condition. 
The process of Claim 5 wherein the step of 
calculating the discrepancy constant includes the step of 

summing respective products of corresponding intermediate 
errata vector and intermediate syndrome vector components. 
The process of Claim 5 wherein the step of 
calculating the update vector components includes the 

steps of: 
   determining the existence of a predetermined 

condition wherein the discrepancy constant is not 
equal to zero and twice the number of errors located 

is less than or equal to a predetermined value, 
where the number of errors is initially zero; 

   dividing the intermediate errata vector components 
by the discrepancy constant to provide the 

update vector components for the next iteration of j 
and updating the number of errors located if the 

predetermined condition is met; and 
   dividing the update vector components by predetermined 

factors to provide the update vector components 
for the next iteration of j if the predetermined 

condition is not met. 
The process of Claim 7 wherein the predetermined 
factors include corresponding elements of the Galois 

Field GF(pm) where p is prime and m is the number of 
digits in the vector representation of the Galois Field 

elements. 
The process of Claim 1 wherein the step of 
extending the syndrome vector includes the steps of: 

   subtracting a calculated value from the intermediate 
extended syndrome vector components; and 

   multiplying the sum components by predetermined 
factors to provide for the intermediate extended 

syndrome vector components for the next iteration. 
The process of Claim 9 wherein the calculated 
value is calculated by summing respective products of 

corresponding errata vector components and intermediate 
syndrome vector components. 
The process of Claim 1 further including the 
step of reconstructing the received data vector from 

intermediate syndrome vector components at the iteration 
j=2t+1. 
A decoder apparatus responsive to a received 
data vector having a plurality of symbols and being based 

on a predetermined encoding polynomial, comprising: 
   first processing means responsive to the 

received data vector for iteratively calculating 
intermediate components of a time domain syndrome 

vector of the received data vector to provide a 
syndrome vector, and further for extending 
the 
syndrome vector to provide an extended syndrome 

vector;
 

   second processing means for storing iteratively 
calculated intermediate components of an erasure 

vector and iteratively calculated intermediate components 
of an errata vector, and for providing the 

errata vector, and further for calculating a discrepancy 
constant based on each iteration of said 

intermediate syndrome vector components; each iteration 
of said intermediate syndrome vector components 

and said errata vector components; each iteration of 
said intermediate extended syndrome vector components 

and said errata vector components; 
   third processing means for iteratively calculating 

said intermediate erasure vector components 
based on the number and locations of erasures in the 

received data vector to provide an erasure vector, 
and for iteratively calculating said intermediate 

errata vector components as a function of said 
erasure vector and the number and locations of 

errors found, and further to calculate intermediate 
errata update vector components based on adjustment 

factors on either the intermediate components of the 
errata vector or of the previous errata update 

vector, and to provide an errata vector; and 
   control means for controlling the operations of 

said first, second, and third processing means. 
The decoder apparatus of Claim 12 wherein first 
processing means comprises: 

   means for recirculating and storing intermediate 
syndrome and extended syndrome components; and 

   means for multiplying intermediate syndrome and 
extended syndrome vector components by predetermined 

factors to provide intermediate syndrome vector 
components for the next iteration. 
The decoder apparatus of Claim 12 wherein said 
second processing means comprises: 

   means for multiplying corresponding intermediate 
syndrome vector components and intermediate 

erasure vector components to provide first component 
products; 

   means for multiplying corresponding intermediate 
syndrome vector components and intermediate 

erasure vector components to provide second component 
products; 

   means for multiplying corresponding intermediate 
syndrome vector components and intermediate 

erasure vector components to provide third component 
products; and 

   means for accumulating said component products 
to provide said discrepancy constant. 
The decoder apparatus of Claim 12 wherein said 
third processing means comprises: 

   means for storing predetermined vector components, 
said predetermined components being a replica 

of intermediately calculated components of said 
erasure vector for the iterative calculation of said 

erasure vector; 
   means for respective calculating adjustment 

factors for said predetermined vector components as 
a function of the location of the erasures of the 

received codeword; 
   means for multiplying said predetermined vector 

components by corresponding adjustment factors and 
for adding the resulting products to corresponding 

intermediate erasure vector components to provide 
erasure vector components for the next iteration; 

and
 

   means for dividing and storing intermediate 
errata vector components by said discrepancy constant 

for providing errata update vector components 
for the next iteration; and 

   means for dividing and storing intermediate 
update vector components by predetermined factors of 

GF(pm) for providing errata update vector components 
for the next iteration. 
</CLAIMS>
</TEXT>
</DOC>
