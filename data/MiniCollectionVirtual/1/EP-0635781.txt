<DOC>
<DOCNO>EP-0635781</DOCNO> 
<TEXT>
<INVENTION-TITLE>
User interface having simultaneously movable tools and cursor
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F314	G06F3033	G06F1310	G06F3038	G06F314	G06F3048	G06F3048	G06F3033	G06F1310	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F3	G06F3	G06F13	G06F3	G06F3	G06F3	G06F3	G06F3	G06F13	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A user interface technique operates in the environment of a processor-controlled 
machine for executing a program that operates on a set of underlying data (50,52) and displays 

a visible representation thereof. The user simultaneously and independently moves the visible 
representation (60) of a set of tools with one hand, normally the nondominant hand (e.g., a 

right-handed user's left hand) and operates on the visible representation with the other, 
normally the dominant hand. In a specific implementation, the input devices include a 

trackball (30) for positioning the tools and a mouse (27) for positioning a cursor (55) and 
initiating actions. 


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
XEROX CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
XEROX CORPORATION
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
BIER ERIC A
</INVENTOR-NAME>
<INVENTOR-NAME>
BUXTON WILLIAM
</INVENTOR-NAME>
<INVENTOR-NAME>
BIER, ERIC A.
</INVENTOR-NAME>
<INVENTOR-NAME>
BUXTON, WILLIAM
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates generally to processor controlled machines such as
computers and more specifically to user interfaces for allowing a user to interact with the
machine.A frequent use of a processor-controlled machine such as a computer is to
communicate information to a user of the machine and accept information from the user,
thereby allowing the user to perform a specified task. Depending on the task at hand, the user
will often make use of a task-specific application program such as a word processor (sometimes
referred to as a text editor), a spreadsheet, a database, or a drawing program (sometimes
referred to as a graphics editor). A reference to a specific type of program or editor is not
intended to imply a stand-alone application program having only the particular functionality,
since many programs have more than one type of functionality.A typical application program consists of a set of instructions (the "application")
that are executed in response to input signals to create and modify associated data (sometimes
referred to as the underlying data). In many instances, this associated data is stored on a disk as
a data file (sometimes referred to as "the file"), and portions are read into memory during
program execution. For at least some applications, the data represents a document that is to
be viewed (e.g., printed or displayed on a screen), and the application allows a user to modify
the document.In many instances, a user provides at least some of the input signals through one or
more input devices, often a keyboard and a pointing device such as a mouse. By way of
background, a mouse is a device that is moved over a work surface, typically next to the
keyboard, and provides position signals so as to cause a cursor on the screen to move in
accordance with the mouse's movements. The cursor is a special symbol that is used by an
interactive program as a pointer or attention-focusing device. The mouse contains one or more
pushbutton switches ("buttons") to provide additional input signals, which may be interpreted
as part of a cursor event.A display device, typically a visual display device such as a cathode ray tube (CRT) or
a liquid crystal display (LCD), provides the user with information about the application and the
underlying data, and allows the user to generate appropriate input signals and thus control the
operation of the machine to produce the intended work product. The combination of input
devices, display devices, and the nature of the information that the application
</DESCRIPTION>
<CLAIMS>
A method of providing interactivity between a computer system (10) and a
user, said method comprising the steps of:


displaying an object on a display (22);
displaying, on said display (22), a visual depiction (60, 62) of a tool-defining

region, said tool-defining region corresponding to a tool;
positioning said tool-defining region relative to said displayed object
(50, 52) in response to a first user interaction with a first user-actuated

device (25, 27, 30);
positioning a cursor (55) relative to said displayed object (50, 52) and
said tool-defining region in response to a second user interaction with a

second user-actuated device (25, 27, 30); and
performing an operation that is specified at least in part by said tool in
response to a cursor event within said tool-defining region.
The method as claimed in claim 1, wherein the step of displaying said visual
depiction (60, 62) is performed as part of an application program.
The method as claimed in claim 1 or 2, wherein said first user-actuated
device (25, 27, 30) is a trackball.
The method as claimed in one of claims 1 to 3, wherein said second user-actuated
device (25, 27, 30) is a mouse.
The method as claimed in one of claims 1 to 4, wherein at least one of said
user-actuated devices (25, 27, 30) is a set of keyboard keys. 
The method as claimed in one of claims 1 to 5, wherein said tool has the
property that

when said cursor event occurs within said tool-defining region at a given location relative to said tool-defining region,
the result of said operation may depend on the

location of said cursor event relative to said object, said tool being
referred to as a click-through tool.
The method as claimed in one of claims 1 to 5, wherein said tool has the
property that

when said cursor event occurs within said tool-defining region at a given location
relative to said tool-defining region,

the result of said operation does not depend on
the location of said cursor event relative to said object, said tool

being referred to as a conventional tool.
A computer system (10) providing interactivity to a user, said computer
system (10) comprising:


means (22) for displaying an object, a visual depiction (60, 62) of a tool-defining
region corresponding to a tool, and a cursor (55);
a first user-actuated device (25, 27, 30) for generating a first set of
signals in response to a first user interaction;
means (12) for positioning said tool-defining region relative to said
displayed object (50, 52) in response to said first set of signals;
a second user-actuated device (25, 27, 30) for generating a second set
of signals in response to a second user interaction;
means (12) for positioning said cursor (55) relative to said displayed
object (50, 52) and said tool-defining region in response to said second

set of signals; and
means (12) for performing an operation that is specified at least in part
by said tool in response to a cursor event within said tool-defining

region.
The computer system (10) as claimed in claim 8, wherein said tool and said
cursor (55) are simultaneously and independently positionable. 
The computer system (10) as claimed in claim 8 or 9, wherein said visual
depiction (60, 62) is displayed as part of an application program.
The computer system (10) as claimed in one of claims 8 to 10, wherein said
first user-actuated device (25, 27, 30) is a trackball.
The computer system (10) as claimed in one of claims 8 to 11, wherein said
second user-actuated device (25, 27, 30) is a mouse.
The computer system (10) as claimed in one of claims 8 to 12, wherein at
least one of said user-actuated devices (25, 27, 30) is a set of keyboard

keys.
The computer system (10) as claimed in one of claims 8 to 13, wherein said
tool has the property that

when said cursor event occurs within said tool-defining region at a given location
relative to said tool-defining region,

the result of said operation may depend
on the location of said cursor event relative to said object, said tool

being referred to as a click-through tool.
The computer system (10) as claimed in one of claims 8 to 13, wherein said
tool has the property that

when said cursor event occurs within said tool-defining region at a given location
relative to said tool-defining region,

the result of said operation does not
depend on the location of said cursor event relative to said object,

said tool being referred to as a conventional tool.
</CLAIMS>
</TEXT>
</DOC>
