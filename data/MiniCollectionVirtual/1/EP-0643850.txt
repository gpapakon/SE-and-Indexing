<DOC>
<DOCNO>EP-0643850</DOCNO> 
<TEXT>
<INVENTION-TITLE>
EVENT QUALIFICATION AND NOTIFICATION
</INVENTION-TITLE>
<CLASSIFICATIONS>G06F948	G06F954	G06F946	G06F946	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>G06F	G06F	G06F	G06F	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>G06F9	G06F9	G06F9	G06F9	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
A method and apparatus for event handling in a computer environment is disclosed. The present invention provides applications programs with a mechanism for establishing a template, called an event qualifier network, which monitors the occurrence of an event or specific combination of events, along with virtually any other qualifying condition specified by the application. In response to the occurrence of such events and conditions, the event qualifier network notifies the application that its "desired event" has occurred, whereupon the application may then take the appropriate action. The event qualifier networks of the present invention can be quickly and simply built to monitor arbitrarily complex combinations of events and events in combination with other conditions.
</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
OBJECT TECH LICENSING CORP
</APPLICANT-NAME>
<APPLICANT-NAME>
OBJECT TECHNOLOGY LICENSING CORP.
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
MA YIN-SHUR DAVID
</INVENTOR-NAME>
<INVENTOR-NAME>
MA, YIN-SHUR, DAVID
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The present invention relates to the field of
computer operating systems and general application
software, and more particularly to a method and an
apparatus for controlling the communication of
events between an operating system and its
application programs.Computer programs are, in essence, a series of
instructions that direct the operation of a
computer. In general, a program performs the
functions either of an operating system, which
controls the interaction of the various components
of the computer relatively independent of the use
to which the computer is being put, or of an
application which is designed to accomplish a
specific task or tasks (e.g., word processing,
spreadsheet, etc.)Many operating system programs and virtually
all application programs provide for, and in fact
require, user interaction with the program. The
scheme used to facilitate the user's interaction
with the computer is referred to as the user
interface.Popular common user interfaces employ windows,
which are discrete regions of the screen in which
elements are displayed, and user interaction with
the computer program may occur, scroll bars for 
scrolling up or down within a window, menus for
selecting commands, icons representing applications
and documents, etc. In conjunction with a
program's user interface, hardware devices are
provided for interaction with the programs.
Examples of such hardware devices include a
keyboard, a mouse, a disk drive, a network
interface card, etc. The Macintosh line of
computers from Apple Computer Inc. of Cupertino,
California, operate with such a user interface and
with such hardware.Many modern application programs operate by
looping repeatedly through the program,
periodically polling the operating system software
for an indication that at least one "event" has
occurred. Events generally represent user activity
via one or more of the hardware devices, but can
also represent actions generated independently by
external hardware devices, as well as internal
"messages" sent by a system or application program.When the application learns (by polling the
system) that an event has occurred, the application
must determine whether the event is of a type in
which it is "interested" (i.e., an event in
response to which the application program desires
to perform some action), and if so, what action
needs to be taken in response to that event. Since
the application will not do anything until an event
is encountered, this type of application is
referred to as "event driven."Examples of user-generated
</DESCRIPTION>
<CLAIMS>
A method for determining, on behalf of an
application program (50), when a specified combination of

logically related events has occurred, said method comprising
the following steps:


providing an event qualifier network ("EQN") (56),
the EQN (56) specifying a logical relationship among the

combination of events, the logical relationship comprising a
plurality of logical qualifiers, each one of said logical

qualifiers qualifying a group of one or more of the events,
and wherein at least two of the logical qualifiers correspond

to different logic functions;
registering an interest, on behalf of the
application program, in being notified when the logical

relationship specified by the EQN (56) has been satisfied;
detecting the occurrence of each of the events;
notifying the EQN (56) of each said occurrence;
determining when the logical relationship among the
combination of events specified by the EQN (56) is satisfied;
notifying the application program (50) when the
specified logical relationship among the combination of

events has been satisfied, the logical relationship specified
by the EQN (56) among the combination of events being

characterized by
 
comprising a qualifying condition corresponding to a proximity

in time between two or more of the events.
The method of claim 1, wherein the logical
qualifiers correspond to logic functions selected from the

group comprising logical AND, logical OR, and logical NOT.
The method of claim 1, characterised in that the
logical relationship specified by the EQN (56) among the

combination of events further comprises a qualifying
condition corresponding to a sequence in which two or more of

the events occur.
The method of claim 1, characterised in that the
logical relationship specified by the EQN (56) among the

combination of events further comprises a qualifying
condition corresponding to a location at which one or more of

the events occurs.
The method of claim 1, further characterised by the
steps of registering an interest with an event manager (66)

on behalf of the EQN (56) in being notified when each event
occurs.
The method of claim 1, characterised in that the
step of detecting the occurrence of each event, the step of

notifying the EQN (56) of each occurrence, and the step of 
determining when the logical relationship among the

combination of events is satisfied, are all performed without
the dedication of any application program execution time.
The method of claim 1, characterised in that the
method is performed using a computer system, and wherein the

logical relationship specified by the EQN (56) among the
combination of events further comprises a logical relation

between one or more of the events and a qualifying condition
corresponding to the computer system being in a specified

state.
An apparatus for determining, on behalf of an
application program (50), when a specified combination of

logically related events has occurred, said apparatus
comprising:


an event qualifier network ("EQN") (56) specifying
a logical relationship among the combination of events, the

logical relationship comprising a plurality of logical
qualifiers, each one of said logical qualifiers qualifying a

group of one or more of the events, and wherein at least two
of the logical qualifiers correspond to different logic

functions;
means for registering an interest with the EQN
(56), on behalf of the application program (50), in being 

notified when the logical relationship specified by the EQN
(56) has been satisfied;
event manager means (56) for detecting the
occurrence of each of the events, and for notifying the EQN

(56) of each said occurrence;
means for determining when the logical relation
among the combination of events specified by the EQN (56) is

satisfied;
means for notifying the application program when
the specified logical relationship among the combination of

events has been satisfied, the logical relationship specified
by the EQN (56) among the combination of events being characterized by

comprising a qualifying condition corresponding to a proximity
in time between two or more of the events.
The apparatus of claim 8, characterised in that the
logical qualifiers correspond to logic functions selected

from the group comprising logical AND, logical OR, and
logical NOT.
The apparatus of claim 8, characterised in that the
logical relationship specified by the EQN (56) among the

combination of events further comprises a qualifying
condition corresponding to a sequence in which two or more of

the events occur. 
The apparatus of claim 8, characterised in that the
logical relationship specified by the EQN (56) among the

combination of events further comprises a qualifying
condition corresponding to a location at which one or more of

the events occurs.
The apparatus of claim 8, characterised in that the
means for detecting the occurrence of each event, the means

for notifying the EQN (56) of each occurrence, and the means
for determining when the logical relationship among the

combination of events is satisfied, all operate without the
dedication of any application program execution time.
</CLAIMS>
</TEXT>
</DOC>
