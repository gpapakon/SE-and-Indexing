<DOC>
<DOCNO>EP-0991290</DOCNO> 
<TEXT>
<INVENTION-TITLE>
Portable or mobile radio and method of loading data into a radio
</INVENTION-TITLE>
<CLASSIFICATIONS>H04W822	H04W824	</CLASSIFICATIONS>
<CLASSIFICATIONS-THIRD>H04W	H04W	</CLASSIFICATIONS-THIRD>
<CLASSIFICATIONS-FOURTH>H04W8	H04W8	</CLASSIFICATIONS-FOURTH>
<ABSTRACT>
The invention concerns a portable- or a mobile radio 110, a method of loading data
into a radio and a method of updating data in a radio.
The blocks of data (350, 360, 370, 450, 460, 470) in the codeplug 112 of the radio
110 are structured such that data first incorporated in the codeplug of the present

version of the radio is stored separately from data first incorporated in the
corresponding block of data in the codeplug of an earlier version of the radio. This

sub-division enables a Radio Service Software (RSS) to download data from the
codeplug, manipulate parts of the data which it can recognise and return

unrecognised data (454) to the codeplug unchanged. The invention provides a
codeplug 112 which is 'backwards compatible' with old versions of the RSS.
The codeplug 112 may also contain information (352, 452) about the size and/or
structure of the blocks of data in the codeplug. The RSS can use this information

as an 'index' to the codeplug's contents.
The invention also encompasses a method of loading data into the codeplug 112,
and a method (230, 232) of updating data in the codeplug.


</ABSTRACT>
<APPLICANTS>
<APPLICANT-NAME>
MOTOROLA GMBH
</APPLICANT-NAME>
<APPLICANT-NAME>
MOTOROLA GMBH
</APPLICANT-NAME>
</APPLICANTS>
<INVENTORS>
<INVENTOR-NAME>
LEHR BERND JURGEN
</INVENTOR-NAME>
<INVENTOR-NAME>
TETZ KLAUS MARTIN
</INVENTOR-NAME>
<INVENTOR-NAME>
LEHR, BERND JURGEN
</INVENTOR-NAME>
<INVENTOR-NAME>
TETZ, KLAUS MARTIN
</INVENTOR-NAME>
</INVENTORS>
<DESCRIPTION>
The invention concerns a portable- or a mobile radio. The invention also concerns 
a method of loading data into such a radio. Portable or mobile radios, henceforth 'radios', facilitate two-way communication 
between their users. These radios usually contain programmable memory 
elements. Such programmable memory elements may contain data about the 
radio model and/or specific data relating to that individual radio unit. This data 
typically relates, for example, to the channel frequencies on which the radio may 
operate. Such data is stored in a part of the radio called the 'codeplug'. The 
'codeplug' is a specific area of memory, often consisting of Programmable Read-Only 
Memory (ROM), which can be over-written, i.e. reprogrammed. A portable computer (PC) can be used to change the programmable data of the 
radio. The user of the radio usually takes the radio to a radio dealer to do this, and 
might typically require the dealer to programme new radio channels into the 
radio's codeplug. The PC needs a specific piece of software to change the data in 
the radio. This software is called the Radio Service Software, or 'RSS'. In order to change the programmable data of the radio, the data needs to be read 
into the PC from the radio. Before the RSS gets access to the data stored in the 
radio's codeplug, the radio model number and the version of the data storage in the 
radio need to be checked by the RSS. The version of the data storage is critical to 
this checking. In practice, the RSS held by a particular dealer may be older than 
the radio which the user wants to reprogram, and the version of the data storage 
in the radio may well be too recent for the RSS to recognise it. The codeplug version number is in fact changed whenever a new programmable 
feature is available for the radio. Usually this means that newly manufactured 
radios are given the new codeplug version number, which distinguishes them from  
 
radios manufactured prior to introduction of the new feature. When such a new 
feature becomes available, the structure of the codeplug is also changed. This will 
happen several times during the product life-cycle. This means that a newly built 
radio often cannot be used with an old RSS version held by a dealer. Likewise, a 
radio which has been up-dated in mid-life may not be serviceable by a version of 
the RSS that could be used with that radio when it was new. In short, changes to a 
codeplug can usually not be foreseen by the RSS. When an RSS detects a newer, un-supported, version of the
</DESCRIPTION>
<CLAIMS>
A portable- or a mobile radio comprising a codeplug, wherein: 

the codeplug stores blocks of data relating to the radio model and/or blocks of data 
relating specifically to that individual radio unit; 
one or more of the blocks of data in the codeplug contains both data first 
incorporated in the codeplug of the present version of the radio, and data first 

incorporated in a corresponding block of data in the codeplug of an earlier version 
of the radio; 
the said one or more blocks of data are structured such that data first 
incorporated in the codeplug of the present version of the radio is stored separately 

from data first incorporated in the corresponding block of data in the codeplug of 
the earlier version of the radio; and 
the codeplug contains information about the size and/or structure of at least one of 
the blocks of data in the codeplug. 
A radio in accordance with claim 1 wherein, in said one or more blocks of data, 
the data first incorporated in the codeplug of the present version of the radio is 

stored in locations sequentially following data first incorporated in the 
corresponding block of data in the codeplug of the earlier version of the radio. 
A radio in accordance with claim 1 or claim 2, wherein the information about the 
size and/or structure of the said at least one block of data in the codeplug is 

updateable. 
A radio in accordance with any previous claim, wherein the codeplug contains 
indexing information about the size and/or structure of all the blocks of data in the 

codeplug. 
A method of loading data into the codeplug of a portable- or a mobile radio, 
comprising the steps of: 


loading into the codeplug blocks of data relating to the radio model and/or loading 
into the codeplug blocks of data relating specifically to that individual radio unit, 

one or more of the blocks of data loaded into the codeplug containing both data 
first incorporated in the codeplug of the present version of the radio, and data first 

incorporated in a corresponding block of data in the codeplug of an earlier version 
of the radio; 
structuring the said one or more blocks of data such that the data first 
incorporated in the codeplug of the present version of the radio is stored separately 

from the data first incorporated in the corresponding block of data in the codeplug 
of the earlier version of the radio; and 
loading into the codeplug information about the size and/or structure of at least 
one of the blocks of data in the codeplug. 
A method in accordance with claim 5, wherein in said one or more blocks of data, 
the data first incorporated in the codeplug of the present version of the radio is 

stored in locations sequentially following data first incorporated in the 
corresponding block of data in the codeplug of the earlier version of the radio. 
A method in accordance with claim 5 or claim 6, wherein the information about 
the size and/or structure of the said at least one block of data in the codeplug is 

updateable. 
A method in accordance with any of claims 5-7, wherein indexing information 
about the size and/or structure of all the blocks of data in the codeplug is loaded 

into the codeplug. 
A method of updating data in the codeplug of a portable- or a mobile radio by 
means of a software program in a computer external to the radio, comprising the 

steps of: 

determining the codeplug version number; 
deciding whether or not the software program fully supports the codeplug with the 
determined version number, and either: 


(a) if the software program fully supports the codeplug with the determined 
version number, then in sequence: 


(i) downloading the data from the codeplug to the computer; 
(ii) updating the data from the codeplug; 
(ii) uploading the updated data into the codeplug from the computer; 
 
or, 
(b) if the software program cannot fully support the codeplug with the determined 
version number, then in sequence: 


(i) downloading the data from the codeplug to the computer; 
(ii) updating those blocks or sub-blocks of the downloaded data recognised by the 
software program, whilst leaving unrecognised blocks or sub-blocks of data 

unchanged; 
(iii) uploading both the updated blocks or sub-blocks of data and the unchanged 
blocks or sub-blocks of data into the codeplug from the computer. 
The method of claim 9, further comprising the step of updating indexing 
information in the codeplug about the size and/or structure of the blocks of data in 

the codeplug. 
</CLAIMS>
</TEXT>
</DOC>
