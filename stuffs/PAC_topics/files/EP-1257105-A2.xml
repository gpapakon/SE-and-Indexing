<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE patent-document PUBLIC "-//MXW//DTD patent-document XML//EN" "http://www.ir-facility.org/dtds/patents/v1.4/patent-document.dtd">
<patent-document ucid="EP-1257105-A2" country="EP" doc-number="1257105" kind="A2" lang="EN" family-id="26698270" status="new" date-produced="20090516" date="20021113">
  <bibliographic-data>
    <publication-reference ucid="EP-1257105-A2" status="new" fvid="23617101">
      <document-id status="new" format="original">
        <country>EP</country>
        <doc-number>1257105</doc-number>
        <kind>A2</kind>
        <date>20021113</date>
      </document-id>
    </publication-reference>
    <application-reference ucid="EP-02253216-A" status="new" is-representative="NO">
      <document-id status="new" format="epo">
        <country>EP</country>
        <doc-number>02253216</doc-number>
        <kind>A</kind>
        <date>20020508</date>
      </document-id>
    </application-reference>
    <priority-claims status="new">
      <priority-claim ucid="US-2428101-A" status="new">
        <document-id status="new" format="epo">
          <country>US</country>
          <doc-number>2428101</doc-number>
          <kind>A</kind>
          <date>20011221</date>
        </document-id>
      </priority-claim>
      <priority-claim ucid="US-28982201-P" status="new">
        <document-id status="new" format="epo">
          <country>US</country>
          <doc-number>28982201</doc-number>
          <kind>P</kind>
          <date>20010510</date>
        </document-id>
      </priority-claim>
    </priority-claims>
    <technical-data status="new">
      <classifications-ipcr>
        <classification-ipcr status="new">H04L  25/02        20060101A I20051008RMEP        </classification-ipcr>
        <classification-ipcr status="new">H04L  25/02        20060101C I20051008RMEP        </classification-ipcr>
        <classification-ipcr status="new">H04L  25/03        20060101A I20060722RMEP        </classification-ipcr>
        <classification-ipcr status="new">H04L  25/03        20060101C I20060722RMEP        </classification-ipcr>
        <classification-ipcr status="new">H04L  27/26        20060101A I20051008RMEP        </classification-ipcr>
        <classification-ipcr status="new">H04L  27/26        20060101C I20051008RMEP        </classification-ipcr>
      </classifications-ipcr>
      <classification-ecla status="new">
        <classification-symbol scheme="EC">H04L  25/03B1A5</classification-symbol>
        <classification-symbol scheme="ICO">T04L25:03B11C9</classification-symbol>
        <classification-symbol scheme="ICO">T04L25:03B13F1T</classification-symbol>
        <classification-symbol scheme="ICO">T04L25:03B15A3A</classification-symbol>
        <classification-symbol scheme="ICO">T04L27:26M5</classification-symbol>
      </classification-ecla>
      <invention-title load-source="ep" status="new" lang="DE">Entzerrung für ADSL unter Verwendung eines gemischten Zeit- und Frequenzbereichverfahrens</invention-title>
      <invention-title load-source="ep" status="new" lang="EN">Equalization for ADSL using a mixed time domain and frequency domain approach</invention-title>
      <invention-title load-source="ep" status="new" lang="FR">Egalisation pour LDNA utilisant une approche combinée dans les domaines temporel et fréquentiel</invention-title>
    </technical-data>
    <parties>
      <applicants>
        <applicant status="new" format="epo">
          <addressbook>
            <name>IND TECH RES INST</name>
            <address>
              <country>TW</country>
            </address>
          </addressbook>
        </applicant>
        <applicant status="new" format="intermediate">
          <addressbook>
            <name>INDUSTRIAL TECHNOLOGY RESEARCH INSTITUTE</name>
          </addressbook>
        </applicant>
        <applicant status="new" format="original">
          <addressbook>
            <last-name>Industrial Technology Research Institute</last-name>
            <address>
              <street>Bldg. 51, 195-11, Section 4, Chung Hsing Road</street>
              <city>Chutung, Hsinchu</city>
              <country>TW</country>
            </address>
          </addressbook>
        </applicant>
      </applicants>
      <inventors>
        <inventor status="new" format="epo">
          <addressbook>
            <name>WANG BOR-MIN</name>
            <address>
              <country>CN</country>
            </address>
          </addressbook>
        </inventor>
        <inventor status="new" format="epo">
          <addressbook>
            <name>WANG CHIH-CHI</name>
            <address>
              <country>CN</country>
            </address>
          </addressbook>
        </inventor>
        <inventor status="new" format="epo">
          <addressbook>
            <name>WU AN-YEU</name>
            <address>
              <country>CN</country>
            </address>
          </addressbook>
        </inventor>
        <inventor status="new" format="intermediate">
          <addressbook>
            <name>WANG, BOR-MIN</name>
          </addressbook>
        </inventor>
        <inventor status="new" format="intermediate">
          <addressbook>
            <name>WANG, CHIH-CHI</name>
          </addressbook>
        </inventor>
        <inventor status="new" format="intermediate">
          <addressbook>
            <name>WU, AN-YEU</name>
          </addressbook>
        </inventor>
        <inventor status="new" format="original">
          <addressbook>
            <last-name>WANG, BOR-MIN</last-name>
            <address>
              <street>6th., No. 402, Sec. 3, Chung-Hsing Road</street>
              <city>Chu-Tung, Hsin-Chu, Taiwan</city>
              <country>CN</country>
            </address>
          </addressbook>
        </inventor>
        <inventor status="new" format="original">
          <addressbook>
            <last-name>WANG, CHIH-CHI</last-name>
            <address>
              <street>109, Sec. 2, Da-Fu Road, Da-Fu Village</street>
              <city>Tan-Tsu 427, Taichung, Taiwan</city>
              <country>CN</country>
            </address>
          </addressbook>
        </inventor>
        <inventor status="new" format="original">
          <addressbook>
            <last-name>WU, AN-YEU</last-name>
            <address>
              <street>No. 5F, No. 130, Hsing Yun St., Na-Hu 114</street>
              <city>Taipei, Taiwan</city>
              <country>CN</country>
            </address>
          </addressbook>
        </inventor>
      </inventors>
      <agents>
        <agent status="new" format="original">
          <addressbook>
            <last-name>Smith, Samuel Leonard</last-name>
            <address>
              <street>J.A. Kemp &amp;amp; Co., 14 South Square, Gray's Inn</street>
              <city>LONDON WC1R 5JJ</city>
              <country>GB</country>
            </address>
          </addressbook>
        </agent>
      </agents>
    </parties>
    <international-convention-data>
      <designated-states>
        <ep-contracting-states>
          <country>AT</country>
          <country>BE</country>
          <country>CH</country>
          <country>CY</country>
          <country>DE</country>
          <country>DK</country>
          <country>ES</country>
          <country>FI</country>
          <country>FR</country>
          <country>GB</country>
          <country>GR</country>
          <country>IE</country>
          <country>IT</country>
          <country>LI</country>
          <country>LU</country>
          <country>MC</country>
          <country>NL</country>
          <country>PT</country>
          <country>SE</country>
          <country>TR</country>
        </ep-contracting-states>
      </designated-states>
    </international-convention-data>
  </bibliographic-data>
  <abstract load-source="ep" status="new" lang="EN">
    <p>A method for training a time-domain equalizer having at least one
coefficient that includes estimating a channel, initializing the at least one
coefficient of the time-domain equalizer, updating the at least one coefficient
of the time-domain equalizer with the estimated channel, retaining the
updated estimated channel, fixing the updated value of the at least one
coefficient of the time-domain equalizer for at least a one-symbol duration,
calculating a modulated symbol based on an output of the time-domain
equalizer, calculating a second value for the estimated channel based on the
modulated symbol, setting the estimated channel to the second value, and
repeating the step of updating the time-domain equalizer through the step of
setting the estimated channel to the second value until a predetermined
condition has been met.
<img id="img-00000001" orientation="unknown" wi="143" img-format="tif" img-content="ad" file="00000001.tif" inline="no" he="91"/></p>
  </abstract>
  <description load-source="ep" status="new" lang="EN">
    <p num="0001">This invention pertains in general to a Discrete Multi-Tone
(DMT) modulation/demodulation technique for the Asymmetric Digital
Subscriber Line (ADSL) technology and, more particularly, to an improved
Time-domain Equalizer (TEQ) algorithm for the DMT
modulation/demodulation technique.</p>
    <p num="0002">The Asymmetric Digital Subscriber Line (ADSL) technology
enables high speed transmission of data over existing twisted-pair copper
telephone lines, and provides the necessary bandwidth for fast access to the
Internet and improved performance of other applications such as video
conferencing. ADSL systems implement a number of
modulation/demodulation schemes, and the ANSI T1 committee has made
the Discrete Multi-Tone (DMT) algorithm the standard
modulation/demodulation scheme for ADSL systems. The DMT algorithm
divides, in the frequency domain, an available broadband channel into a
number of orthogonal sub-channels. The standard ANSI ADSL system
provides 256 frequency channels for downstream data and 32 channels for
upstream data.</p>
    <p num="0003">A DMT transceiver that executes the DMT algorithm implements
channel equalization through a Time-domain Equalizer (TEQ) and a
Frequency-domain Equalizer (FEQ). Data are encoded and modulated with
fast Fourier transform (FFT), and demodulated with inverse FFT (IFFT).
Every transformed symbol of the data consists of N samples and includes a
cyclic prefix (CP) 1/16 symbols in length. The CP separates the symbols in
time to eliminate Inter-Symbol Interference (ISI). However, the CP also
decreases the data bit rate of the system. Figure 1 shows an implementation
of a TEQ, also referred to as a Shortened Impulse Response Filter, to a
channel and the resultant channel response. The TEQ is implemented in a 
DMT transceiver to shorten the channel response to a pre-defined length. At
the output of the TEQ, linear convolution of processed signals and an
equalized channel may be represented mathematically as circular
convolution. The frequency response of the equalized channel is
compensated by multiplying each of the FFT coefficients with the inverse of
the channel response.</p>
    <p num="0004">[004] Fig. 2 shows a block diagram of a known TEQ training
algorithm. Referring to Fig. 2, h(n) and w(n) represent coefficients of a
channel and the TEQ, respectively. The target channel is an arbitrary Finite
Impulse Response (FIR) filter having <i>v</i> + 1 taps and a coefficient b(n). The
goal of the TEQ is to equalize the channel so that the cascade of h(n) and
w(n) equals b(n) as shown by the following equation:
<st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">h(n)*w(n) = δ(n - d)*b(n)</st32:df>
The parameter d represents channel delay.</p>
    <p num="0005">TEQ training algorithms may be divided into one of two
categories -- off-line and on-line. Off-line training algorithms require complex
matrix computations and therefore are generally more complex than on-line
training algorithms. Thus, on-line training algorithms are considered more
suitable for practical implementations. Frequency-domain Least-Mean-Square
(FLMS) and Time-domain LMS (TLMS) algorithms are examples of
on-line training algorithms. Each of FLMS and TLMS algorithm incorporates
an LMS algorithm to estimate TEQ coefficients as data are received. In the
FLMS algorithm, coefficients of a target channel and the TEQ are updated
simultaneously in the frequency domain for each DMT training symbol. Fig. 3
is a block diagram of the FLMS algorithm. Referring to Fig. 3, X(k) and Y(k)
represent the FFT of the received symbol, y(n), and training symbol, x(n),
respectively, wherein k = 0 to N-1. W<sub>i</sub>(k) and B<sub>i</sub>(k) are FFT coefficients of w(n)
and b(n), respectively, in the frequency domain after the i<sup>th</sup> update. For each
symbol, the training algorithm performs the following in the frequency domain:
<img id="img-00020001" orientation="unknown" wi="119" img-format="tif" img-content="mf" file="00020001.tif" inline="no" he="20"/>
B(k) and W(k) are then transformed and demodulated to the time domain and
windowing is performed after each update. In other words, the principle 
updating process of the FLMS algorithm is to update in the frequency domain
and window in the time domain. To operate in the frequency domain,
however, the FLMS algorithm requires several FFT/IFFT transform
calculations to transform the coefficients between time and frequency
domains. As a result, the FLMS algorithm is very complex.</p>
    <p num="0006">In contrast, the TLMS algorithm updates b(n) and w(n)
simultaneously in the time domain. Fig. 4 is a block diagram of the TLMS
algorithm. Referring to Fig. 4, the TEQ and the target channel are L-tap and
(v + 1)-tap FIR filters, respectively. The TLMS algorithm incorporates the
LMS algorithm to update coefficients of w(n) and b(n) simultaneously. At the
beginning of the TEQ training sequence, the coefficients of w(n) and b(n) are
set to initial values, and the following calculations are performed on each
incoming sample:
<st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">e(n)=b<st32:sup pos="post"><st32:italic>T</st32:italic></st32:sup><st32:sub pos="post">n</st32:sub>x<st32:sub pos="post">n</st32:sub> -w<st32:sup pos="post"><st32:italic>T</st32:italic></st32:sup><st32:sub pos="post">n</st32:sub>y<st32:sub pos="post">n</st32:sub></st32:df><st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">b<st32:sub pos="post">n+1</st32:sub> = <st32:sup pos="post">b</st32:sup> <st32:sub pos="post">n</st32:sub> -µ<st32:sub pos="post">b</st32:sub>e(n)x<st32:sub pos="post">n</st32:sub></st32:df><st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">w<st32:sub pos="post">n+1</st32:sub> = w<st32:sub pos="post">n</st32:sub> + µ<st32:sub pos="post">w</st32:sub>e(n)y<st32:sub pos="post">n</st32:sub></st32:df>
If the step sizes, µ<sub>b</sub> and µ<sub>w</sub>, and the initial values of w(n) and b(n) are chosen
properly, the coefficients of TEQ and target channel will converge to the target
solution quickly.</p>
    <p num="0007">In general, the TLMS algorithm converges faster than the FLMS
algorithm. However, the TLMS updating procedures are performed for every
sample, and therefore the algorithm is still very complex, especially for a
long-tap TEQ.</p>
    <p num="0008">In accordance with the invention, there is provided a method
for training a time-domain equalizer having at least one coefficient that
includes estimating a channel, initializing the at least one coefficient of the
time-domain equalizer, updating the at least one coefficient of the time-domain
equalizer with the estimated channel, retaining the updated estimated
channel, fixing the updated value of the at least one coefficient of the time-domain
equalizer for at least a one-symbol duration, calculating a modulated
symbol based on an output of the time-domain equalizer, calculating a second 
value for the estimated channel based on the modulated symbol, setting the
estimated channel to the second value, and repeating the step of updating the
time-domain equalizer through the step of setting the estimated channel to the
second value until a predetermined condition has been met.</p>
    <p num="0009">In one embodiment, the step of updating the time-domain
equalizer includes updating the time-domain equalizer with a least-mean-square
algorithm.</p>
    <p num="0010">In another embodiment, there includes a step of fixing the
updated value of the at least one coefficient of the time-domain equalizer for
at least a two-symbol duration.</p>
    <p num="0011">Also in accordance with the present invention, there is provided
an asymmetric digital subscriber line system including a transmitted signal
having a plurality of training symbols that includes a channel for receiving the
transmitted signal, a target channel for receiving the transmitted signal, a first
mixer coupled to the channel for receiving an output of the channel, a time-domain
equalizer coupled to the first mixer to receive an output of the first
mixer, the time-domain equalizer including a plurality of coefficients, a first
modulator coupled to the time-domain equalizer to provide a first modulated
signal, a channel estimator, coupled to the first modulator to receive the first
modulated signal, providing an estimated channel to the target channel, and a
second mixer, coupled to receive the output of the time-domain equalizer and
an output of the target channel, providing an output to the time-domain
equalizer.</p>
    <p num="0012">In one embodiment, the first modulator includes a first encoder
coupled to received an output of the time-domain equalizer, and a first Fast
Fourier Transform means coupled to the first encoder to provide the first
modulated signal.</p>
    <p num="0013">In another embodiment, the first mixer provides circular
convolution between the channel and the training symbols of the transmitted
signal.</p>
    <p num="0014">In yet another embodiment, the channel estimator delays the
estimated channel by at least one symbol.</p>
    <p num="0015">In still another embodiment, the channel estimator delays the
estimated channel by at least two symbols. </p>
    <p num="0016">Additionally in accordance with the present invention, there is
provided a discrete multi-tone transceiver that includes a channel estimator
for receiving a first modulated signal and a second modulated signal,
including a first calculating means for estimating an effective channel in the
frequency domain based on the first and second modulated signals, an
inverse Fast Fourier Transform means coupled to the first calculating means
for converting the effective channel to the time domain, and a rectangular
windowing means coupled to the inverse Fast Fourier Transform means for
providing a rectangular windowing function on the effective channel in the
time domain to limit the estimated channel to v+1 samples.</p>
    <p num="0017">In one embodiment, the first calculating means includes a
divider for dividing the first modulated signal from the second modulated
signal.</p>
    <p num="0018">In another embodiment, the first calculating means includes a
memory for storing an inverse value of the second modulated signal, and a
multiplier for multiplying the first modulated signal with the inverse of the
second modulated signal.</p>
    <p num="0019">In accordance with the present invention, there is additionally
provided a method for training a time-domain equalizer having at least one
coefficient that includes receiving a first modulated signal, receiving a second
modulated signal, estimating an effective channel in the frequency domain
based on the first and second modulated signals, converting the effective
channel to the time domain, and rectangular windowing of the effective
channel in the time domain to limit the estimated channel to v+1 samples.</p>
    <p num="0020">In one embodiment, there also includes a step of normalizing
an energy of the estimated channel in the time domain.</p>
    <p num="0021">Additional objects and advantages of the invention will be set
forth in part in the description which follows, and in part will be obvious from
the description, or may be learned by practice of the invention. The objects
and advantages of the invention will be realized and attained by means of the
elements and combinations particularly pointed out in the appended claims.</p>
    <p num="0022">It is to be understood that both the foregoing general
description and the following detailed description are exemplary and
explanatory only and are not restrictive of the invention, as claimed. </p>
    <p num="0023">The accompanying drawings, which are incorporated in and
constitute a part of this specification, illustrate several embodiments of the
invention and together with the description, serve to explain the principles of
the invention.
<sl><li>Figure 1 shows a known implementation of a TEQ and its effect
on the channel response;</li><li>Figure 2 is a block diagram of an implementation of a TEQ
training algorithm;</li><li>Fig. 3 is a block diagram of the FLMS algorithm;</li><li>Fig. 4 is a block diagram of the TLMS algorithm;</li><li>Fig. 5 is a block diagram consistent with one embodiment of the
present invention;</li><li>Fig. 6 is a block diagram consistent with another embodiment of
the present invention;</li><li>Fig. 7 is a block diagram of a channel estimator consistent with
the present invention;</li><li>Fig. 8 is a diagram comparing the computational complexity of
two known training algorithms with the TF-TEQ algorithm of the present
invention; and</li><li>Fig. 9 is a block diagram showing a simulation environment for
the present invention.</li></sl></p>
    <p num="0024">Reference will now be made in detail to the present
embodiments of the invention, examples of which are illustrated in the
accompanying drawings. Wherever possible, the same reference numbers
will be used throughout the drawings to refer to the same or like parts.</p>
    <p num="0025">The present invention is directed to an on-line TEQ training
algorithm implemented in mixed time and frequency domains and is
hereinafter referred to as the Time-and-Frequency domain TEQ (TF-TEQ)
algorithm. The first step of the TF-TEQ algorithm estimates a channel h(n)
and initializes TEQ coefficients w(n) to [1 0 0 ... 0]. The energy of the 
channel E<sub>ch</sub> is also calculated. The next step of the TF-TEQ algorithm is to
update the TEQ using an LMS algorithm. A temporary vector <b>b_tmp</b> is
provided to retain updated estimated channel h<sub>est</sub> (n). The TF-TEQ algorithm
then fixes the TEQ coefficients w(n) for the duration of one DMT symbol while
the DMT symbol is provided to the TEQ. A modulated symbol, Y(k), and the
estimated channel h<sub>est</sub> (n) are calculated. The temporary vector <b>b_temp</b> is
set to equal to <b>h</b><sub>est,</sub> wherein <b>h</b> <sub>est</sub> is the matrix of h<sub>est</sub> (n). The TF-TEQ algorithm
of the present invention is then repeated starting from the step of updating the
TEQ until predetermined design criteria have been met.</p>
    <p num="0026">Fig. 5 is a block diagram consistent with one embodiment of the
present invention. Referring to Fig. 5, a DMT transceiver 10 includes a
channel 12 and a target channel 14. A transmitted signal x(n) is received by
channel 12 and target channel 14. Channel 12 is coupled to a first mixer 16
that receives an output of channel 12 and white noise v(n). First mixer 16 is
coupled to a TEQ 18 that provides an output y(n) to a first serial to parallel
encoder (S/P) 20 and a second mixer 30. First S/P 20 is coupled to a first
Fast Fourier Transform (FFT) 22 that provides a modulated output Y(k). A
feedback loop is created between TEQ 18 and second mixer 30. Second
mixer 30 receives the output y(n) of TEQ 18 and substrates the output y(n)
from an output d(n) of target channel 14. Second mixer 30 then provides the
result to TEQ 18.</p>
    <p num="0027">DMT transceiver 10 also includes a second S/P 24 that received
the transmitted signal x(n). Second S/P 24 is coupled to a second FFT 26
coupled to a channel estimator 28. Second FFT provides a modulated output
XLK. Channel estimator 28 receives the outputs of first FFT 22 and second
FFT 26, and provides an output h<sub>est</sub> to target channel 14.</p>
    <p num="0028">In operation, a transmitter (not shown) sends the transmitted
signal x(n), which includes a plurality of repeating training symbols to channel
12, wherein n = 0 to N-1, and N represents the number of samples. The
repeating symbols form a periodic signal. Circular convolution of the
transmitted signal is performed with channel 12, which may be represented
mathematically as h(n). The output u(n) of first mixer 16 is obtained from
circular convolution of the transmitted signal and the channel, and the addition
of the white noise v(n) as follows: <st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">u(n) = h(n) ⊗x(n) + v(n)</st32:df></p>
    <p num="0029">Channel estimator 28 performs an immediate estimation of an
effective channel h<sub>eff</sub> for each update to expedite convergence to the effective
channel, which may be obtained from circular convolution of the channel and
coefficients of TEQ 18 as follows:
<st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">h<st32:sub pos="post">eff</st32:sub>(n) = h(n)<st32:sub pos="post">est</st32:sub> ⊗ w(n)</st32:df>
The estimated channel h(n)<sub>est</sub> provided by channel estimator 28 is obtained by
setting the coefficients of the target channel to h(n)<sub>est</sub>, and then applying the
LMS algorithm to update theTEQ coefficients w(n) according to the updated
coefficient h<sub>est</sub> (n). Channel estimator 28 therefore provides a close
estimation of the effective channel to increase the rate of convergence.</p>
    <p num="0030">An adaptive filtering algorithm is used to train TEQ 18 according
to known training sequences to provide the equalized signal y(n). As shown
by the following equation, the equalized signal y(n) is obtained as the circular
convolution between the effective channel h<sub>eff</sub> and the training symbols x(n),
and the addition of the white noise v(n).
<st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">y(n) = h<st32:sub pos="post">eff</st32:sub>(n)⊗x(n) + v(n)</st32:df>
The estimation of the effective channel h<sub>eff</sub> should ideally be performed where
w(n) is fixed. However, when the adaptive filtering algorithm is used to train
TEQ 18, w(n) varies with time. Hence, the training of the present invention is
divided into two contiguous phases: channel-estimating and
channel-updating. Each phase lasts for a duration of one DMT symbol. At
the channel-estimating phase, the TEQ coefficients are fixed for the duration
of filtering one DMT symbol, or 512 samples according to the ADSL
standards. At the end of the channel-estimating phase, channel estimator 28
calculates an estimated channel h<sub>est</sub> (n). Referring again to Fig. 5, the
equalized signal y(n) is provided by TEQ 18 to first S/P 20, which is coupled
to first FFT 22. After FFT, the equation for obtaining the equalized signal y(n)
becomes
<st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">Y(k) ≅ H<st32:sub pos="post">eff</st32:sub>(k)X(k)</st32:df>
wherein Y(k), H<sub>eff</sub>(k), and X(k) are the FFT of y(n), h<sub>eff</sub>(n), and x(n),
respectively. The Fast Fourier Transform of v(n) is negligible when the
transformed equalized signal Y(k) is observed over a long period of time. The 
FFT/IFFT calculations may be carried out with existing embedded FFT/IFFT
modules to further simplify the implementation of the present invention. The
effective channel may therefore be estimated as follows:
<st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">H<st32:sub pos="post">eff</st32:sub>(k) = Y(k)/X(k)</st32:df>
After channel estimator 28 calculates the estimated channel h<sub>est</sub> (n), TEQ 18
enters the channel-updating phase.</p>
    <p num="0031">TEQ 18 is updated sample-by-sample, and the LMS algorithm is
performed on each sample. In one embodiment, TEQ 18 is an L-tap adaptive
FIR filter. Referring to Fig. 5, the output of target channel 14 during the
channel-updating phase is d(n) for n = 0, 1 ... 511. The tap-input vector u(n)
of TEQ 18 at time n may be represented as follows:
<st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">u(n) = [u(n)u(n - 1) ...u(n - L + 2) u(n-L+1)]<st32:sup pos="post">T</st32:sup></st32:df>
Therefore, the weight of the L-tap FIR filter may be updated for every sample
by using the LMS algorithm as follows:
<st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">e(n) = d(n) - y(n)</st32:df><st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">d(n) = x<st32:italic><st32:sup pos="post">T</st32:sup></st32:italic>(n)b</st32:df><st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">y(n) = u<st32:italic><st32:sup pos="post">T</st32:sup></st32:italic>(n)w(n)</st32:df><st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">e(n) = d(n) - u<st32:italic><st32:sup pos="post">T</st32:sup></st32:italic>(n)w(n)</st32:df><st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">w(n +1) = w(n) + µ<st32:sub pos="post">w</st32:sub>u(n)e*(n)</st32:df>
wherein <b>w</b>(n) = [w<sub>0</sub>(n) w<sub>1</sub>(n) ... w<sub>L-1</sub>(n)]<sup>T</sup> represents the tap-weight vector of
the TEQ at time n; and <b>x</b>(n) = [x(n-v)x(n-v+1) ... x(n)]<sup>T</sup> represents the tap-input
of the target channel. At the beginning of the training phase, parameters
<b>w</b>, <b>b</b>, and step size, µ<sub>w</sub>, should be set to proper initial values according to the
design criteria. Therefore, TEQ 18 will be updated 512 times before entering
the channel-estimating phase for a different sample.</p>
    <p num="0032">As described above, the estimated result, h<sub>est</sub>(n), is used
immediately for the subsequent channel-updating phase. Therefore, real-time
processing may be difficult to achieve because the duration of the operation of
channel estimator 28 is only one sample. Fig. 6 is a block diagram of a DMT
transceiver 100 consistent with another embodiment of the present invention.
Referring to Fig. 6, the TF-TEQ algorithm is modified to provide a delay for
practical implementation. DMT transceiver 100 is identical to DMT transceiver
10 shown in Fig. 5, except DMT 100 includes an additional delay circuit 32. 
The coefficients b(n) of target channel 14 are set to h<sub>est,d</sub> (n). Delay circuit 32
provides h<sub>est,d</sub> (n) for the last estimation of the effective channel, wherein the
subscript d represents a delay coefficient. As an example, delay circuit 32
provides a delay of two symbols. Therefore, the duration of channel estimator
28 operation is extended to two DMT symbols because the effective channel
is estimated for every two symbols. This eases the design of channel
estimator 28 and allows the TF-TEQ algorithm of the present invention to be
even more easily implemented.</p>
    <p num="0033">Fig. 7 shows an embodiment of channel estimator 28 consistent
with the present invention. Referring to Fig. 7, channel estimator 28 includes
a divider 282 coupled to an inverse FFT (IFFT) 284. Divider 282 receives
Y(k) and X(k) as inputs and performs a division operation Y(k)/X(k) on an
element-by-element basis. The result is an estimation of the effective channel
in the frequency domain. To ascertain the estimated channel in the time
domain, IFFT 284 performs inverse Fast Fourier Transform on the result. A
calculating means 286 is coupled to IFFT 284 to receive the output of IFFT
284 and performs a rectangular windowing function to limit the estimated
result to <i>v</i> + 1 samples. Rectangular windowing function can be easily
implemented because it retains samples inside the window and forces those
outside the window to a value of zero. Calculating means 286 then provides
the windowed result to another calculating means 288 to normalize the energy
of h(n)<sub>est</sub> to a preset value. Calculating means 288 is provided to avoid
obtaining a trivial result where w(n) = h<sub>est</sub>(n) = [0,0...0].</p>
    <p num="0034">Channel estimator 28 may also be implemented without divider
282. Because X(k) is known prior to the TEQ training, the value of 1/X(k) may
be stored in a memory prior to the initiation of the algorithm. The
mathematical calculation of dividing Y(k) with X(k) may therefore be carried
out as a multiplication of Y(k) and 1/X(k). Channel estimator 28 may therefore
be implemented with a multiplier instead of a divider, which is more complex
to implement.</p>
    <p num="0035">Table 1 summarizes the number of multiplications that the
TF-TEQ algorithm of the present invention requires. <img id="img-00110001" orientation="unknown" wi="117" img-format="tif" img-content="tb" file="00110001.tif" inline="no" he="92"/>
Because the number of multiplications is evaluated for two training symbols
from the channel-updating and channel-estimating phases, the number of
multiplications for each training symbol is halved. The total number of
multiplications for two symbols is 60,416, or 30,208 per symbol.</p>
    <p num="0036">Fig. 8 is a diagram comparing the computational complexity of
the known FLMS and TLMS algorithms with the TF-TEQ algorithm of the
present invention. Referring to Fig. 8, the FLMS algorithm clearly is the most
complex while the TF-TEQ algorithm is the least complex.</p>
    <p num="0037">In addition, several computer simulations have been performed
to show the performance of the TF-TEQ algorithm of the present invention.
Fig. 9 is a block diagram of the simulation environment. All of the simulations
focused on receiver training at a remote site. The size of the FFT was 512
and the length of CP, <i>v</i>, was 32 samples as defined by the ADSL standards.
During signal transmission, the channel was injected with several noise
sources such as Additive White Gaussian Noise (AWGN) and cross-talk
noise. For purposes of the present simulations, only Far-end Cross-talk
(FEXT), Near-end Cross-talk (NEXT), and AWGN were taken into
consideration. Because of the finite number of taps, the TEQ generally
cannot perform precise shortening of a channel response. Therefore, some
energy will lie outside the largest (<i>v</i> + 1) contiguous samples of the effective
channel, h<sub>eff</sub>(n), which is the cascade of the channel response and TEQ. A 
performance index, Shortened Signal-to-Noise Ratio (SSNR), is defined as
follows to gauge the performance of the TF-TEQ algorithm of the present
invention.
<st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">SSNR=10log<st32:sub pos="post">10</st32:sub> {<st32:frac align="centre">E<st32:sub pos="post">in</st32:sub><st32:over>E<st32:sub pos="post">leakage</st32:sub></st32:over></st32:frac>}</st32:df>
E<sub>in</sub> represents the highest energy of the contiguous v+1 sample, and E<sub>leakage</sub>
represents the energy of the samples outside the window. SSNR values
represent the performance of the algorithms in the time-domain, and the
greater the SSNR values, the better the performance.</p>
    <p num="0038">Table 2 shows the SSNR values for eight test channels, or
loops, after 500 training symbols for the FLMS, TLMS, and TF-TEQ
algorithms. From the table, the TLMS algorithm performed well for some of
the loops. Although the FLMS algorithm performed well for some of the loops,
it also performed the worst for some other loops. In contrast, the TF-TEQ
algorithm of the present invention performed well and consistently for all of the
loops.
<tables><table><tgroup cols="5"><tbody><row><entry align="center">Channel</entry><entry align="center">Before shortened</entry><entry align="center">FLMS</entry><entry align="center">TLMS</entry><entry align="center">TF-TEQ</entry></row><row><entry align="center">T1.601 Loop#7</entry><entry align="center">20.73</entry><entry align="center">25.6</entry><entry align="center">42.9</entry><entry align="center">41.2</entry></row><row><entry align="center">T1.601 Loop#9</entry><entry align="center">19.78</entry><entry align="center">35.1</entry><entry align="center">38.2</entry><entry align="center">39.0</entry></row><row><entry align="center">T1.601 Loop#13</entry><entry align="center">19.65</entry><entry align="center">25.8</entry><entry align="center">41.6</entry><entry align="center">41.7</entry></row><row><entry align="center">CSA Loop#4</entry><entry align="center">17.51</entry><entry align="center">38.3</entry><entry align="center">42.0</entry><entry align="center">37.2</entry></row><row><entry align="center">CSA Loop#6</entry><entry align="center">21.32</entry><entry align="center">47.6</entry><entry align="center">47.8</entry><entry align="center">45.8</entry></row><row><entry align="center">CSA Loop#7</entry><entry align="center">19.08</entry><entry align="center">34.4</entry><entry align="center">46.0</entry><entry align="center">37.5</entry></row><row><entry align="center">CSA Loop#8</entry><entry align="center">19.41</entry><entry align="center">28.1</entry><entry align="center">51.9</entry><entry align="center">42.2</entry></row><row><entry align="center">Mid CSA loop</entry><entry align="center">22.83</entry><entry align="center">45.7</entry><entry align="center">45.2</entry><entry align="center">42.1</entry></row></tbody></tgroup></table></tables></p>
    <p num="0039">In addition to the SSNR values, the performance of the
algorithms, in combined TEQ and FEQ, may also be evaluated in the
frequency domain with SNR values. The SNR values of each sub-channel 
are obtained by computing the difference between the equalized output, Y(k),
and the training symbol, X(k), as follows:
<st32:df xmlns:st32="http://www.ir-facility.org/ns/st32/" align="center">SNR<st32:sub pos="post">n</st32:sub> = <st32:frac align="centre"><st32:fence style="single" type="bar">X<st32:sub pos="post">n</st32:sub></st32:fence><st32:sup pos="post">2</st32:sup><st32:over><st32:fence style="single" type="bar">E<st32:sub pos="post">avg,n</st32:sub></st32:fence><st32:sup pos="post">2</st32:sup></st32:over></st32:frac></st32:df>
wherein n represents the n-th sub-channel. The geometric SNR may be
calculated as
<img id="img-00130001" orientation="unknown" wi="156" img-format="tif" img-content="mf" file="00130001.tif" inline="no" he="15"/>
for n=0 to 255. In addition, the TEQ is trained with an on-line algorithm,
followed by FEQ training. When the TEQ coefficients become available, the
training symbols K are injected into the system, and an average error E<sub>avg</sub> is
calculated for each sub-channel.</p>
    <p num="0040">Table 3 shows the SNR<sub>geom</sub> values for eight test loops after 500
training symbols for the FLMS, TLMS, and TF-TEQ algorithms. The table
shows that the loops cannot effectively shorten the channel response with the
FLMS algorithm. This is due to the severe ISI, which prevents the FLMS
algorithm from improving the SNR values effectively. The TF-TEQ algorithm
of the present invention achieved better SNR values than the TLMS
algorithms for most loops.</p>
    <p num="0041">Although the TLMS algorithm appears to out-perform the TF-TEQ
algorithm in the time domain for some of the loops, the TF-TEQ
algorithm clearly provided superior performance to the TLMS algorithm in the
frequency domain. Therefore, from both the SSNR and SNR values, the TF-TEQ
algorithm has shown to be more robust than either of the TLMS or FLMS
algorithm in the frequency domain. Therefore, the TF-TEQ algorithm of the
present invention provides comparable, and often superior, performance than
either of the known TLMS and FLMS algorithms in both the time and
frequency domains at an added advantage of being less complex to
implement than either of the FLMS or TLMS algorithm. <tables><table><tgroup cols="5"><tbody><row><entry align="center">Channel</entry><entry align="center"><i>SNR<sub>geom</sub></i> before shortend</entry><entry align="center">FLMS</entry><entry align="center">TLMS</entry><entry align="center">TF-TEQ</entry></row><row><entry align="center">T1.601 Loop#7</entry><entry align="center">18.557</entry><entry align="center">29.220</entry><entry align="center">31.814</entry><entry align="center">34.641</entry></row><row><entry align="center">T1.601 Loop#9</entry><entry align="center">19.630</entry><entry align="center">36.679</entry><entry align="center">29.712</entry><entry align="center">35.846</entry></row><row><entry align="center">T1.601 Loop#13</entry><entry align="center">18.603</entry><entry align="center">31.737</entry><entry align="center">35.507</entry><entry align="center">37.940</entry></row><row><entry align="center">CSA Loop#4</entry><entry align="center">24.697</entry><entry align="center">44.748</entry><entry align="center">40.522</entry><entry align="center">39.474</entry></row><row><entry align="center">CSA Loop#6</entry><entry align="center">25.124</entry><entry align="center">48.972</entry><entry align="center">43.282</entry><entry align="center">47.467</entry></row><row><entry align="center">CSA Loop#7</entry><entry align="center">23.846</entry><entry align="center">38.734</entry><entry align="center">42.147</entry><entry align="center">40.823</entry></row><row><entry align="center">CSA Loop#8</entry><entry align="center">20.946</entry><entry align="center">36.044</entry><entry align="center">45.253</entry><entry align="center">43.248</entry></row><row><entry align="center">Mid CSA loop</entry><entry align="center">30.915</entry><entry align="center">50.102</entry><entry align="center">41.894</entry><entry align="center">45.916</entry></row></tbody></tgroup></table></tables></p>
    <p num="0042">Other embodiments of the invention will be apparent to those
skilled in the art from consideration of the specification and practice of the
invention disclosed herein. It is intended that the specification and examples
be considered as exemplary only, with a true scope and spirit of the invention
being indicated by the following claims.</p>
  </description>
  <claims load-source="ep" status="new" lang="EN">
    <claim num="1">
      <claim-text>A method for training a time-domain equalizer having at least
one coefficient, comprising:
<claim-text><claim-text>estimating a channel;</claim-text><claim-text>initializing the at least one coefficient of the time-domain equalizer;</claim-text><claim-text>updating the at least one coefficient of the time-domain equalizer with
the estimated channel;</claim-text><claim-text>retaining the updated estimated channel;</claim-text><claim-text>fixing the updated value of the at least one coefficient of the time-domain
equalizer for at least a one-symbol duration;</claim-text><claim-text>calculating a modulated symbol based on an output of the time-domain
equalizer;</claim-text><claim-text>calculating a second value for the estimated channel based on the
modulated symbol;</claim-text><claim-text>setting the estimated channel to the second value; and</claim-text><claim-text>repeating the step of updating the time-domain equalizer through the
step of setting the estimated channel to the second value until a
predetermined condition has been met.</claim-text></claim-text></claim-text>
    </claim>
    <claim num="2">
      <claim-text>The method as claimed in claim 1, further comprising a step of
calculating the energy of the channel.</claim-text>
    </claim>
    <claim num="3">
      <claim-text>The method as claimed in claim 1 or 2, wherein the step of updating
the time-domain equalizer includes updating the time-domain equalizer with a least-mean-square
algorithm.</claim-text>
    </claim>
    <claim num="4">
      <claim-text>The method as claimed in claim 1, 2 or 3 further comprising a step of
fixing the updated value of the at least one coefficient of the time-domain equalizer
for at least a two-symbol duration.</claim-text>
    </claim>
    <claim num="5">
      <claim-text>An asymmetric digital subscriber line system including a
transmitted signal having a plurality of training symbols, comprising:
<claim-text><claim-text>a channel for receiving the transmitted signal;</claim-text><claim-text>a target channel for receiving the transmitted signal;</claim-text><claim-text>a first mixer coupled to the channel for receiving an output of the
channel;</claim-text><claim-text>a time-domain equalizer coupled to the first mixer to receive an output
of the first mixer, the time-domain equalizer including a plurality of
coefficients;</claim-text><claim-text>a first modulator coupled to the time-domain equalizer to provide a first
modulated signal;</claim-text><claim-text>a channel estimator, coupled to the first modulator to receive the first
modulated signal, providing an estimated channel to the target channel; and</claim-text><claim-text>a second mixer, coupled to receive the output of the time-domain
equalizer and an output of the target channel, providing an output to the time-domain
equalizer.</claim-text></claim-text></claim-text>
    </claim>
    <claim num="6">
      <claim-text>The system as claimed in claim 5, wherein the first modulator
includes a first encoder coupled to received an output of the time-domain
equalizer, and a first Fast Fourier Transform means coupled to the first
encoder to provide the first modulated signal.</claim-text>
    </claim>
    <claim num="7">
      <claim-text>The system as claimed in claim 5 or 6, further comprising a
second modulator coupled to receive the transmitted signal, the second
modulator providing a second modulated signal.</claim-text>
    </claim>
    <claim num="8">
      <claim-text>The system as claimed in claim 7, wherein the second
modulator includes
<claim-text><claim-text>a second encoder for receiving the transmitted signal; and</claim-text><claim-text>a second Fast Fourier Transform means, coupled to the second
encoder, providing the second modulated signal to the channel estimator.</claim-text></claim-text></claim-text>
    </claim>
    <claim num="9">
      <claim-text>The system as claimed in claim 7 or 8, wherein the channel
estimator includes a divider for dividing the first modulated signal from the
second modulated signal.</claim-text>
    </claim>
    <claim num="10">
      <claim-text>The system as claimed in claim 7, 8 or 9, wherein the channel
estimator includes a memory for storing an inverse value of the second
modulated signal.</claim-text>
    </claim>
    <claim num="11">
      <claim-text>The system as claimed in claim 7, 8, 9 or 10 wherein the
channel estimator includes a multiplier for multiplying the first modulated
signal with the inverse of the second modulated signal.</claim-text>
    </claim>
    <claim num="12">
      <claim-text>The system as claimed in any one of claims 5 to 11, wherein
the first mixer providing circular convolution between the channel and the
training symbols of the transmitted signal.</claim-text>
    </claim>
    <claim num="13">
      <claim-text>The system as claimed in any one of claims 5 to 12, wherein
the second mixer providing circular convolution between the estimated
channel and the coefficients of the time-domain equalizer.</claim-text>
    </claim>
    <claim num="14">
      <claim-text>The system as claimed in any one of claims 5 to 13, wherein
the channel estimator delays the estimated channel by at least one symbol.</claim-text>
    </claim>
    <claim num="15">
      <claim-text>The system as claimed in any one of claims 5 to 14, wherein
the channel estimator delays the estimated channel by at least two symbols.</claim-text>
    </claim>
    <claim num="16">
      <claim-text>The system as claimed in any one of claims 5 to 1-5, wherein
the time-domain equalizer comprises an L-tap adaptive FIR filter.</claim-text>
    </claim>
    <claim num="17">
      <claim-text>A discrete multi-tone transceiver, comprising:
<claim-text><claim-text>a channel estimator for receiving a first modulated signal and a second
modulated signal, including
<claim-text><claim-text>a first calculating means for estimating an effective channel in
the frequency domain based on the first and second modulated signals,</claim-text><claim-text>an inverse Fast Fourier Transform means coupled to the first
calculating means for converting the effective channel to the time domain, and</claim-text><claim-text>a rectangular windowing means coupled to the inverse Fast
Fourier Transform means for providing a rectangular windowing function on
the effective channel in the time domain to limit the estimated channel to v+1
samples.</claim-text></claim-text></claim-text></claim-text></claim-text>
    </claim>
    <claim num="18">
      <claim-text>The transceiver as claimed in claim 17, further comprising a
second calculating means for normalizing an energy of the estimated channel.</claim-text>
    </claim>
    <claim num="19">
      <claim-text>The system as claimed in claim 17 or 18, wherein the first
calculating means includes a divider for dividing the first modulated signal
from the second modulated signal.</claim-text>
    </claim>
    <claim num="20">
      <claim-text>The system as claimed in claim 17, 18 or 19, wherein the first
calculating means includes a memory for storing an inverse value of the
second modulated signal, and a multiplier for multiplying the first modulated
signal with the inverse of the second modulated signal.</claim-text>
    </claim>
    <claim num="21">
      <claim-text>A method for training a time-domain equalizer having at least
one coefficient, comprising:
<claim-text><claim-text>receiving a first modulated signal in the frequency domain;</claim-text><claim-text>receiving a second modulated signal in the frequency domain;</claim-text><claim-text>estimating an effective channel in the frequency domain based on the
first and second modulated signals;</claim-text><claim-text>converting the effective channel to the time domain; and</claim-text><claim-text>rectangular windowing of the effective channel in the time domain to
limit the estimated channel to v+1 samples.</claim-text></claim-text></claim-text>
    </claim>
    <claim num="22">
      <claim-text>The method as claimed in claim 21, further comprising a step of
normalizing an energy of the estimated channel in the time domain.</claim-text>
    </claim>
    <claim num="23">
      <claim-text>The method as claimed in claim 21 or 22, wherein the step of
estimating an effective channel comprises dividing the first modulated signal
from the second modulated signal.</claim-text>
    </claim>
    <claim num="24">
      <claim-text>The method as claimed in claim 21, 22 or 23, wherein the step
of estimating an effective channel comprises multiplying the first modulated
signal with the inverse of the second modulated signal.</claim-text>
    </claim>
    <claim num="25">
      <claim-text>The method as claimed in any one of claims 21 to 24, wherein
the step of estimating an effective channel is delayed for a duration of at
least one symbol.</claim-text>
    </claim>
    <claim num="26">
      <claim-text>The method as claimed in any one of claims 21 to 25, wherein
the step of estimating an effective channel is delayed for a duration of at
least two symbols.</claim-text>
    </claim>
    <claim num="27">
      <claim-text>The method as claimed in any one of claims 21 to 26, further
comprising a step of updating a plurality of coefficients of a time-domain
equalizer with the windowed estimated channel in the time domain.</claim-text>
    </claim>
  </claims>
  <copyright>User acknowledges that the Information Retrieval Facility (IRF) and its third party providers retain all right, title and interest in and to this xml under applicable copyright laws. User acquires no ownership rights to this xml including but not limited to its format. User hereby accepts the terms and conditions of the Licence Agreement set forth at http://www.ir-facility.org/legal/marec/data_licence</copyright>
</patent-document>
